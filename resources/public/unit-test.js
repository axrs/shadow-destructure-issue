if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.520";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  var and__4120__auto__ = typeof setTimeout !== "undefined";
  if (and__4120__auto__) {
    var and__4120__auto____$1 = setTimeout(f, 0);
    if (cljs.core.truth_(and__4120__auto____$1)) {
      return true;
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4120__auto__ = ty;
    if (cljs.core.truth_(and__4120__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4120__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5718__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5718__auto__)) {
    var s = temp__5718__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__1994 = arguments.length;
  switch(G__1994) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___1996 = arguments.length;
      var i__4731__auto___1997 = 0;
      while (true) {
        if (i__4731__auto___1997 < len__4730__auto___1996) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___1997]);
          var G__1998 = i__4731__auto___1997 + 1;
          i__4731__auto___1997 = G__1998;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4607__auto___1999 = dimarray.length;
  var i_2000 = 0;
  while (true) {
    if (i_2000 < n__4607__auto___1999) {
      dimarray[i_2000] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__2001 = i_2000 + 1;
      i_2000 = G__2001;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq1991) {
  var G__1992 = cljs.core.first(seq1991);
  var seq1991__$1 = cljs.core.next(seq1991);
  var G__1993 = cljs.core.first(seq1991__$1);
  var seq1991__$2 = cljs.core.next(seq1991__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1992, G__1993, seq1991__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4607__auto___2002 = len;
  var i_2003 = 0;
  while (true) {
    if (i_2003 < n__4607__auto___2002) {
      new_arr[i_2003] = arr[i_2003];
      var G__2004 = i_2003 + 1;
      i_2003 = G__2004;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__2005 = i + 1;
      i = G__2005;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__2010 = arguments.length;
  switch(G__2010) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2013 = arguments.length;
      var i__4731__auto___2014 = 0;
      while (true) {
        if (i__4731__auto___2014 < len__4730__auto___2013) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2014]);
          var G__2015 = i__4731__auto___2014 + 1;
          i__4731__auto___2014 = G__2015;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.array_QMARK_(array);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2011) {
    var e_2016 = e2011;
    cljs.core.maybe_warn(e_2016);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq2007) {
  var G__2008 = cljs.core.first(seq2007);
  var seq2007__$1 = cljs.core.next(seq2007);
  var G__2009 = cljs.core.first(seq2007__$1);
  var seq2007__$2 = cljs.core.next(seq2007__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2008, G__2009, seq2007__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__2022 = arguments.length;
  switch(G__2022) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2025 = arguments.length;
      var i__4731__auto___2026 = 0;
      while (true) {
        if (i__4731__auto___2026 < len__4730__auto___2025) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2026]);
          var G__2027 = i__4731__auto___2026 + 1;
          i__4731__auto___2026 = G__2027;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.array_QMARK_(array);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e2023) {
    var e_2028 = e2023;
    cljs.core.maybe_warn(e_2028);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq2018) {
  var G__2019 = cljs.core.first(seq2018);
  var seq2018__$1 = cljs.core.next(seq2018);
  var G__2020 = cljs.core.first(seq2018__$1);
  var seq2018__$2 = cljs.core.next(seq2018__$1);
  var G__2021 = cljs.core.first(seq2018__$2);
  var seq2018__$3 = cljs.core.next(seq2018__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2019, G__2020, G__2021, seq2018__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__2033 = arguments.length;
  switch(G__2033) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2035 = arguments.length;
      var i__4731__auto___2036 = 0;
      while (true) {
        if (i__4731__auto___2036 < len__4730__auto___2035) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2036]);
          var G__2037 = i__4731__auto___2036 + 1;
          i__4731__auto___2036 = G__2037;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = cljs.core.array_QMARK_(array);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2030) {
  var G__2031 = cljs.core.first(seq2030);
  var seq2030__$1 = cljs.core.next(seq2030);
  var G__2032 = cljs.core.first(seq2030__$1);
  var seq2030__$2 = cljs.core.next(seq2030__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2031, G__2032, seq2030__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__2043 = arguments.length;
  switch(G__2043) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2045 = arguments.length;
      var i__4731__auto___2046 = 0;
      while (true) {
        if (i__4731__auto___2046 < len__4730__auto___2045) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2046]);
          var G__2047 = i__4731__auto___2046 + 1;
          i__4731__auto___2046 = G__2047;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = cljs.core.array_QMARK_(array);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq2039) {
  var G__2040 = cljs.core.first(seq2039);
  var seq2039__$1 = cljs.core.next(seq2039);
  var G__2041 = cljs.core.first(seq2039__$1);
  var seq2039__$2 = cljs.core.next(seq2039__$1);
  var G__2042 = cljs.core.first(seq2039__$2);
  var seq2039__$3 = cljs.core.next(seq2039__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2040, G__2041, G__2042, seq2039__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__2052 = arguments.length;
  switch(G__2052) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2054 = arguments.length;
      var i__4731__auto___2055 = 0;
      while (true) {
        if (i__4731__auto___2055 < len__4730__auto___2054) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2055]);
          var G__2056 = i__4731__auto___2055 + 1;
          i__4731__auto___2055 = G__2056;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq2049) {
  var G__2050 = cljs.core.first(seq2049);
  var seq2049__$1 = cljs.core.next(seq2049);
  var G__2051 = cljs.core.first(seq2049__$1);
  var seq2049__$2 = cljs.core.next(seq2049__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2050, G__2051, seq2049__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__2062 = arguments.length;
  switch(G__2062) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2064 = arguments.length;
      var i__4731__auto___2065 = 0;
      while (true) {
        if (i__4731__auto___2065 < len__4730__auto___2064) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2065]);
          var G__2066 = i__4731__auto___2065 + 1;
          i__4731__auto___2065 = G__2066;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq2058) {
  var G__2059 = cljs.core.first(seq2058);
  var seq2058__$1 = cljs.core.next(seq2058);
  var G__2060 = cljs.core.first(seq2058__$1);
  var seq2058__$2 = cljs.core.next(seq2058__$1);
  var G__2061 = cljs.core.first(seq2058__$2);
  var seq2058__$3 = cljs.core.next(seq2058__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2059, G__2060, G__2061, seq2058__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__2068 = arguments.length;
  switch(G__2068) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2073 = arguments.length;
  var i__4731__auto___2074 = 0;
  while (true) {
    if (i__4731__auto___2074 < len__4730__auto___2073) {
      args__4736__auto__.push(arguments[i__4731__auto___2074]);
      var G__2075 = i__4731__auto___2074 + 1;
      i__4731__auto___2074 = G__2075;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq2070) {
  var G__2071 = cljs.core.first(seq2070);
  var seq2070__$1 = cljs.core.next(seq2070);
  var G__2072 = cljs.core.first(seq2070__$1);
  var seq2070__$2 = cljs.core.next(seq2070__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2071, G__2072, seq2070__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__2077 = arguments.length;
  switch(G__2077) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null, this$);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4434__auto__.call(null, this$, a);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4431__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4434__auto__.call(null, this$, a, b);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4431__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4434__auto__.call(null, this$, a, b, c);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4431__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4434__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4431__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4434__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4431__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4434__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4431__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._invoke[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4434__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4431__auto__ = cljs.core._invoke["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4431__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4433__auto__ = value == null ? null : value;
    var m__4434__auto__ = cljs.core._clone[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4434__auto__.call(null, value);
    } else {
      var m__4431__auto__ = cljs.core._clone["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4431__auto__.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._count[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._count["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._empty[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._empty["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._conj[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4434__auto__.call(null, coll, o);
    } else {
      var m__4431__auto__ = cljs.core._conj["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4431__auto__.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__2080 = arguments.length;
  switch(G__2080) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._nth[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4434__auto__.call(null, coll, n);
    } else {
      var m__4431__auto__ = cljs.core._nth["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4431__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._nth[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4434__auto__.call(null, coll, n, not_found);
    } else {
      var m__4431__auto__ = cljs.core._nth["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4431__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._rest[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._rest["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._next[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._next["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__2083 = arguments.length;
  switch(G__2083) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._lookup[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4434__auto__.call(null, o, k);
    } else {
      var m__4431__auto__ = cljs.core._lookup["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4431__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._lookup[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4434__auto__.call(null, o, k, not_found);
    } else {
      var m__4431__auto__ = cljs.core._lookup["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4431__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._assoc[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4434__auto__.call(null, coll, k, v);
    } else {
      var m__4431__auto__ = cljs.core._assoc["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4431__auto__.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._find[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._find["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._dissoc[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4434__auto__.call(null, coll, k);
    } else {
      var m__4431__auto__ = cljs.core._dissoc["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4431__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._key[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._key["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._val[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._val["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._disjoin[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4434__auto__.call(null, coll, v);
    } else {
      var m__4431__auto__ = cljs.core._disjoin["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4431__auto__.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._peek[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._peek["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._pop[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._pop["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._assoc_n[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4434__auto__.call(null, coll, n, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_n["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4431__auto__.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._deref[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._deref["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4434__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4431__auto__ = cljs.core._deref_with_timeout["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4431__auto__.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._meta[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._meta["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._with_meta[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4434__auto__.call(null, o, meta);
    } else {
      var m__4431__auto__ = cljs.core._with_meta["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4431__auto__.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__2086 = arguments.length;
  switch(G__2086) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4434__auto__.call(null, coll, f);
    } else {
      var m__4431__auto__ = cljs.core._reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4431__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4434__auto__.call(null, coll, f, start);
    } else {
      var m__4431__auto__ = cljs.core._reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4431__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4434__auto__.call(null, coll, f, init);
    } else {
      var m__4431__auto__ = cljs.core._kv_reduce["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4431__auto__.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._equiv[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4434__auto__.call(null, o, other);
    } else {
      var m__4431__auto__ = cljs.core._equiv["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4431__auto__.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._hash[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._hash["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._seq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4434__auto__.call(null, o);
    } else {
      var m__4431__auto__ = cljs.core._seq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4431__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._rseq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._rseq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4434__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core._sorted_seq["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4431__auto__.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4434__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4431__auto__ = cljs.core._sorted_seq_from["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4431__auto__.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._entry_key[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4434__auto__.call(null, coll, entry);
    } else {
      var m__4431__auto__ = cljs.core._entry_key["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4431__auto__.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._comparator[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._comparator["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4433__auto__ = writer == null ? null : writer;
    var m__4434__auto__ = cljs.core._write[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4434__auto__.call(null, writer, s);
    } else {
      var m__4431__auto__ = cljs.core._write["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4431__auto__.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4433__auto__ = writer == null ? null : writer;
    var m__4434__auto__ = cljs.core._flush[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4434__auto__.call(null, writer);
    } else {
      var m__4431__auto__ = cljs.core._flush["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4431__auto__.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._pr_writer[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4434__auto__.call(null, o, writer, opts);
    } else {
      var m__4431__auto__ = cljs.core._pr_writer["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4431__auto__.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._realized_QMARK_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._notify_watches[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4434__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4431__auto__ = cljs.core._notify_watches["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4431__auto__.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._add_watch[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4434__auto__.call(null, this$, key, f);
    } else {
      var m__4431__auto__ = cljs.core._add_watch["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4431__auto__.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4433__auto__ = this$ == null ? null : this$;
    var m__4434__auto__ = cljs.core._remove_watch[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4434__auto__.call(null, this$, key);
    } else {
      var m__4431__auto__ = cljs.core._remove_watch["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4431__auto__.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._as_transient[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._as_transient["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4434__auto__.call(null, tcoll, val);
    } else {
      var m__4431__auto__ = cljs.core._conj_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4431__auto__.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4434__auto__.call(null, tcoll);
    } else {
      var m__4431__auto__ = cljs.core._persistent_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4431__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4434__auto__.call(null, tcoll, key, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4431__auto__.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4434__auto__.call(null, tcoll, key);
    } else {
      var m__4431__auto__ = cljs.core._dissoc_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4431__auto__.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4434__auto__.call(null, tcoll, n, val);
    } else {
      var m__4431__auto__ = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4431__auto__.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4434__auto__.call(null, tcoll);
    } else {
      var m__4431__auto__ = cljs.core._pop_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4431__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4433__auto__ = tcoll == null ? null : tcoll;
    var m__4434__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4434__auto__.call(null, tcoll, v);
    } else {
      var m__4431__auto__ = cljs.core._disjoin_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4431__auto__.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._compare[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4434__auto__.call(null, x, y);
    } else {
      var m__4431__auto__ = cljs.core._compare["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4431__auto__.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._drop_first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._drop_first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_first[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_first["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_rest["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._chunked_next[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._chunked_next["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._name[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._name["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._namespace[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._namespace["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4434__auto__.call(null, o, new_value);
    } else {
      var m__4431__auto__ = cljs.core._reset_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4431__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__2089 = arguments.length;
  switch(G__2089) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4434__auto__.call(null, o, f);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4431__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4434__auto__.call(null, o, f, a);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4431__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4434__auto__.call(null, o, f, a, b);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4431__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4434__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4431__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4431__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4433__auto__ = o == null ? null : o;
    var m__4434__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4434__auto__.call(null, o, new_value);
    } else {
      var m__4431__auto__ = cljs.core._vreset_BANG_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4431__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4433__auto__ = coll == null ? null : coll;
    var m__4434__auto__ = cljs.core._iterator[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4434__auto__.call(null, coll);
    } else {
      var m__4431__auto__ = cljs.core._iterator["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4431__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__2091 = i + 2;
        var G__2092 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__2091;
        h1 = G__2092;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__2095 = i + 1;
          var G__2096 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__2095;
          hash = G__2096;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return cljs.core._hash(o) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__2100 = o;
        switch(G__2100) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = cljs.core.not(a.ns);
      if (and__4120__auto__) {
        return b.ns;
      } else {
        return and__4120__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2102 = a.ns;
            var G__2103 = b.ns;
            return goog.array.defaultCompare(G__2102, G__2103);
          }();
          if (0 === nsc) {
            var G__2104 = a.name;
            var G__2105 = b.name;
            return goog.array.defaultCompare(G__2104, G__2105);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2106 = a.name;
        var G__2107 = b.name;
        return goog.array.defaultCompare(G__2106, G__2107);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__2109 = null;
  var G__2109__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__2109__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__2109 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2109__2.call(this, self__, coll);
      case 3:
        return G__2109__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2109.cljs$core$IFn$_invoke$arity$2 = G__2109__2;
  G__2109.cljs$core$IFn$_invoke$arity$3 = G__2109__3;
  return G__2109;
}();
cljs.core.Symbol.prototype.apply = function(self__, args2108) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2108)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4243__auto__ = self__._hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__2111 = arguments.length;
  switch(G__2111) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__2113 = name.fqn;
            name = G__2113;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__2157 = null;
  var G__2157__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2115 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2115.cljs$core$IFn$_invoke$arity$0 ? fexpr__2115.cljs$core$IFn$_invoke$arity$0() : fexpr__2115.call(null);
  };
  var G__2157__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2116 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2116.cljs$core$IFn$_invoke$arity$1 ? fexpr__2116.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2116.call(null, a);
  };
  var G__2157__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2117 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2117.cljs$core$IFn$_invoke$arity$2 ? fexpr__2117.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2117.call(null, a, b);
  };
  var G__2157__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2118 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2118.cljs$core$IFn$_invoke$arity$3 ? fexpr__2118.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2118.call(null, a, b, c);
  };
  var G__2157__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2119 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2119.cljs$core$IFn$_invoke$arity$4 ? fexpr__2119.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2119.call(null, a, b, c, d);
  };
  var G__2157__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2120 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2120.cljs$core$IFn$_invoke$arity$5 ? fexpr__2120.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2120.call(null, a, b, c, d, e);
  };
  var G__2157__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2121 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2121.cljs$core$IFn$_invoke$arity$6 ? fexpr__2121.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2121.call(null, a, b, c, d, e, f);
  };
  var G__2157__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2122 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2122.cljs$core$IFn$_invoke$arity$7 ? fexpr__2122.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2122.call(null, a, b, c, d, e, f, g);
  };
  var G__2157__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2123 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2123.cljs$core$IFn$_invoke$arity$8 ? fexpr__2123.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2123.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2157__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2124 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2124.cljs$core$IFn$_invoke$arity$9 ? fexpr__2124.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2124.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2157__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2125 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2125.cljs$core$IFn$_invoke$arity$10 ? fexpr__2125.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2125.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2157__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2126 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2126.cljs$core$IFn$_invoke$arity$11 ? fexpr__2126.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2126.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2157__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2127 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2127.cljs$core$IFn$_invoke$arity$12 ? fexpr__2127.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2127.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2157__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2128 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2128.cljs$core$IFn$_invoke$arity$13 ? fexpr__2128.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2128.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2157__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2129 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2129.cljs$core$IFn$_invoke$arity$14 ? fexpr__2129.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2129.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2157__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2130 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2130.cljs$core$IFn$_invoke$arity$15 ? fexpr__2130.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2130.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2157__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2131 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2131.cljs$core$IFn$_invoke$arity$16 ? fexpr__2131.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2131.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2157__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2132 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2132.cljs$core$IFn$_invoke$arity$17 ? fexpr__2132.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2132.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2157__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2133 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2133.cljs$core$IFn$_invoke$arity$18 ? fexpr__2133.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2133.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2157__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2134 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2134.cljs$core$IFn$_invoke$arity$19 ? fexpr__2134.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2134.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2157__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__2135 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__2135.cljs$core$IFn$_invoke$arity$20 ? fexpr__2135.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2135.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2157__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2157 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2157__1.call(this, self__);
      case 2:
        return G__2157__2.call(this, self__, a);
      case 3:
        return G__2157__3.call(this, self__, a, b);
      case 4:
        return G__2157__4.call(this, self__, a, b, c);
      case 5:
        return G__2157__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2157__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2157__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2157__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2157__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2157__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2157__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2157__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2157__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2157__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2157__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2157__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2157__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2157__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2157__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2157__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2157__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2157__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2157.cljs$core$IFn$_invoke$arity$1 = G__2157__1;
  G__2157.cljs$core$IFn$_invoke$arity$2 = G__2157__2;
  G__2157.cljs$core$IFn$_invoke$arity$3 = G__2157__3;
  G__2157.cljs$core$IFn$_invoke$arity$4 = G__2157__4;
  G__2157.cljs$core$IFn$_invoke$arity$5 = G__2157__5;
  G__2157.cljs$core$IFn$_invoke$arity$6 = G__2157__6;
  G__2157.cljs$core$IFn$_invoke$arity$7 = G__2157__7;
  G__2157.cljs$core$IFn$_invoke$arity$8 = G__2157__8;
  G__2157.cljs$core$IFn$_invoke$arity$9 = G__2157__9;
  G__2157.cljs$core$IFn$_invoke$arity$10 = G__2157__10;
  G__2157.cljs$core$IFn$_invoke$arity$11 = G__2157__11;
  G__2157.cljs$core$IFn$_invoke$arity$12 = G__2157__12;
  G__2157.cljs$core$IFn$_invoke$arity$13 = G__2157__13;
  G__2157.cljs$core$IFn$_invoke$arity$14 = G__2157__14;
  G__2157.cljs$core$IFn$_invoke$arity$15 = G__2157__15;
  G__2157.cljs$core$IFn$_invoke$arity$16 = G__2157__16;
  G__2157.cljs$core$IFn$_invoke$arity$17 = G__2157__17;
  G__2157.cljs$core$IFn$_invoke$arity$18 = G__2157__18;
  G__2157.cljs$core$IFn$_invoke$arity$19 = G__2157__19;
  G__2157.cljs$core$IFn$_invoke$arity$20 = G__2157__20;
  G__2157.cljs$core$IFn$_invoke$arity$21 = G__2157__21;
  G__2157.cljs$core$IFn$_invoke$arity$22 = G__2157__22;
  return G__2157;
}();
cljs.core.Var.prototype.apply = function(self__, args2114) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2114)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__2136 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2136.cljs$core$IFn$_invoke$arity$0 ? fexpr__2136.cljs$core$IFn$_invoke$arity$0() : fexpr__2136.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__2137 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2137.cljs$core$IFn$_invoke$arity$1 ? fexpr__2137.cljs$core$IFn$_invoke$arity$1(a) : fexpr__2137.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__2138 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2138.cljs$core$IFn$_invoke$arity$2 ? fexpr__2138.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__2138.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__2139 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2139.cljs$core$IFn$_invoke$arity$3 ? fexpr__2139.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__2139.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__2140 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2140.cljs$core$IFn$_invoke$arity$4 ? fexpr__2140.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__2140.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__2141 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2141.cljs$core$IFn$_invoke$arity$5 ? fexpr__2141.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__2141.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__2142 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2142.cljs$core$IFn$_invoke$arity$6 ? fexpr__2142.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__2142.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__2143 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2143.cljs$core$IFn$_invoke$arity$7 ? fexpr__2143.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__2143.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__2144 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2144.cljs$core$IFn$_invoke$arity$8 ? fexpr__2144.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__2144.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__2145 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2145.cljs$core$IFn$_invoke$arity$9 ? fexpr__2145.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__2145.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__2146 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2146.cljs$core$IFn$_invoke$arity$10 ? fexpr__2146.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__2146.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__2147 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2147.cljs$core$IFn$_invoke$arity$11 ? fexpr__2147.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__2147.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__2148 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2148.cljs$core$IFn$_invoke$arity$12 ? fexpr__2148.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__2148.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__2149 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2149.cljs$core$IFn$_invoke$arity$13 ? fexpr__2149.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__2149.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__2150 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2150.cljs$core$IFn$_invoke$arity$14 ? fexpr__2150.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__2150.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__2151 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2151.cljs$core$IFn$_invoke$arity$15 ? fexpr__2151.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__2151.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__2152 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2152.cljs$core$IFn$_invoke$arity$16 ? fexpr__2152.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__2152.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__2153 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2153.cljs$core$IFn$_invoke$arity$17 ? fexpr__2153.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__2153.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__2154 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2154.cljs$core$IFn$_invoke$arity$18 ? fexpr__2154.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__2154.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__2155 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2155.cljs$core$IFn$_invoke$arity$19 ? fexpr__2155.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__2155.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__2156 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__2156.cljs$core$IFn$_invoke$arity$20 ? fexpr__2156.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__2156.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return cljs.core._seq(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return cljs.core._first(coll);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return cljs.core._rest(coll);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return cljs.core._next(coll);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__2168 = arguments.length;
  switch(G__2168) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2170 = arguments.length;
      var i__4731__auto___2171 = 0;
      while (true) {
        if (i__4731__auto___2171 < len__4730__auto___2170) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2171]);
          var G__2172 = i__4731__auto___2171 + 1;
          i__4731__auto___2171 = G__2172;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__2173 = y;
        var G__2174 = cljs.core.first(more);
        var G__2175 = cljs.core.next(more);
        x = G__2173;
        y = G__2174;
        more = G__2175;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq2165) {
  var G__2166 = cljs.core.first(seq2165);
  var seq2165__$1 = cljs.core.next(seq2165);
  var G__2167 = cljs.core.first(seq2165__$1);
  var seq2165__$2 = cljs.core.next(seq2165__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2166, G__2167, seq2165__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2176 = n + 1;
      var G__2177 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2178 = cljs.core.next(coll__$1);
      n = G__2176;
      hash_code = G__2177;
      coll__$1 = G__2178;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2179 = n + 1;
      var G__2180 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__2181 = cljs.core.next(coll__$1);
      n = G__2179;
      hash_code = G__2180;
      coll__$1 = G__2181;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
var G__2182_2185 = cljs.core._count;
var G__2183_2186 = "null";
var G__2184_2187 = function(G__2182_2185, G__2183_2186) {
  return function(_) {
    return 0;
  };
}(G__2182_2185, G__2183_2186);
goog.object.set(G__2182_2185, G__2183_2186, G__2184_2187);
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__2188 = this$__$1.valueOf();
    var G__2189 = other.valueOf();
    return goog.array.defaultCompare(G__2188, G__2189);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__4433__auto__ = inst == null ? null : inst;
    var m__4434__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4434__auto__.call(null, inst);
    } else {
      var m__4431__auto__ = cljs.core.inst_ms_STAR_["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4431__auto__.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
var G__2191_2194 = cljs.core._equiv;
var G__2192_2195 = "number";
var G__2193_2196 = function(G__2191_2194, G__2192_2195) {
  return function(x, o) {
    return x === o;
  };
}(G__2191_2194, G__2192_2195);
goog.object.set(G__2191_2194, G__2192_2195, G__2193_2196);
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
var G__2197_2200 = cljs.core._meta;
var G__2198_2201 = "function";
var G__2199_2202 = function(G__2197_2200, G__2198_2201) {
  return function(_) {
    return null;
  };
}(G__2197_2200, G__2198_2201);
goog.object.set(G__2197_2200, G__2198_2201, G__2199_2202);
goog.object.set(cljs.core.IHash, "_", true);
var G__2203_2206 = cljs.core._hash;
var G__2204_2207 = "_";
var G__2205_2208 = function(G__2203_2206, G__2204_2207) {
  return function(o) {
    return goog.getUid(o);
  };
}(G__2203_2206, G__2204_2207);
goog.object.set(G__2203_2206, G__2204_2207, G__2205_2208);
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__2210 = arguments.length;
  switch(G__2210) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2211 = val;
          var G__2212 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2211, G__2212) : f.call(null, G__2211, G__2212);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2218 = nval;
          var G__2219 = n + 1;
          val = G__2218;
          n = G__2219;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2213 = val__$1;
        var G__2214 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2213, G__2214) : f.call(null, G__2213, G__2214);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2220 = nval;
        var G__2221 = n + 1;
        val__$1 = G__2220;
        n = G__2221;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2215 = val__$1;
        var G__2216 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2215, G__2216) : f.call(null, G__2215, G__2216);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2222 = nval;
        var G__2223 = n + 1;
        val__$1 = G__2222;
        n = G__2223;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__2225 = arguments.length;
  switch(G__2225) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__2226 = val;
          var G__2227 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2226, G__2227) : f.call(null, G__2226, G__2227);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__2233 = nval;
          var G__2234 = n + 1;
          val = G__2233;
          n = G__2234;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2228 = val__$1;
        var G__2229 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2228, G__2229) : f.call(null, G__2228, G__2229);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2235 = nval;
        var G__2236 = n + 1;
        val__$1 = G__2235;
        n = G__2236;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__2230 = val__$1;
        var G__2231 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2230, G__2231) : f.call(null, G__2230, G__2231);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2237 = nval;
        var G__2238 = n + 1;
        val__$1 = G__2237;
        n = G__2238;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__2242 = arguments.length;
  switch(G__2242) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4219__auto__ = 0;
      var y__4220__auto__ = start + len;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2244 = idx + 1;
          idx = G__2244;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__2246 = arguments.length;
  switch(G__2246) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4222__auto__ = len - 1;
      var y__4223__auto__ = start;
      return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__2248 = idx - 1;
          idx = G__2248;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__2249 = null;
  var G__2249__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2249__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2249 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2249__1.call(this, x);
      case 2:
        return G__2249__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2249.cljs$core$IFn$_invoke$arity$1 = G__2249__1;
  G__2249.cljs$core$IFn$_invoke$arity$2 = G__2249__2;
  return G__2249;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__2250 = null;
  var G__2250__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2250__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2250 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2250__1.call(this, x);
      case 2:
        return G__2250__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2250.cljs$core$IFn$_invoke$arity$1 = G__2250__1;
  G__2250.cljs$core$IFn$_invoke$arity$2 = G__2250__2;
  return G__2250;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4219__auto__ = 0;
  var y__4220__auto__ = self__.arr.length - self__.i;
  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
var G__2251_2254 = cljs.core.IndexedSeq.prototype;
var G__2252_2255 = cljs.core.ITER_SYMBOL;
var G__2253_2256 = function(G__2251_2254, G__2252_2255) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2251_2254, G__2252_2255);
goog.object.set(G__2251_2254, G__2252_2255, G__2253_2256);
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__2258 = arguments.length;
  switch(G__2258) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__2261 = arguments.length;
  switch(G__2261) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__2263 = null;
  var G__2263__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2263__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2263 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2263__1.call(this, x);
      case 2:
        return G__2263__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2263.cljs$core$IFn$_invoke$arity$1 = G__2263__1;
  G__2263.cljs$core$IFn$_invoke$arity$2 = G__2263__2;
  return G__2263;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__2264 = null;
  var G__2264__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2264__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2264 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2264__1.call(this, x);
      case 2:
        return G__2264__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2264.cljs$core$IFn$_invoke$arity$1 = G__2264__1;
  G__2264.cljs$core$IFn$_invoke$arity$2 = G__2264__2;
  return G__2264;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
var G__2265_2268 = cljs.core.RSeq.prototype;
var G__2266_2269 = cljs.core.ITER_SYMBOL;
var G__2267_2270 = function(G__2265_2268, G__2266_2269) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2265_2268, G__2266_2269);
goog.object.set(G__2265_2268, G__2266_2269, G__2267_2270);
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__2271 = sn;
      s = G__2271;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
var G__2272_2275 = cljs.core._equiv;
var G__2273_2276 = "_";
var G__2274_2277 = function(G__2272_2275, G__2273_2276) {
  return function(x, o) {
    return x === o;
  };
}(G__2272_2275, G__2273_2276);
goog.object.set(G__2272_2275, G__2273_2276, G__2274_2277);
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__2282 = arguments.length;
  switch(G__2282) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2284 = arguments.length;
      var i__4731__auto___2285 = 0;
      while (true) {
        if (i__4731__auto___2285 < len__4730__auto___2284) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2285]);
          var G__2286 = i__4731__auto___2285 + 1;
          i__4731__auto___2285 = G__2286;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__2287 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__2288 = cljs.core.first(xs);
      var G__2289 = cljs.core.next(xs);
      coll = G__2287;
      x = G__2288;
      xs = G__2289;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq2279) {
  var G__2280 = cljs.core.first(seq2279);
  var seq2279__$1 = cljs.core.next(seq2279);
  var G__2281 = cljs.core.first(seq2279__$1);
  var seq2279__$2 = cljs.core.next(seq2279__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2280, G__2281, seq2279__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return cljs.core._empty(coll);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__2292 = cljs.core.next(s);
      var G__2293 = acc + 1;
      s = G__2292;
      acc = G__2293;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return cljs.core._count(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__2297 = arguments.length;
  switch(G__2297) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2299 = cljs.core.next(coll);
            var G__2300 = n - 1;
            coll = G__2299;
            n = G__2300;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__2301 = cljs.core.next(coll);
            var G__2302 = n - 1;
            var G__2303 = not_found;
            coll = G__2301;
            n = G__2302;
            not_found = G__2303;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__2305 = arguments.length;
  switch(G__2305) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4131__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4131__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4131__auto__) {
                return or__4131__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5718__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5718__auto__) {
      var xs__$1 = temp__5718__auto__;
      var G__2315 = n__$1 - 1;
      var G__2316 = cljs.core.rest(xs__$1);
      n__$1 = G__2315;
      xs = G__2316;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__2318 = arguments.length;
  switch(G__2318) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__2327 = arguments.length;
  switch(G__2327) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2329 = arguments.length;
      var i__4731__auto___2330 = 0;
      while (true) {
        if (i__4731__auto___2330 < len__4730__auto___2329) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2330]);
          var G__2331 = i__4731__auto___2330 + 1;
          i__4731__auto___2330 = G__2331;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__2332 = ret;
      var G__2333 = cljs.core.first(kvs);
      var G__2334 = cljs.core.second(kvs);
      var G__2335 = cljs.core.nnext(kvs);
      coll = G__2332;
      k = G__2333;
      v = G__2334;
      kvs = G__2335;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq2323) {
  var G__2324 = cljs.core.first(seq2323);
  var seq2323__$1 = cljs.core.next(seq2323);
  var G__2325 = cljs.core.first(seq2323__$1);
  var seq2323__$2 = cljs.core.next(seq2323__$1);
  var G__2326 = cljs.core.first(seq2323__$2);
  var seq2323__$3 = cljs.core.next(seq2323__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2324, G__2325, G__2326, seq2323__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__2340 = arguments.length;
  switch(G__2340) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2342 = arguments.length;
      var i__4731__auto___2343 = 0;
      while (true) {
        if (i__4731__auto___2343 < len__4730__auto___2342) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2343]);
          var G__2344 = i__4731__auto___2343 + 1;
          i__4731__auto___2343 = G__2344;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2345 = ret;
        var G__2346 = cljs.core.first(ks);
        var G__2347 = cljs.core.next(ks);
        coll = G__2345;
        k = G__2346;
        ks = G__2347;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq2337) {
  var G__2338 = cljs.core.first(seq2337);
  var seq2337__$1 = cljs.core.next(seq2337);
  var G__2339 = cljs.core.first(seq2337__$1);
  var seq2337__$2 = cljs.core.next(seq2337__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2338, G__2339, seq2337__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4131__auto__ = goog.isFunction(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__2351 = null;
  var G__2351__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__2351__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__2351__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__2351__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__2351__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__2351__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__2351__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__2351__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__2351__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__2351__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__2351__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__2351__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__2351__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__2351__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__2351__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__2351__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__2351__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__2351__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__2351__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__2351__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__2351__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__2351__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__2351 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__2351__1.call(this, self__);
      case 2:
        return G__2351__2.call(this, self__, a);
      case 3:
        return G__2351__3.call(this, self__, a, b);
      case 4:
        return G__2351__4.call(this, self__, a, b, c);
      case 5:
        return G__2351__5.call(this, self__, a, b, c, d);
      case 6:
        return G__2351__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__2351__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__2351__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__2351__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__2351__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__2351__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__2351__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__2351__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__2351__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__2351__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__2351__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__2351__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__2351__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__2351__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__2351__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__2351__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__2351__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2351.cljs$core$IFn$_invoke$arity$1 = G__2351__1;
  G__2351.cljs$core$IFn$_invoke$arity$2 = G__2351__2;
  G__2351.cljs$core$IFn$_invoke$arity$3 = G__2351__3;
  G__2351.cljs$core$IFn$_invoke$arity$4 = G__2351__4;
  G__2351.cljs$core$IFn$_invoke$arity$5 = G__2351__5;
  G__2351.cljs$core$IFn$_invoke$arity$6 = G__2351__6;
  G__2351.cljs$core$IFn$_invoke$arity$7 = G__2351__7;
  G__2351.cljs$core$IFn$_invoke$arity$8 = G__2351__8;
  G__2351.cljs$core$IFn$_invoke$arity$9 = G__2351__9;
  G__2351.cljs$core$IFn$_invoke$arity$10 = G__2351__10;
  G__2351.cljs$core$IFn$_invoke$arity$11 = G__2351__11;
  G__2351.cljs$core$IFn$_invoke$arity$12 = G__2351__12;
  G__2351.cljs$core$IFn$_invoke$arity$13 = G__2351__13;
  G__2351.cljs$core$IFn$_invoke$arity$14 = G__2351__14;
  G__2351.cljs$core$IFn$_invoke$arity$15 = G__2351__15;
  G__2351.cljs$core$IFn$_invoke$arity$16 = G__2351__16;
  G__2351.cljs$core$IFn$_invoke$arity$17 = G__2351__17;
  G__2351.cljs$core$IFn$_invoke$arity$18 = G__2351__18;
  G__2351.cljs$core$IFn$_invoke$arity$19 = G__2351__19;
  G__2351.cljs$core$IFn$_invoke$arity$20 = G__2351__20;
  G__2351.cljs$core$IFn$_invoke$arity$21 = G__2351__21;
  G__2351.cljs$core$IFn$_invoke$arity$22 = G__2351__22;
  return G__2351;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args2350) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2350)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4120__auto__ = !(o == null);
    if (and__4120__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4120__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__2358 = arguments.length;
  switch(G__2358) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2360 = arguments.length;
      var i__4731__auto___2361 = 0;
      while (true) {
        if (i__4731__auto___2361 < len__4730__auto___2360) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2361]);
          var G__2362 = i__4731__auto___2361 + 1;
          i__4731__auto___2361 = G__2362;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__2363 = ret;
        var G__2364 = cljs.core.first(ks);
        var G__2365 = cljs.core.next(ks);
        coll = G__2363;
        k = G__2364;
        ks = G__2365;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq2355) {
  var G__2356 = cljs.core.first(seq2355);
  var seq2355__$1 = cljs.core.next(seq2355);
  var G__2357 = cljs.core.first(seq2355__$1);
  var seq2355__$2 = cljs.core.next(seq2355__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2356, G__2357, seq2355__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__2379 = arguments.length;
  switch(G__2379) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2383 = arguments.length;
      var i__4731__auto___2384 = 0;
      while (true) {
        if (i__4731__auto___2384 < len__4730__auto___2383) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2384]);
          var G__2385 = i__4731__auto___2384 + 1;
          i__4731__auto___2384 = G__2385;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4752__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq2378) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2378));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2386 = i__$1 + 1;
      var G__2387 = j__$1 + 1;
      var G__2388 = len__$1 - 1;
      i__$1 = G__2386;
      j__$1 = G__2387;
      len__$1 = G__2388;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__2389 = i__$1 - 1;
      var G__2390 = j__$1 - 1;
      var G__2391 = len__$1 - 1;
      i__$1 = G__2389;
      j__$1 = G__2390;
      len__$1 = G__2391;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4131__auto__ = s == null;
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4131__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__2404 = arguments.length;
  switch(G__2404) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2406 = arguments.length;
      var i__4731__auto___2407 = 0;
      while (true) {
        if (i__4731__auto___2407 < len__4730__auto___2406) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2407]);
          var G__2408 = i__4731__auto___2407 + 1;
          i__4731__auto___2407 = G__2408;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__2409 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__2410 = etc;
          s = G__2409;
          xs = G__2410;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq2401) {
  var G__2402 = cljs.core.first(seq2401);
  var seq2401__$1 = cljs.core.next(seq2401);
  var G__2403 = cljs.core.first(seq2401__$1);
  var seq2401__$2 = cljs.core.next(seq2401__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2402, G__2403, seq2401__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__2413 = arguments.length;
  switch(G__2413) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__2415 = xs;
      var G__2416 = ys;
      var G__2417 = len;
      var G__2418 = n + 1;
      xs = G__2415;
      ys = G__2416;
      len = G__2417;
      n = G__2418;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__2420 = arguments.length;
  switch(G__2420) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    var G__2421_2424 = a;
    var G__2422_2425 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__2421_2424, G__2422_2425);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__2427 = arguments.length;
  switch(G__2427) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__2429 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__2430 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__2428 = cljs.core.fn__GT_comparator(comp);
    return fexpr__2428.cljs$core$IFn$_invoke$arity$2 ? fexpr__2428.cljs$core$IFn$_invoke$arity$2(G__2429, G__2430) : fexpr__2428.call(null, G__2429, G__2430);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__2433 = arguments.length;
  switch(G__2433) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var s = temp__5718__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__2434 = val__$1;
        var G__2435 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2434, G__2435) : f.call(null, G__2434, G__2435);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__2437 = nval;
        var G__2438 = cljs.core.next(coll__$1);
        val__$1 = G__2437;
        coll__$1 = G__2438;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__2440 = arguments.length;
  switch(G__2440) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__2441 = acc;
          var G__2442 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2441, G__2442) : f.call(null, G__2441, G__2442);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__2446 = nacc;
          acc = G__2446;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__2443 = acc;
        var G__2444 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2443, G__2444) : f.call(null, G__2443, G__2444);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__2447 = nacc;
        acc = G__2447;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__2449 = arguments.length;
  switch(G__2449) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__2454 = arguments.length;
  switch(G__2454) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__2456 = null;
    var G__2456__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__2456__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__2456__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__2456 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__2456__0.call(this);
        case 1:
          return G__2456__1.call(this, x);
        case 2:
          return G__2456__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2456.cljs$core$IFn$_invoke$arity$0 = G__2456__0;
    G__2456.cljs$core$IFn$_invoke$arity$1 = G__2456__1;
    G__2456.cljs$core$IFn$_invoke$arity$2 = G__2456__2;
    return G__2456;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__2458 = arguments.length;
  switch(G__2458) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__2464 = arguments.length;
  switch(G__2464) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2466 = arguments.length;
      var i__4731__auto___2467 = 0;
      while (true) {
        if (i__4731__auto___2467 < len__4730__auto___2466) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2467]);
          var G__2468 = i__4731__auto___2467 + 1;
          i__4731__auto___2467 = G__2468;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq2461) {
  var G__2462 = cljs.core.first(seq2461);
  var seq2461__$1 = cljs.core.next(seq2461);
  var G__2463 = cljs.core.first(seq2461__$1);
  var seq2461__$2 = cljs.core.next(seq2461__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2462, G__2463, seq2461__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__2473 = arguments.length;
  switch(G__2473) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2475 = arguments.length;
      var i__4731__auto___2476 = 0;
      while (true) {
        if (i__4731__auto___2476 < len__4730__auto___2475) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2476]);
          var G__2477 = i__4731__auto___2476 + 1;
          i__4731__auto___2476 = G__2477;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq2470) {
  var G__2471 = cljs.core.first(seq2470);
  var seq2470__$1 = cljs.core.next(seq2470);
  var G__2472 = cljs.core.first(seq2470__$1);
  var seq2470__$2 = cljs.core.next(seq2470__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2471, G__2472, seq2470__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__2482 = arguments.length;
  switch(G__2482) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2484 = arguments.length;
      var i__4731__auto___2485 = 0;
      while (true) {
        if (i__4731__auto___2485 < len__4730__auto___2484) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2485]);
          var G__2486 = i__4731__auto___2485 + 1;
          i__4731__auto___2485 = G__2486;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq2479) {
  var G__2480 = cljs.core.first(seq2479);
  var seq2479__$1 = cljs.core.next(seq2479);
  var G__2481 = cljs.core.first(seq2479__$1);
  var seq2479__$2 = cljs.core.next(seq2479__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2480, G__2481, seq2479__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__2491 = arguments.length;
  switch(G__2491) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2493 = arguments.length;
      var i__4731__auto___2494 = 0;
      while (true) {
        if (i__4731__auto___2494 < len__4730__auto___2493) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2494]);
          var G__2495 = i__4731__auto___2494 + 1;
          i__4731__auto___2494 = G__2495;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq2488) {
  var G__2489 = cljs.core.first(seq2488);
  var seq2488__$1 = cljs.core.next(seq2488);
  var G__2490 = cljs.core.first(seq2488__$1);
  var seq2488__$2 = cljs.core.next(seq2488__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2489, G__2490, seq2488__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__2500 = arguments.length;
  switch(G__2500) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2502 = arguments.length;
      var i__4731__auto___2503 = 0;
      while (true) {
        if (i__4731__auto___2503 < len__4730__auto___2502) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2503]);
          var G__2504 = i__4731__auto___2503 + 1;
          i__4731__auto___2503 = G__2504;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__2505 = y;
        var G__2506 = cljs.core.first(more);
        var G__2507 = cljs.core.next(more);
        x = G__2505;
        y = G__2506;
        more = G__2507;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq2497) {
  var G__2498 = cljs.core.first(seq2497);
  var seq2497__$1 = cljs.core.next(seq2497);
  var G__2499 = cljs.core.first(seq2497__$1);
  var seq2497__$2 = cljs.core.next(seq2497__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2498, G__2499, seq2497__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__2512 = arguments.length;
  switch(G__2512) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2514 = arguments.length;
      var i__4731__auto___2515 = 0;
      while (true) {
        if (i__4731__auto___2515 < len__4730__auto___2514) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2515]);
          var G__2516 = i__4731__auto___2515 + 1;
          i__4731__auto___2515 = G__2516;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__2517 = y;
        var G__2518 = cljs.core.first(more);
        var G__2519 = cljs.core.next(more);
        x = G__2517;
        y = G__2518;
        more = G__2519;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq2509) {
  var G__2510 = cljs.core.first(seq2509);
  var seq2509__$1 = cljs.core.next(seq2509);
  var G__2511 = cljs.core.first(seq2509__$1);
  var seq2509__$2 = cljs.core.next(seq2509__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2510, G__2511, seq2509__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__2524 = arguments.length;
  switch(G__2524) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2526 = arguments.length;
      var i__4731__auto___2527 = 0;
      while (true) {
        if (i__4731__auto___2527 < len__4730__auto___2526) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2527]);
          var G__2528 = i__4731__auto___2527 + 1;
          i__4731__auto___2527 = G__2528;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__2529 = y;
        var G__2530 = cljs.core.first(more);
        var G__2531 = cljs.core.next(more);
        x = G__2529;
        y = G__2530;
        more = G__2531;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq2521) {
  var G__2522 = cljs.core.first(seq2521);
  var seq2521__$1 = cljs.core.next(seq2521);
  var G__2523 = cljs.core.first(seq2521__$1);
  var seq2521__$2 = cljs.core.next(seq2521__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2522, G__2523, seq2521__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__2536 = arguments.length;
  switch(G__2536) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2538 = arguments.length;
      var i__4731__auto___2539 = 0;
      while (true) {
        if (i__4731__auto___2539 < len__4730__auto___2538) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2539]);
          var G__2540 = i__4731__auto___2539 + 1;
          i__4731__auto___2539 = G__2540;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__2541 = y;
        var G__2542 = cljs.core.first(more);
        var G__2543 = cljs.core.next(more);
        x = G__2541;
        y = G__2542;
        more = G__2543;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq2533) {
  var G__2534 = cljs.core.first(seq2533);
  var seq2533__$1 = cljs.core.next(seq2533);
  var G__2535 = cljs.core.first(seq2533__$1);
  var seq2533__$2 = cljs.core.next(seq2533__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2534, G__2535, seq2533__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__2548 = arguments.length;
  switch(G__2548) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2550 = arguments.length;
      var i__4731__auto___2551 = 0;
      while (true) {
        if (i__4731__auto___2551 < len__4730__auto___2550) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2551]);
          var G__2552 = i__4731__auto___2551 + 1;
          i__4731__auto___2551 = G__2552;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4219__auto__ = x;
  var y__4220__auto__ = y;
  return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4219__auto__ = x;
    var y__4220__auto__ = y;
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq2545) {
  var G__2546 = cljs.core.first(seq2545);
  var seq2545__$1 = cljs.core.next(seq2545);
  var G__2547 = cljs.core.first(seq2545__$1);
  var seq2545__$2 = cljs.core.next(seq2545__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2546, G__2547, seq2545__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__2557 = arguments.length;
  switch(G__2557) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2559 = arguments.length;
      var i__4731__auto___2560 = 0;
      while (true) {
        if (i__4731__auto___2560 < len__4730__auto___2559) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2560]);
          var G__2561 = i__4731__auto___2560 + 1;
          i__4731__auto___2560 = G__2561;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4222__auto__ = x;
  var y__4223__auto__ = y;
  return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4222__auto__ = x;
    var y__4223__auto__ = y;
    return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq2554) {
  var G__2555 = cljs.core.first(seq2554);
  var seq2554__$1 = cljs.core.next(seq2554);
  var G__2556 = cljs.core.first(seq2554__$1);
  var seq2554__$2 = cljs.core.next(seq2554__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2555, G__2556, seq2554__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__2566 = arguments.length;
  switch(G__2566) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2568 = arguments.length;
      var i__4731__auto___2569 = 0;
      while (true) {
        if (i__4731__auto___2569 < len__4730__auto___2568) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2569]);
          var G__2570 = i__4731__auto___2569 + 1;
          i__4731__auto___2569 = G__2570;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq2563) {
  var G__2564 = cljs.core.first(seq2563);
  var seq2563__$1 = cljs.core.next(seq2563);
  var G__2565 = cljs.core.first(seq2563__$1);
  var seq2563__$2 = cljs.core.next(seq2563__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2564, G__2565, seq2563__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__2575 = arguments.length;
  switch(G__2575) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2577 = arguments.length;
      var i__4731__auto___2578 = 0;
      while (true) {
        if (i__4731__auto___2578 < len__4730__auto___2577) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2578]);
          var G__2579 = i__4731__auto___2578 + 1;
          i__4731__auto___2578 = G__2579;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq2572) {
  var G__2573 = cljs.core.first(seq2572);
  var seq2572__$1 = cljs.core.next(seq2572);
  var G__2574 = cljs.core.first(seq2572__$1);
  var seq2572__$2 = cljs.core.next(seq2572__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2573, G__2574, seq2572__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__2584 = arguments.length;
  switch(G__2584) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2586 = arguments.length;
      var i__4731__auto___2587 = 0;
      while (true) {
        if (i__4731__auto___2587 < len__4730__auto___2586) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2587]);
          var G__2588 = i__4731__auto___2587 + 1;
          i__4731__auto___2587 = G__2588;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq2581) {
  var G__2582 = cljs.core.first(seq2581);
  var seq2581__$1 = cljs.core.next(seq2581);
  var G__2583 = cljs.core.first(seq2581__$1);
  var seq2581__$2 = cljs.core.next(seq2581__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2582, G__2583, seq2581__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__2593 = arguments.length;
  switch(G__2593) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2595 = arguments.length;
      var i__4731__auto___2596 = 0;
      while (true) {
        if (i__4731__auto___2596 < len__4730__auto___2595) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2596]);
          var G__2597 = i__4731__auto___2596 + 1;
          i__4731__auto___2596 = G__2597;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq2590) {
  var G__2591 = cljs.core.first(seq2590);
  var seq2590__$1 = cljs.core.next(seq2590);
  var G__2592 = cljs.core.first(seq2590__$1);
  var seq2590__$2 = cljs.core.next(seq2590__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2591, G__2592, seq2590__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__2602 = arguments.length;
  switch(G__2602) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2604 = arguments.length;
      var i__4731__auto___2605 = 0;
      while (true) {
        if (i__4731__auto___2605 < len__4730__auto___2604) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2605]);
          var G__2606 = i__4731__auto___2605 + 1;
          i__4731__auto___2605 = G__2606;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq2599) {
  var G__2600 = cljs.core.first(seq2599);
  var seq2599__$1 = cljs.core.next(seq2599);
  var G__2601 = cljs.core.first(seq2599__$1);
  var seq2599__$2 = cljs.core.next(seq2599__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2600, G__2601, seq2599__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__2611 = arguments.length;
  switch(G__2611) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2613 = arguments.length;
      var i__4731__auto___2614 = 0;
      while (true) {
        if (i__4731__auto___2614 < len__4730__auto___2613) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2614]);
          var G__2615 = i__4731__auto___2614 + 1;
          i__4731__auto___2614 = G__2615;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq2608) {
  var G__2609 = cljs.core.first(seq2608);
  var seq2608__$1 = cljs.core.next(seq2608);
  var G__2610 = cljs.core.first(seq2608__$1);
  var seq2608__$2 = cljs.core.next(seq2608__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2609, G__2610, seq2608__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__2620 = arguments.length;
  switch(G__2620) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2622 = arguments.length;
      var i__4731__auto___2623 = 0;
      while (true) {
        if (i__4731__auto___2623 < len__4730__auto___2622) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2623]);
          var G__2624 = i__4731__auto___2623 + 1;
          i__4731__auto___2623 = G__2624;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq2617) {
  var G__2618 = cljs.core.first(seq2617);
  var seq2617__$1 = cljs.core.next(seq2617);
  var G__2619 = cljs.core.first(seq2617__$1);
  var seq2617__$2 = cljs.core.next(seq2617__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2618, G__2619, seq2617__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__2629 = arguments.length;
  switch(G__2629) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2631 = arguments.length;
      var i__4731__auto___2632 = 0;
      while (true) {
        if (i__4731__auto___2632 < len__4730__auto___2631) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2632]);
          var G__2633 = i__4731__auto___2632 + 1;
          i__4731__auto___2632 = G__2633;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq2626) {
  var G__2627 = cljs.core.first(seq2626);
  var seq2626__$1 = cljs.core.next(seq2626);
  var G__2628 = cljs.core.first(seq2626__$1);
  var seq2626__$2 = cljs.core.next(seq2626__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2627, G__2628, seq2626__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__2638 = arguments.length;
  switch(G__2638) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2640 = arguments.length;
      var i__4731__auto___2641 = 0;
      while (true) {
        if (i__4731__auto___2641 < len__4730__auto___2640) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2641]);
          var G__2642 = i__4731__auto___2641 + 1;
          i__4731__auto___2641 = G__2642;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq2635) {
  var G__2636 = cljs.core.first(seq2635);
  var seq2635__$1 = cljs.core.next(seq2635);
  var G__2637 = cljs.core.first(seq2635__$1);
  var seq2635__$2 = cljs.core.next(seq2635__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2636, G__2637, seq2635__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__2647 = arguments.length;
  switch(G__2647) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2649 = arguments.length;
      var i__4731__auto___2650 = 0;
      while (true) {
        if (i__4731__auto___2650 < len__4730__auto___2649) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2650]);
          var G__2651 = i__4731__auto___2650 + 1;
          i__4731__auto___2650 = G__2651;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq2644) {
  var G__2645 = cljs.core.first(seq2644);
  var seq2644__$1 = cljs.core.next(seq2644);
  var G__2646 = cljs.core.first(seq2644__$1);
  var seq2644__$2 = cljs.core.next(seq2644__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2645, G__2646, seq2644__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__2656 = arguments.length;
  switch(G__2656) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2658 = arguments.length;
      var i__4731__auto___2659 = 0;
      while (true) {
        if (i__4731__auto___2659 < len__4730__auto___2658) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2659]);
          var G__2660 = i__4731__auto___2659 + 1;
          i__4731__auto___2659 = G__2660;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq2653) {
  var G__2654 = cljs.core.first(seq2653);
  var seq2653__$1 = cljs.core.next(seq2653);
  var G__2655 = cljs.core.first(seq2653__$1);
  var seq2653__$2 = cljs.core.next(seq2653__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2654, G__2655, seq2653__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__2665 = arguments.length;
  switch(G__2665) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2667 = arguments.length;
      var i__4731__auto___2668 = 0;
      while (true) {
        if (i__4731__auto___2668 < len__4730__auto___2667) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2668]);
          var G__2669 = i__4731__auto___2668 + 1;
          i__4731__auto___2668 = G__2669;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__2670 = y;
        var G__2671 = cljs.core.first(more);
        var G__2672 = cljs.core.next(more);
        x = G__2670;
        y = G__2671;
        more = G__2672;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq2662) {
  var G__2663 = cljs.core.first(seq2662);
  var seq2662__$1 = cljs.core.next(seq2662);
  var G__2664 = cljs.core.first(seq2662__$1);
  var seq2662__$2 = cljs.core.next(seq2662__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2663, G__2664, seq2662__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__2673 = n__$1 - 1;
      var G__2674 = cljs.core.next(xs);
      n__$1 = G__2673;
      xs = G__2674;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__2678 = arguments.length;
  switch(G__2678) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2680 = arguments.length;
      var i__4731__auto___2681 = 0;
      while (true) {
        if (i__4731__auto___2681 < len__4730__auto___2680) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2681]);
          var G__2682 = i__4731__auto___2681 + 1;
          i__4731__auto___2681 = G__2682;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__2683 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__2684 = cljs.core.next(more);
      sb = G__2683;
      more = G__2684;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq2676) {
  var G__2677 = cljs.core.first(seq2676);
  var seq2676__$1 = cljs.core.next(seq2676);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2677, seq2676__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__2686 = arguments.length;
  switch(G__2686) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__2688 = cljs.core.next(xs);
            var G__2689 = cljs.core.next(ys);
            xs = G__2688;
            ys = G__2689;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__2690 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__2691 = cljs.core.next(s);
        res = G__2690;
        s = G__2691;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__2692 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__2693 = cljs.core.next(s);
      h = G__2692;
      s = G__2693;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__2694 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__2695 = cljs.core.next(s__$1);
      h = G__2694;
      s__$1 = G__2695;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__2696_2712 = cljs.core.seq(fn_map);
  var chunk__2697_2713 = null;
  var count__2698_2714 = 0;
  var i__2699_2715 = 0;
  while (true) {
    if (i__2699_2715 < count__2698_2714) {
      var vec__2706_2716 = chunk__2697_2713.cljs$core$IIndexed$_nth$arity$2(null, i__2699_2715);
      var key_name_2717 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2706_2716, 0, null);
      var f_2718 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2706_2716, 1, null);
      var str_name_2719 = cljs.core.name(key_name_2717);
      goog.object.set(obj, str_name_2719, f_2718);
      var G__2720 = seq__2696_2712;
      var G__2721 = chunk__2697_2713;
      var G__2722 = count__2698_2714;
      var G__2723 = i__2699_2715 + 1;
      seq__2696_2712 = G__2720;
      chunk__2697_2713 = G__2721;
      count__2698_2714 = G__2722;
      i__2699_2715 = G__2723;
      continue;
    } else {
      var temp__5720__auto___2724 = cljs.core.seq(seq__2696_2712);
      if (temp__5720__auto___2724) {
        var seq__2696_2725__$1 = temp__5720__auto___2724;
        if (cljs.core.chunked_seq_QMARK_(seq__2696_2725__$1)) {
          var c__4550__auto___2726 = cljs.core.chunk_first(seq__2696_2725__$1);
          var G__2727 = cljs.core.chunk_rest(seq__2696_2725__$1);
          var G__2728 = c__4550__auto___2726;
          var G__2729 = cljs.core.count(c__4550__auto___2726);
          var G__2730 = 0;
          seq__2696_2712 = G__2727;
          chunk__2697_2713 = G__2728;
          count__2698_2714 = G__2729;
          i__2699_2715 = G__2730;
          continue;
        } else {
          var vec__2709_2731 = cljs.core.first(seq__2696_2725__$1);
          var key_name_2732 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2709_2731, 0, null);
          var f_2733 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2709_2731, 1, null);
          var str_name_2734 = cljs.core.name(key_name_2732);
          goog.object.set(obj, str_name_2734, f_2733);
          var G__2735 = cljs.core.next(seq__2696_2725__$1);
          var G__2736 = null;
          var G__2737 = 0;
          var G__2738 = 0;
          seq__2696_2712 = G__2735;
          chunk__2697_2713 = G__2736;
          count__2698_2714 = G__2737;
          i__2699_2715 = G__2738;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__2739 = null;
  var G__2739__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2739__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2739 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2739__1.call(this, x);
      case 2:
        return G__2739__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2739.cljs$core$IFn$_invoke$arity$1 = G__2739__1;
  G__2739.cljs$core$IFn$_invoke$arity$2 = G__2739__2;
  return G__2739;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__2740 = null;
  var G__2740__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__2740__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2740 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2740__1.call(this, x);
      case 2:
        return G__2740__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2740.cljs$core$IFn$_invoke$arity$1 = G__2740__1;
  G__2740.cljs$core$IFn$_invoke$arity$2 = G__2740__2;
  return G__2740;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
var G__2742_2745 = cljs.core.List.prototype;
var G__2743_2746 = cljs.core.ITER_SYMBOL;
var G__2744_2747 = function(G__2742_2745, G__2743_2746) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2742_2745, G__2743_2746);
goog.object.set(G__2742_2745, G__2743_2746, G__2744_2747);
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__2748 = null;
  var G__2748__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2748__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2748 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2748__1.call(this, x);
      case 2:
        return G__2748__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2748.cljs$core$IFn$_invoke$arity$1 = G__2748__1;
  G__2748.cljs$core$IFn$_invoke$arity$2 = G__2748__2;
  return G__2748;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__2749 = null;
  var G__2749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2749__1.call(this, x);
      case 2:
        return G__2749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2749.cljs$core$IFn$_invoke$arity$1 = G__2749__1;
  G__2749.cljs$core$IFn$_invoke$arity$2 = G__2749__2;
  return G__2749;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
var G__2750_2753 = cljs.core.EmptyList.prototype;
var G__2751_2754 = cljs.core.ITER_SYMBOL;
var G__2752_2755 = function(G__2750_2753, G__2751_2754) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2750_2753, G__2751_2754);
goog.object.set(G__2750_2753, G__2751_2754, G__2752_2755);
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4131__auto__ = cljs.core.rseq(coll);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___2758 = arguments.length;
  var i__4731__auto___2759 = 0;
  while (true) {
    if (i__4731__auto___2759 < len__4730__auto___2758) {
      args__4736__auto__.push(arguments[i__4731__auto___2759]);
      var G__2760 = i__4731__auto___2759 + 1;
      i__4731__auto___2759 = G__2760;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__2761 = cljs.core._next(xs__$1);
        xs__$1 = G__2761;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__2762 = i - 1;
      var G__2763 = cljs.core._conj(r, arr[i - 1]);
      i = G__2762;
      r = G__2763;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq2757) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq2757));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__2764 = null;
  var G__2764__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2764__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2764 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2764__1.call(this, x);
      case 2:
        return G__2764__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2764.cljs$core$IFn$_invoke$arity$1 = G__2764__1;
  G__2764.cljs$core$IFn$_invoke$arity$2 = G__2764__2;
  return G__2764;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__2765 = null;
  var G__2765__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2765__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2765 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2765__1.call(this, x);
      case 2:
        return G__2765__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2765.cljs$core$IFn$_invoke$arity$1 = G__2765__1;
  G__2765.cljs$core$IFn$_invoke$arity$2 = G__2765__2;
  return G__2765;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
var G__2766_2769 = cljs.core.Cons.prototype;
var G__2767_2770 = cljs.core.ITER_SYMBOL;
var G__2768_2771 = function(G__2766_2769, G__2767_2770) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2766_2769, G__2767_2770);
goog.object.set(G__2766_2769, G__2767_2770, G__2768_2771);
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = cljs.core.not(a.ns);
      if (and__4120__auto__) {
        return b.ns;
      } else {
        return and__4120__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__2773 = a.ns;
            var G__2774 = b.ns;
            return goog.array.defaultCompare(G__2773, G__2774);
          }();
          if (0 === nsc) {
            var G__2775 = a.name;
            var G__2776 = b.name;
            return goog.array.defaultCompare(G__2775, G__2776);
          } else {
            return nsc;
          }
        }
      } else {
        var G__2777 = a.name;
        var G__2778 = b.name;
        return goog.array.defaultCompare(G__2777, G__2778);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__2780 = null;
  var G__2780__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__2780__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__2780 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__2780__2.call(this, self__, coll);
      case 3:
        return G__2780__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__2780.cljs$core$IFn$_invoke$arity$2 = G__2780__2;
  G__2780.cljs$core$IFn$_invoke$arity$3 = G__2780__3;
  return G__2780;
}();
cljs.core.Keyword.prototype.apply = function(self__, args2779) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args2779)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4243__auto__ = self__._hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return cljs.core._namespace(x);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = cljs.core.ident_QMARK_(x);
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = x instanceof cljs.core.Symbol;
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(function() {
    var and__4120__auto__ = x instanceof cljs.core.Keyword;
    if (and__4120__auto__) {
      var and__4120__auto____$1 = cljs.core.namespace(x);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return true;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }());
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__2783 = arguments.length;
  switch(G__2783) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__2785 = null;
  var G__2785__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2785__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2785 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2785__1.call(this, x);
      case 2:
        return G__2785__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2785.cljs$core$IFn$_invoke$arity$1 = G__2785__1;
  G__2785.cljs$core$IFn$_invoke$arity$2 = G__2785__2;
  return G__2785;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__2786 = null;
  var G__2786__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2786__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2786 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2786__1.call(this, x);
      case 2:
        return G__2786__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2786.cljs$core$IFn$_invoke$arity$1 = G__2786__1;
  G__2786.cljs$core$IFn$_invoke$arity$2 = G__2786__2;
  return G__2786;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__2787 = ls.sval();
        ls = G__2787;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function(coll__$1) {
      return function() {
        return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
      };
    }(coll__$1), null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
var G__2788_2791 = cljs.core.LazySeq.prototype;
var G__2789_2792 = cljs.core.ITER_SYMBOL;
var G__2790_2793 = function(G__2788_2791, G__2789_2792) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2788_2791, G__2789_2792);
goog.object.set(G__2788_2791, G__2789_2792, G__2790_2793);
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__2795 = arguments.length;
  switch(G__2795) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__2797 = null;
  var G__2797__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__2797__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2797 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2797__1.call(this, x);
      case 2:
        return G__2797__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2797.cljs$core$IFn$_invoke$arity$1 = G__2797__1;
  G__2797.cljs$core$IFn$_invoke$arity$2 = G__2797__2;
  return G__2797;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__2798 = null;
  var G__2798__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__2798__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__2798 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__2798__1.call(this, x);
      case 2:
        return G__2798__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__2798.cljs$core$IFn$_invoke$arity$1 = G__2798__1;
  G__2798.cljs$core$IFn$_invoke$arity$2 = G__2798__2;
  return G__2798;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
var G__2799_2802 = cljs.core.ChunkedCons.prototype;
var G__2800_2803 = cljs.core.ITER_SYMBOL;
var G__2801_2804 = function(G__2799_2802, G__2800_2803) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2799_2802, G__2800_2803);
goog.object.set(G__2799_2802, G__2800_2803, G__2801_2804);
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__2806 = cljs.core.next(s);
      s = G__2806;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_2807 = 0;
  var xs_2808 = cljs.core.seq(coll);
  while (true) {
    if (xs_2808 == null) {
    } else {
      ret[i_2807] = cljs.core.to_array(cljs.core.first(xs_2808));
      var G__2809 = i_2807 + 1;
      var G__2810 = cljs.core.next(xs_2808);
      i_2807 = G__2809;
      xs_2808 = G__2810;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__2812 = arguments.length;
  switch(G__2812) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2814 = i + 1;
        var G__2815 = cljs.core.next(s__$1);
        i = G__2814;
        s__$1 = G__2815;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2816 = size;
    var i_2817 = 0;
    while (true) {
      if (i_2817 < n__4607__auto___2816) {
        a[i_2817] = init_val_or_seq;
        var G__2818 = i_2817 + 1;
        i_2817 = G__2818;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__2820 = arguments.length;
  switch(G__2820) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2822 = i + 1;
        var G__2823 = cljs.core.next(s__$1);
        i = G__2822;
        s__$1 = G__2823;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2824 = size;
    var i_2825 = 0;
    while (true) {
      if (i_2825 < n__4607__auto___2824) {
        a[i_2825] = init_val_or_seq;
        var G__2826 = i_2825 + 1;
        i_2825 = G__2826;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__2828 = arguments.length;
  switch(G__2828) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2830 = i + 1;
        var G__2831 = cljs.core.next(s__$1);
        i = G__2830;
        s__$1 = G__2831;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2832 = size;
    var i_2833 = 0;
    while (true) {
      if (i_2833 < n__4607__auto___2832) {
        a[i_2833] = init_val_or_seq;
        var G__2834 = i_2833 + 1;
        i_2833 = G__2834;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__2836 = arguments.length;
  switch(G__2836) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__2838 = i + 1;
        var G__2839 = cljs.core.next(s__$1);
        i = G__2838;
        s__$1 = G__2839;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4607__auto___2840 = size;
    var i_2841 = 0;
    while (true) {
      if (i_2841 < n__4607__auto___2840) {
        a[i_2841] = init_val_or_seq;
        var G__2842 = i_2841 + 1;
        i_2841 = G__2842;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__2843 = i + 1;
        var G__2844 = cljs.core.next(s);
        i = G__2843;
        s = G__2844;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__2849 = arguments.length;
  switch(G__2849) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2851 = arguments.length;
      var i__4731__auto___2852 = 0;
      while (true) {
        if (i__4731__auto___2852 < len__4730__auto___2851) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2852]);
          var G__2853 = i__4731__auto___2852 + 1;
          i__4731__auto___2852 = G__2853;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq2846) {
  var G__2847 = cljs.core.first(seq2846);
  var seq2846__$1 = cljs.core.next(seq2846);
  var G__2848 = cljs.core.first(seq2846__$1);
  var seq2846__$2 = cljs.core.next(seq2846__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2847, G__2848, seq2846__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__2860 = arguments.length;
  switch(G__2860) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2862 = arguments.length;
      var i__4731__auto___2863 = 0;
      while (true) {
        if (i__4731__auto___2863 < len__4730__auto___2862) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2863]);
          var G__2864 = i__4731__auto___2863 + 1;
          i__4731__auto___2863 = G__2864;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq2855) {
  var G__2856 = cljs.core.first(seq2855);
  var seq2855__$1 = cljs.core.next(seq2855);
  var G__2857 = cljs.core.first(seq2855__$1);
  var seq2855__$2 = cljs.core.next(seq2855__$1);
  var G__2858 = cljs.core.first(seq2855__$2);
  var seq2855__$3 = cljs.core.next(seq2855__$2);
  var G__2859 = cljs.core.first(seq2855__$3);
  var seq2855__$4 = cljs.core.next(seq2855__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2856, G__2857, G__2858, G__2859, seq2855__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__2869 = arguments.length;
  switch(G__2869) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2871 = arguments.length;
      var i__4731__auto___2872 = 0;
      while (true) {
        if (i__4731__auto___2872 < len__4730__auto___2871) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2872]);
          var G__2873 = i__4731__auto___2872 + 1;
          i__4731__auto___2872 = G__2873;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2874 = ntcoll;
      var G__2875 = cljs.core.first(vals);
      var G__2876 = cljs.core.next(vals);
      tcoll = G__2874;
      val = G__2875;
      vals = G__2876;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq2866) {
  var G__2867 = cljs.core.first(seq2866);
  var seq2866__$1 = cljs.core.next(seq2866);
  var G__2868 = cljs.core.first(seq2866__$1);
  var seq2866__$2 = cljs.core.next(seq2866__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2867, G__2868, seq2866__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__2882 = arguments.length;
  switch(G__2882) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2884 = arguments.length;
      var i__4731__auto___2885 = 0;
      while (true) {
        if (i__4731__auto___2885 < len__4730__auto___2884) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2885]);
          var G__2886 = i__4731__auto___2885 + 1;
          i__4731__auto___2885 = G__2886;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__2887 = ntcoll;
      var G__2888 = cljs.core.first(kvs);
      var G__2889 = cljs.core.second(kvs);
      var G__2890 = cljs.core.nnext(kvs);
      tcoll = G__2887;
      key = G__2888;
      val = G__2889;
      kvs = G__2890;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq2878) {
  var G__2879 = cljs.core.first(seq2878);
  var seq2878__$1 = cljs.core.next(seq2878);
  var G__2880 = cljs.core.first(seq2878__$1);
  var seq2878__$2 = cljs.core.next(seq2878__$1);
  var G__2881 = cljs.core.first(seq2878__$2);
  var seq2878__$3 = cljs.core.next(seq2878__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2879, G__2880, G__2881, seq2878__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__2895 = arguments.length;
  switch(G__2895) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2897 = arguments.length;
      var i__4731__auto___2898 = 0;
      while (true) {
        if (i__4731__auto___2898 < len__4730__auto___2897) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2898]);
          var G__2899 = i__4731__auto___2898 + 1;
          i__4731__auto___2898 = G__2899;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__2900 = ntcoll;
      var G__2901 = cljs.core.first(ks);
      var G__2902 = cljs.core.next(ks);
      tcoll = G__2900;
      key = G__2901;
      ks = G__2902;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq2892) {
  var G__2893 = cljs.core.first(seq2892);
  var seq2892__$1 = cljs.core.next(seq2892);
  var G__2894 = cljs.core.first(seq2892__$1);
  var seq2892__$2 = cljs.core.next(seq2892__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2893, G__2894, seq2892__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__2907 = arguments.length;
  switch(G__2907) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2909 = arguments.length;
      var i__4731__auto___2910 = 0;
      while (true) {
        if (i__4731__auto___2910 < len__4730__auto___2909) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2910]);
          var G__2911 = i__4731__auto___2910 + 1;
          i__4731__auto___2910 = G__2911;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__2912 = ntcoll;
      var G__2913 = cljs.core.first(vals);
      var G__2914 = cljs.core.next(vals);
      tcoll = G__2912;
      val = G__2913;
      vals = G__2914;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq2904) {
  var G__2905 = cljs.core.first(seq2904);
  var seq2904__$1 = cljs.core.next(seq2904);
  var G__2906 = cljs.core.first(seq2904__$1);
  var seq2904__$2 = cljs.core.next(seq2904__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2905, G__2906, seq2904__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a254 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a254) : f.call(null, a254);
    } else {
      var b255 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a254, b255) : f.call(null, a254, b255);
      } else {
        var c256 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a254, b255, c256) : f.call(null, a254, b255, c256);
        } else {
          var d257 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a254, b255, c256, d257) : f.call(null, a254, b255, c256, d257);
          } else {
            var e258 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a254, b255, c256, d257, e258) : f.call(null, a254, b255, c256, d257, e258);
            } else {
              var f259 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a254, b255, c256, d257, e258, f259) : f.call(null, a254, b255, c256, d257, e258, f259);
              } else {
                var g260 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a254, b255, c256, d257, e258, f259, g260) : f.call(null, a254, b255, c256, d257, e258, f259, g260);
                } else {
                  var h261 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a254, b255, c256, d257, e258, f259, g260, h261) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261);
                  } else {
                    var i262 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a254, b255, c256, d257, e258, f259, g260, h261, i262) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262);
                    } else {
                      var j263 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263);
                      } else {
                        var k264 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264);
                        } else {
                          var l265 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265);
                          } else {
                            var m266 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266);
                            } else {
                              var n267 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267);
                              } else {
                                var o268 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268);
                                } else {
                                  var p269 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269);
                                  } else {
                                    var q270 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270);
                                    } else {
                                      var r271 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271);
                                      } else {
                                        var s272 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272);
                                        } else {
                                          var t273 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273) : f.call(null, a254, b255, c256, d257, e258, f259, g260, h261, i262, j263, k264, l265, m266, n267, o268, p269, q270, r271, s272, t273);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__2917 = arguments.length;
  switch(G__2917) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4655__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4656__auto___2919 = next_19;
                                    while (true) {
                                      if (s__4656__auto___2919) {
                                        arr__4655__auto__.push(cljs.core._first(s__4656__auto___2919));
                                        var G__2920 = cljs.core.next(s__4656__auto___2919);
                                        s__4656__auto___2919 = G__2920;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4655__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__2928 = arguments.length;
  switch(G__2928) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2930 = arguments.length;
      var i__4731__auto___2931 = 0;
      while (true) {
        if (i__4731__auto___2931 < len__4730__auto___2930) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2931]);
          var G__2932 = i__4731__auto___2931 + 1;
          i__4731__auto___2931 = G__2932;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4752__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq2922) {
  var G__2923 = cljs.core.first(seq2922);
  var seq2922__$1 = cljs.core.next(seq2922);
  var G__2924 = cljs.core.first(seq2922__$1);
  var seq2922__$2 = cljs.core.next(seq2922__$1);
  var G__2925 = cljs.core.first(seq2922__$2);
  var seq2922__$3 = cljs.core.next(seq2922__$2);
  var G__2926 = cljs.core.first(seq2922__$3);
  var seq2922__$4 = cljs.core.next(seq2922__$3);
  var G__2927 = cljs.core.first(seq2922__$4);
  var seq2922__$5 = cljs.core.next(seq2922__$4);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2923, G__2924, G__2925, G__2926, G__2927, seq2922__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__2941 = arguments.length;
  switch(G__2941) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2958 = arguments.length;
      var i__4731__auto___2959 = 0;
      while (true) {
        if (i__4731__auto___2959 < len__4730__auto___2958) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2959]);
          var G__2960 = i__4731__auto___2959 + 1;
          i__4731__auto___2959 = G__2960;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__2942 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2942) : f.call(null, G__2942);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__2943 = cljs.core.meta(obj);
    var G__2944 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2943, G__2944) : f.call(null, G__2943, G__2944);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__2945 = cljs.core.meta(obj);
    var G__2946 = a;
    var G__2947 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2945, G__2946, G__2947) : f.call(null, G__2945, G__2946, G__2947);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__2948 = cljs.core.meta(obj);
    var G__2949 = a;
    var G__2950 = b;
    var G__2951 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2948, G__2949, G__2950, G__2951) : f.call(null, G__2948, G__2949, G__2950, G__2951);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__2952 = cljs.core.meta(obj);
    var G__2953 = a;
    var G__2954 = b;
    var G__2955 = c;
    var G__2956 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2952, G__2953, G__2954, G__2955, G__2956) : f.call(null, G__2952, G__2953, G__2954, G__2955, G__2956);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq2934) {
  var G__2935 = cljs.core.first(seq2934);
  var seq2934__$1 = cljs.core.next(seq2934);
  var G__2936 = cljs.core.first(seq2934__$1);
  var seq2934__$2 = cljs.core.next(seq2934__$1);
  var G__2937 = cljs.core.first(seq2934__$2);
  var seq2934__$3 = cljs.core.next(seq2934__$2);
  var G__2938 = cljs.core.first(seq2934__$3);
  var seq2934__$4 = cljs.core.next(seq2934__$3);
  var G__2939 = cljs.core.first(seq2934__$4);
  var seq2934__$5 = cljs.core.next(seq2934__$4);
  var G__2940 = cljs.core.first(seq2934__$5);
  var seq2934__$6 = cljs.core.next(seq2934__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2935, G__2936, G__2937, G__2938, G__2939, G__2940, seq2934__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__2965 = arguments.length;
  switch(G__2965) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2967 = arguments.length;
      var i__4731__auto___2968 = 0;
      while (true) {
        if (i__4731__auto___2968 < len__4730__auto___2967) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2968]);
          var G__2969 = i__4731__auto___2968 + 1;
          i__4731__auto___2968 = G__2969;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq2962) {
  var G__2963 = cljs.core.first(seq2962);
  var seq2962__$1 = cljs.core.next(seq2962);
  var G__2964 = cljs.core.first(seq2962__$1);
  var seq2962__$2 = cljs.core.next(seq2962__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2963, G__2964, seq2962__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core2970 !== "undefined") {
  } else {
    cljs.core.t_cljs$core2970 = function(meta2971) {
      this.meta2971 = meta2971;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core2970.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_2972, meta2971__$1) {
      var self__ = this;
      var _2972__$1 = this;
      return new cljs.core.t_cljs$core2970(meta2971__$1);
    };
    cljs.core.t_cljs$core2970.prototype.cljs$core$IMeta$_meta$arity$1 = function(_2972) {
      var self__ = this;
      var _2972__$1 = this;
      return self__.meta2971;
    };
    cljs.core.t_cljs$core2970.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core2970.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core2970.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core2970.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta2971", "meta2971", -870384503, null)], null);
    };
    cljs.core.t_cljs$core2970.cljs$lang$type = true;
    cljs.core.t_cljs$core2970.cljs$lang$ctorStr = "cljs.core/t_cljs$core2970";
    cljs.core.t_cljs$core2970.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write(writer__4375__auto__, "cljs.core/t_cljs$core2970");
    };
    cljs.core.__GT_t_cljs$core2970 = function cljs$core$nil_iter_$___GT_t_cljs$core2970(meta2971) {
      return new cljs.core.t_cljs$core2970(meta2971);
    };
  }
  return new cljs.core.t_cljs$core2970(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__2973 = cljs.core.next(iters__$1);
        iters__$1 = G__2973;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4607__auto___2974 = self__.iters.length;
  var i_2975 = 0;
  while (true) {
    if (i_2975 < n__4607__auto___2974) {
      nexts[i_2975] = self__.iters[i_2975].next();
      var G__2976 = i_2975 + 1;
      i_2975 = G__2976;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4120__auto__)) {
            return n < 32;
          } else {
            return and__4120__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__2977 = n + 1;
          n = G__2977;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__2978 = null;
                var G__2979 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__2978, G__2979) : self__.xf.call(null, G__2978, G__2979);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
var G__2980_2983 = cljs.core.TransformerIterator.prototype;
var G__2981_2984 = cljs.core.ITER_SYMBOL;
var G__2982_2985 = function(G__2980_2983, G__2981_2984) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__2980_2983, G__2981_2984);
goog.object.set(G__2980_2983, G__2981_2984, G__2982_2985);
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__2986 = function(iterator) {
      return function() {
        var G__2987 = null;
        var G__2987__0 = function() {
          return null;
        };
        var G__2987__1 = function(acc) {
          return acc;
        };
        var G__2987__2 = function(acc, o) {
          iterator.buffer = iterator.buffer.add(o);
          return acc;
        };
        G__2987 = function(acc, o) {
          switch(arguments.length) {
            case 0:
              return G__2987__0.call(this);
            case 1:
              return G__2987__1.call(this, acc);
            case 2:
              return G__2987__2.call(this, acc, o);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__2987.cljs$core$IFn$_invoke$arity$0 = G__2987__0;
        G__2987.cljs$core$IFn$_invoke$arity$1 = G__2987__1;
        G__2987.cljs$core$IFn$_invoke$arity$2 = G__2987__2;
        return G__2987;
      }();
    }(iterator);
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2986) : xform.call(null, G__2986);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__2992 = arguments.length;
  switch(G__2992) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___2994 = arguments.length;
      var i__4731__auto___2995 = 0;
      while (true) {
        if (i__4731__auto___2995 < len__4730__auto___2994) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___2995]);
          var G__2996 = i__4731__auto___2995 + 1;
          i__4731__auto___2995 = G__2996;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4131__auto__ = cljs.core.seq(coll);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4131__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4131__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq2989) {
  var G__2990 = cljs.core.first(seq2989);
  var seq2989__$1 = cljs.core.next(seq2989);
  var G__2991 = cljs.core.first(seq2989__$1);
  var seq2989__$2 = cljs.core.next(seq2989__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2990, G__2991, seq2989__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__2997 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2997) : pred.call(null, G__2997);
      }())) {
        var G__2998 = pred;
        var G__2999 = cljs.core.next(coll);
        pred = G__2998;
        coll = G__2999;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var or__4131__auto__ = function() {
        var G__3001 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3001) : pred.call(null, G__3001);
      }();
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var G__3002 = pred;
        var G__3003 = cljs.core.next(s);
        pred = G__3002;
        coll = G__3003;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__3004 = null;
    var G__3004__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__3004__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__3004__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__3004__3 = function() {
      var G__3005__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__3005 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__3006__i = 0, G__3006__a = new Array(arguments.length - 2);
          while (G__3006__i < G__3006__a.length) {
            G__3006__a[G__3006__i] = arguments[G__3006__i + 2];
            ++G__3006__i;
          }
          zs = new cljs.core.IndexedSeq(G__3006__a, 0, null);
        }
        return G__3005__delegate.call(this, x, y, zs);
      };
      G__3005.cljs$lang$maxFixedArity = 2;
      G__3005.cljs$lang$applyTo = function(arglist__3007) {
        var x = cljs.core.first(arglist__3007);
        arglist__3007 = cljs.core.next(arglist__3007);
        var y = cljs.core.first(arglist__3007);
        var zs = cljs.core.rest(arglist__3007);
        return G__3005__delegate(x, y, zs);
      };
      G__3005.cljs$core$IFn$_invoke$arity$variadic = G__3005__delegate;
      return G__3005;
    }();
    G__3004 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__3004__0.call(this);
        case 1:
          return G__3004__1.call(this, x);
        case 2:
          return G__3004__2.call(this, x, y);
        default:
          var G__3008 = null;
          if (arguments.length > 2) {
            var G__3009__i = 0, G__3009__a = new Array(arguments.length - 2);
            while (G__3009__i < G__3009__a.length) {
              G__3009__a[G__3009__i] = arguments[G__3009__i + 2];
              ++G__3009__i;
            }
            G__3008 = new cljs.core.IndexedSeq(G__3009__a, 0, null);
          }
          return G__3004__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__3008);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3004.cljs$lang$maxFixedArity = 2;
    G__3004.cljs$lang$applyTo = G__3004__3.cljs$lang$applyTo;
    G__3004.cljs$core$IFn$_invoke$arity$0 = G__3004__0;
    G__3004.cljs$core$IFn$_invoke$arity$1 = G__3004__1;
    G__3004.cljs$core$IFn$_invoke$arity$2 = G__3004__2;
    G__3004.cljs$core$IFn$_invoke$arity$variadic = G__3004__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__3004;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__3010__delegate = function(args) {
      return x;
    };
    var G__3010 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3011__i = 0, G__3011__a = new Array(arguments.length - 0);
        while (G__3011__i < G__3011__a.length) {
          G__3011__a[G__3011__i] = arguments[G__3011__i + 0];
          ++G__3011__i;
        }
        args = new cljs.core.IndexedSeq(G__3011__a, 0, null);
      }
      return G__3010__delegate.call(this, args);
    };
    G__3010.cljs$lang$maxFixedArity = 0;
    G__3010.cljs$lang$applyTo = function(arglist__3012) {
      var args = cljs.core.seq(arglist__3012);
      return G__3010__delegate(args);
    };
    G__3010.cljs$core$IFn$_invoke$arity$variadic = G__3010__delegate;
    return G__3010;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__3018 = arguments.length;
  switch(G__3018) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3036 = arguments.length;
      var i__4731__auto___3037 = 0;
      while (true) {
        if (i__4731__auto___3037 < len__4730__auto___3036) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3037]);
          var G__3038 = i__4731__auto___3037 + 1;
          i__4731__auto___3037 = G__3038;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__3039 = null;
    var G__3039__0 = function() {
      var G__3019 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3019) : f.call(null, G__3019);
    };
    var G__3039__1 = function(x) {
      var G__3020 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3020) : f.call(null, G__3020);
    };
    var G__3039__2 = function(x, y) {
      var G__3021 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3021) : f.call(null, G__3021);
    };
    var G__3039__3 = function(x, y, z) {
      var G__3022 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3022) : f.call(null, G__3022);
    };
    var G__3039__4 = function() {
      var G__3040__delegate = function(x, y, z, args) {
        var G__3023 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3023) : f.call(null, G__3023);
      };
      var G__3040 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3041__i = 0, G__3041__a = new Array(arguments.length - 3);
          while (G__3041__i < G__3041__a.length) {
            G__3041__a[G__3041__i] = arguments[G__3041__i + 3];
            ++G__3041__i;
          }
          args = new cljs.core.IndexedSeq(G__3041__a, 0, null);
        }
        return G__3040__delegate.call(this, x, y, z, args);
      };
      G__3040.cljs$lang$maxFixedArity = 3;
      G__3040.cljs$lang$applyTo = function(arglist__3042) {
        var x = cljs.core.first(arglist__3042);
        arglist__3042 = cljs.core.next(arglist__3042);
        var y = cljs.core.first(arglist__3042);
        arglist__3042 = cljs.core.next(arglist__3042);
        var z = cljs.core.first(arglist__3042);
        var args = cljs.core.rest(arglist__3042);
        return G__3040__delegate(x, y, z, args);
      };
      G__3040.cljs$core$IFn$_invoke$arity$variadic = G__3040__delegate;
      return G__3040;
    }();
    G__3039 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3039__0.call(this);
        case 1:
          return G__3039__1.call(this, x);
        case 2:
          return G__3039__2.call(this, x, y);
        case 3:
          return G__3039__3.call(this, x, y, z);
        default:
          var G__3043 = null;
          if (arguments.length > 3) {
            var G__3044__i = 0, G__3044__a = new Array(arguments.length - 3);
            while (G__3044__i < G__3044__a.length) {
              G__3044__a[G__3044__i] = arguments[G__3044__i + 3];
              ++G__3044__i;
            }
            G__3043 = new cljs.core.IndexedSeq(G__3044__a, 0, null);
          }
          return G__3039__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3043);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3039.cljs$lang$maxFixedArity = 3;
    G__3039.cljs$lang$applyTo = G__3039__4.cljs$lang$applyTo;
    G__3039.cljs$core$IFn$_invoke$arity$0 = G__3039__0;
    G__3039.cljs$core$IFn$_invoke$arity$1 = G__3039__1;
    G__3039.cljs$core$IFn$_invoke$arity$2 = G__3039__2;
    G__3039.cljs$core$IFn$_invoke$arity$3 = G__3039__3;
    G__3039.cljs$core$IFn$_invoke$arity$variadic = G__3039__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3039;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__3045 = null;
    var G__3045__0 = function() {
      var G__3024 = function() {
        var G__3025 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3025) : g.call(null, G__3025);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3024) : f.call(null, G__3024);
    };
    var G__3045__1 = function(x) {
      var G__3026 = function() {
        var G__3027 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3027) : g.call(null, G__3027);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3026) : f.call(null, G__3026);
    };
    var G__3045__2 = function(x, y) {
      var G__3028 = function() {
        var G__3029 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3029) : g.call(null, G__3029);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3028) : f.call(null, G__3028);
    };
    var G__3045__3 = function(x, y, z) {
      var G__3030 = function() {
        var G__3031 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3031) : g.call(null, G__3031);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3030) : f.call(null, G__3030);
    };
    var G__3045__4 = function() {
      var G__3046__delegate = function(x, y, z, args) {
        var G__3032 = function() {
          var G__3033 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__3033) : g.call(null, G__3033);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3032) : f.call(null, G__3032);
      };
      var G__3046 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3047__i = 0, G__3047__a = new Array(arguments.length - 3);
          while (G__3047__i < G__3047__a.length) {
            G__3047__a[G__3047__i] = arguments[G__3047__i + 3];
            ++G__3047__i;
          }
          args = new cljs.core.IndexedSeq(G__3047__a, 0, null);
        }
        return G__3046__delegate.call(this, x, y, z, args);
      };
      G__3046.cljs$lang$maxFixedArity = 3;
      G__3046.cljs$lang$applyTo = function(arglist__3048) {
        var x = cljs.core.first(arglist__3048);
        arglist__3048 = cljs.core.next(arglist__3048);
        var y = cljs.core.first(arglist__3048);
        arglist__3048 = cljs.core.next(arglist__3048);
        var z = cljs.core.first(arglist__3048);
        var args = cljs.core.rest(arglist__3048);
        return G__3046__delegate(x, y, z, args);
      };
      G__3046.cljs$core$IFn$_invoke$arity$variadic = G__3046__delegate;
      return G__3046;
    }();
    G__3045 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3045__0.call(this);
        case 1:
          return G__3045__1.call(this, x);
        case 2:
          return G__3045__2.call(this, x, y);
        case 3:
          return G__3045__3.call(this, x, y, z);
        default:
          var G__3049 = null;
          if (arguments.length > 3) {
            var G__3050__i = 0, G__3050__a = new Array(arguments.length - 3);
            while (G__3050__i < G__3050__a.length) {
              G__3050__a[G__3050__i] = arguments[G__3050__i + 3];
              ++G__3050__i;
            }
            G__3049 = new cljs.core.IndexedSeq(G__3050__a, 0, null);
          }
          return G__3045__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3049);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3045.cljs$lang$maxFixedArity = 3;
    G__3045.cljs$lang$applyTo = G__3045__4.cljs$lang$applyTo;
    G__3045.cljs$core$IFn$_invoke$arity$0 = G__3045__0;
    G__3045.cljs$core$IFn$_invoke$arity$1 = G__3045__1;
    G__3045.cljs$core$IFn$_invoke$arity$2 = G__3045__2;
    G__3045.cljs$core$IFn$_invoke$arity$3 = G__3045__3;
    G__3045.cljs$core$IFn$_invoke$arity$variadic = G__3045__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3045;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__3051__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__3052 = function() {
              var fexpr__3034 = cljs.core.first(fs__$2);
              return fexpr__3034.cljs$core$IFn$_invoke$arity$1 ? fexpr__3034.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__3034.call(null, ret);
            }();
            var G__3053 = cljs.core.next(fs__$2);
            ret = G__3052;
            fs__$2 = G__3053;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__3051 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__3054__i = 0, G__3054__a = new Array(arguments.length - 0);
          while (G__3054__i < G__3054__a.length) {
            G__3054__a[G__3054__i] = arguments[G__3054__i + 0];
            ++G__3054__i;
          }
          args = new cljs.core.IndexedSeq(G__3054__a, 0, null);
        }
        return G__3051__delegate.call(this, args);
      };
      G__3051.cljs$lang$maxFixedArity = 0;
      G__3051.cljs$lang$applyTo = function(arglist__3055) {
        var args = cljs.core.seq(arglist__3055);
        return G__3051__delegate(args);
      };
      G__3051.cljs$core$IFn$_invoke$arity$variadic = G__3051__delegate;
      return G__3051;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq3014) {
  var G__3015 = cljs.core.first(seq3014);
  var seq3014__$1 = cljs.core.next(seq3014);
  var G__3016 = cljs.core.first(seq3014__$1);
  var seq3014__$2 = cljs.core.next(seq3014__$1);
  var G__3017 = cljs.core.first(seq3014__$2);
  var seq3014__$3 = cljs.core.next(seq3014__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3015, G__3016, G__3017, seq3014__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__3062 = arguments.length;
  switch(G__3062) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3064 = arguments.length;
      var i__4731__auto___3065 = 0;
      while (true) {
        if (i__4731__auto___3065 < len__4730__auto___3064) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3065]);
          var G__3066 = i__4731__auto___3065 + 1;
          i__4731__auto___3065 = G__3066;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__3067 = null;
    var G__3067__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__3067__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__3067__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__3067__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__3067__4 = function() {
      var G__3068__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__3068 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3069__i = 0, G__3069__a = new Array(arguments.length - 3);
          while (G__3069__i < G__3069__a.length) {
            G__3069__a[G__3069__i] = arguments[G__3069__i + 3];
            ++G__3069__i;
          }
          args = new cljs.core.IndexedSeq(G__3069__a, 0, null);
        }
        return G__3068__delegate.call(this, x, y, z, args);
      };
      G__3068.cljs$lang$maxFixedArity = 3;
      G__3068.cljs$lang$applyTo = function(arglist__3070) {
        var x = cljs.core.first(arglist__3070);
        arglist__3070 = cljs.core.next(arglist__3070);
        var y = cljs.core.first(arglist__3070);
        arglist__3070 = cljs.core.next(arglist__3070);
        var z = cljs.core.first(arglist__3070);
        var args = cljs.core.rest(arglist__3070);
        return G__3068__delegate(x, y, z, args);
      };
      G__3068.cljs$core$IFn$_invoke$arity$variadic = G__3068__delegate;
      return G__3068;
    }();
    G__3067 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3067__0.call(this);
        case 1:
          return G__3067__1.call(this, x);
        case 2:
          return G__3067__2.call(this, x, y);
        case 3:
          return G__3067__3.call(this, x, y, z);
        default:
          var G__3071 = null;
          if (arguments.length > 3) {
            var G__3072__i = 0, G__3072__a = new Array(arguments.length - 3);
            while (G__3072__i < G__3072__a.length) {
              G__3072__a[G__3072__i] = arguments[G__3072__i + 3];
              ++G__3072__i;
            }
            G__3071 = new cljs.core.IndexedSeq(G__3072__a, 0, null);
          }
          return G__3067__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3071);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3067.cljs$lang$maxFixedArity = 3;
    G__3067.cljs$lang$applyTo = G__3067__4.cljs$lang$applyTo;
    G__3067.cljs$core$IFn$_invoke$arity$0 = G__3067__0;
    G__3067.cljs$core$IFn$_invoke$arity$1 = G__3067__1;
    G__3067.cljs$core$IFn$_invoke$arity$2 = G__3067__2;
    G__3067.cljs$core$IFn$_invoke$arity$3 = G__3067__3;
    G__3067.cljs$core$IFn$_invoke$arity$variadic = G__3067__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3067;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__3073 = null;
    var G__3073__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__3073__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__3073__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__3073__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__3073__4 = function() {
      var G__3074__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__3074 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3075__i = 0, G__3075__a = new Array(arguments.length - 3);
          while (G__3075__i < G__3075__a.length) {
            G__3075__a[G__3075__i] = arguments[G__3075__i + 3];
            ++G__3075__i;
          }
          args = new cljs.core.IndexedSeq(G__3075__a, 0, null);
        }
        return G__3074__delegate.call(this, x, y, z, args);
      };
      G__3074.cljs$lang$maxFixedArity = 3;
      G__3074.cljs$lang$applyTo = function(arglist__3076) {
        var x = cljs.core.first(arglist__3076);
        arglist__3076 = cljs.core.next(arglist__3076);
        var y = cljs.core.first(arglist__3076);
        arglist__3076 = cljs.core.next(arglist__3076);
        var z = cljs.core.first(arglist__3076);
        var args = cljs.core.rest(arglist__3076);
        return G__3074__delegate(x, y, z, args);
      };
      G__3074.cljs$core$IFn$_invoke$arity$variadic = G__3074__delegate;
      return G__3074;
    }();
    G__3073 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3073__0.call(this);
        case 1:
          return G__3073__1.call(this, x);
        case 2:
          return G__3073__2.call(this, x, y);
        case 3:
          return G__3073__3.call(this, x, y, z);
        default:
          var G__3077 = null;
          if (arguments.length > 3) {
            var G__3078__i = 0, G__3078__a = new Array(arguments.length - 3);
            while (G__3078__i < G__3078__a.length) {
              G__3078__a[G__3078__i] = arguments[G__3078__i + 3];
              ++G__3078__i;
            }
            G__3077 = new cljs.core.IndexedSeq(G__3078__a, 0, null);
          }
          return G__3073__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3077);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3073.cljs$lang$maxFixedArity = 3;
    G__3073.cljs$lang$applyTo = G__3073__4.cljs$lang$applyTo;
    G__3073.cljs$core$IFn$_invoke$arity$0 = G__3073__0;
    G__3073.cljs$core$IFn$_invoke$arity$1 = G__3073__1;
    G__3073.cljs$core$IFn$_invoke$arity$2 = G__3073__2;
    G__3073.cljs$core$IFn$_invoke$arity$3 = G__3073__3;
    G__3073.cljs$core$IFn$_invoke$arity$variadic = G__3073__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3073;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__3079 = null;
    var G__3079__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__3079__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__3079__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__3079__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__3079__4 = function() {
      var G__3080__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__3080 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3081__i = 0, G__3081__a = new Array(arguments.length - 3);
          while (G__3081__i < G__3081__a.length) {
            G__3081__a[G__3081__i] = arguments[G__3081__i + 3];
            ++G__3081__i;
          }
          args = new cljs.core.IndexedSeq(G__3081__a, 0, null);
        }
        return G__3080__delegate.call(this, x, y, z, args);
      };
      G__3080.cljs$lang$maxFixedArity = 3;
      G__3080.cljs$lang$applyTo = function(arglist__3082) {
        var x = cljs.core.first(arglist__3082);
        arglist__3082 = cljs.core.next(arglist__3082);
        var y = cljs.core.first(arglist__3082);
        arglist__3082 = cljs.core.next(arglist__3082);
        var z = cljs.core.first(arglist__3082);
        var args = cljs.core.rest(arglist__3082);
        return G__3080__delegate(x, y, z, args);
      };
      G__3080.cljs$core$IFn$_invoke$arity$variadic = G__3080__delegate;
      return G__3080;
    }();
    G__3079 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__3079__0.call(this);
        case 1:
          return G__3079__1.call(this, x);
        case 2:
          return G__3079__2.call(this, x, y);
        case 3:
          return G__3079__3.call(this, x, y, z);
        default:
          var G__3083 = null;
          if (arguments.length > 3) {
            var G__3084__i = 0, G__3084__a = new Array(arguments.length - 3);
            while (G__3084__i < G__3084__a.length) {
              G__3084__a[G__3084__i] = arguments[G__3084__i + 3];
              ++G__3084__i;
            }
            G__3083 = new cljs.core.IndexedSeq(G__3084__a, 0, null);
          }
          return G__3079__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3083);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3079.cljs$lang$maxFixedArity = 3;
    G__3079.cljs$lang$applyTo = G__3079__4.cljs$lang$applyTo;
    G__3079.cljs$core$IFn$_invoke$arity$0 = G__3079__0;
    G__3079.cljs$core$IFn$_invoke$arity$1 = G__3079__1;
    G__3079.cljs$core$IFn$_invoke$arity$2 = G__3079__2;
    G__3079.cljs$core$IFn$_invoke$arity$3 = G__3079__3;
    G__3079.cljs$core$IFn$_invoke$arity$variadic = G__3079__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3079;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__3085__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__3085 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__3086__i = 0, G__3086__a = new Array(arguments.length - 0);
        while (G__3086__i < G__3086__a.length) {
          G__3086__a[G__3086__i] = arguments[G__3086__i + 0];
          ++G__3086__i;
        }
        args = new cljs.core.IndexedSeq(G__3086__a, 0, null);
      }
      return G__3085__delegate.call(this, args);
    };
    G__3085.cljs$lang$maxFixedArity = 0;
    G__3085.cljs$lang$applyTo = function(arglist__3087) {
      var args = cljs.core.seq(arglist__3087);
      return G__3085__delegate(args);
    };
    G__3085.cljs$core$IFn$_invoke$arity$variadic = G__3085__delegate;
    return G__3085;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq3057) {
  var G__3058 = cljs.core.first(seq3057);
  var seq3057__$1 = cljs.core.next(seq3057);
  var G__3059 = cljs.core.first(seq3057__$1);
  var seq3057__$2 = cljs.core.next(seq3057__$1);
  var G__3060 = cljs.core.first(seq3057__$2);
  var seq3057__$3 = cljs.core.next(seq3057__$2);
  var G__3061 = cljs.core.first(seq3057__$3);
  var seq3057__$4 = cljs.core.next(seq3057__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3058, G__3059, G__3060, G__3061, seq3057__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__3089 = arguments.length;
  switch(G__3089) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__3107 = null;
    var G__3107__1 = function(a) {
      var G__3090 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3090) : f.call(null, G__3090);
    };
    var G__3107__2 = function(a, b) {
      var G__3091 = a == null ? x : a;
      var G__3092 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3091, G__3092) : f.call(null, G__3091, G__3092);
    };
    var G__3107__3 = function(a, b, c) {
      var G__3093 = a == null ? x : a;
      var G__3094 = b;
      var G__3095 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3093, G__3094, G__3095) : f.call(null, G__3093, G__3094, G__3095);
    };
    var G__3107__4 = function() {
      var G__3108__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__3108 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3109__i = 0, G__3109__a = new Array(arguments.length - 3);
          while (G__3109__i < G__3109__a.length) {
            G__3109__a[G__3109__i] = arguments[G__3109__i + 3];
            ++G__3109__i;
          }
          ds = new cljs.core.IndexedSeq(G__3109__a, 0, null);
        }
        return G__3108__delegate.call(this, a, b, c, ds);
      };
      G__3108.cljs$lang$maxFixedArity = 3;
      G__3108.cljs$lang$applyTo = function(arglist__3110) {
        var a = cljs.core.first(arglist__3110);
        arglist__3110 = cljs.core.next(arglist__3110);
        var b = cljs.core.first(arglist__3110);
        arglist__3110 = cljs.core.next(arglist__3110);
        var c = cljs.core.first(arglist__3110);
        var ds = cljs.core.rest(arglist__3110);
        return G__3108__delegate(a, b, c, ds);
      };
      G__3108.cljs$core$IFn$_invoke$arity$variadic = G__3108__delegate;
      return G__3108;
    }();
    G__3107 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__3107__1.call(this, a);
        case 2:
          return G__3107__2.call(this, a, b);
        case 3:
          return G__3107__3.call(this, a, b, c);
        default:
          var G__3111 = null;
          if (arguments.length > 3) {
            var G__3112__i = 0, G__3112__a = new Array(arguments.length - 3);
            while (G__3112__i < G__3112__a.length) {
              G__3112__a[G__3112__i] = arguments[G__3112__i + 3];
              ++G__3112__i;
            }
            G__3111 = new cljs.core.IndexedSeq(G__3112__a, 0, null);
          }
          return G__3107__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3111);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3107.cljs$lang$maxFixedArity = 3;
    G__3107.cljs$lang$applyTo = G__3107__4.cljs$lang$applyTo;
    G__3107.cljs$core$IFn$_invoke$arity$1 = G__3107__1;
    G__3107.cljs$core$IFn$_invoke$arity$2 = G__3107__2;
    G__3107.cljs$core$IFn$_invoke$arity$3 = G__3107__3;
    G__3107.cljs$core$IFn$_invoke$arity$variadic = G__3107__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3107;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__3113 = null;
    var G__3113__2 = function(a, b) {
      var G__3096 = a == null ? x : a;
      var G__3097 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3096, G__3097) : f.call(null, G__3096, G__3097);
    };
    var G__3113__3 = function(a, b, c) {
      var G__3098 = a == null ? x : a;
      var G__3099 = b == null ? y : b;
      var G__3100 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3098, G__3099, G__3100) : f.call(null, G__3098, G__3099, G__3100);
    };
    var G__3113__4 = function() {
      var G__3114__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__3114 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3115__i = 0, G__3115__a = new Array(arguments.length - 3);
          while (G__3115__i < G__3115__a.length) {
            G__3115__a[G__3115__i] = arguments[G__3115__i + 3];
            ++G__3115__i;
          }
          ds = new cljs.core.IndexedSeq(G__3115__a, 0, null);
        }
        return G__3114__delegate.call(this, a, b, c, ds);
      };
      G__3114.cljs$lang$maxFixedArity = 3;
      G__3114.cljs$lang$applyTo = function(arglist__3116) {
        var a = cljs.core.first(arglist__3116);
        arglist__3116 = cljs.core.next(arglist__3116);
        var b = cljs.core.first(arglist__3116);
        arglist__3116 = cljs.core.next(arglist__3116);
        var c = cljs.core.first(arglist__3116);
        var ds = cljs.core.rest(arglist__3116);
        return G__3114__delegate(a, b, c, ds);
      };
      G__3114.cljs$core$IFn$_invoke$arity$variadic = G__3114__delegate;
      return G__3114;
    }();
    G__3113 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3113__2.call(this, a, b);
        case 3:
          return G__3113__3.call(this, a, b, c);
        default:
          var G__3117 = null;
          if (arguments.length > 3) {
            var G__3118__i = 0, G__3118__a = new Array(arguments.length - 3);
            while (G__3118__i < G__3118__a.length) {
              G__3118__a[G__3118__i] = arguments[G__3118__i + 3];
              ++G__3118__i;
            }
            G__3117 = new cljs.core.IndexedSeq(G__3118__a, 0, null);
          }
          return G__3113__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3117);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3113.cljs$lang$maxFixedArity = 3;
    G__3113.cljs$lang$applyTo = G__3113__4.cljs$lang$applyTo;
    G__3113.cljs$core$IFn$_invoke$arity$2 = G__3113__2;
    G__3113.cljs$core$IFn$_invoke$arity$3 = G__3113__3;
    G__3113.cljs$core$IFn$_invoke$arity$variadic = G__3113__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3113;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__3119 = null;
    var G__3119__2 = function(a, b) {
      var G__3101 = a == null ? x : a;
      var G__3102 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3101, G__3102) : f.call(null, G__3101, G__3102);
    };
    var G__3119__3 = function(a, b, c) {
      var G__3103 = a == null ? x : a;
      var G__3104 = b == null ? y : b;
      var G__3105 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3103, G__3104, G__3105) : f.call(null, G__3103, G__3104, G__3105);
    };
    var G__3119__4 = function() {
      var G__3120__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__3120 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__3121__i = 0, G__3121__a = new Array(arguments.length - 3);
          while (G__3121__i < G__3121__a.length) {
            G__3121__a[G__3121__i] = arguments[G__3121__i + 3];
            ++G__3121__i;
          }
          ds = new cljs.core.IndexedSeq(G__3121__a, 0, null);
        }
        return G__3120__delegate.call(this, a, b, c, ds);
      };
      G__3120.cljs$lang$maxFixedArity = 3;
      G__3120.cljs$lang$applyTo = function(arglist__3122) {
        var a = cljs.core.first(arglist__3122);
        arglist__3122 = cljs.core.next(arglist__3122);
        var b = cljs.core.first(arglist__3122);
        arglist__3122 = cljs.core.next(arglist__3122);
        var c = cljs.core.first(arglist__3122);
        var ds = cljs.core.rest(arglist__3122);
        return G__3120__delegate(a, b, c, ds);
      };
      G__3120.cljs$core$IFn$_invoke$arity$variadic = G__3120__delegate;
      return G__3120;
    }();
    G__3119 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__3119__2.call(this, a, b);
        case 3:
          return G__3119__3.call(this, a, b, c);
        default:
          var G__3123 = null;
          if (arguments.length > 3) {
            var G__3124__i = 0, G__3124__a = new Array(arguments.length - 3);
            while (G__3124__i < G__3124__a.length) {
              G__3124__a[G__3124__i] = arguments[G__3124__i + 3];
              ++G__3124__i;
            }
            G__3123 = new cljs.core.IndexedSeq(G__3124__a, 0, null);
          }
          return G__3119__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__3123);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__3119.cljs$lang$maxFixedArity = 3;
    G__3119.cljs$lang$applyTo = G__3119__4.cljs$lang$applyTo;
    G__3119.cljs$core$IFn$_invoke$arity$2 = G__3119__2;
    G__3119.cljs$core$IFn$_invoke$arity$3 = G__3119__3;
    G__3119.cljs$core$IFn$_invoke$arity$variadic = G__3119__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__3119;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__3126 = arguments.length;
  switch(G__3126) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function(i) {
      return function() {
        var G__3140 = null;
        var G__3140__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3140__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3140__2 = function(result, input) {
          var G__3127 = result;
          var G__3128 = function() {
            var G__3129 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var G__3130 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3129, G__3130) : f.call(null, G__3129, G__3130);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3127, G__3128) : rf.call(null, G__3127, G__3128);
        };
        G__3140 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3140__0.call(this);
            case 1:
              return G__3140__1.call(this, result);
            case 2:
              return G__3140__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3140.cljs$core$IFn$_invoke$arity$0 = G__3140__0;
        G__3140.cljs$core$IFn$_invoke$arity$1 = G__3140__1;
        G__3140.cljs$core$IFn$_invoke$arity$2 = G__3140__2;
        return G__3140;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4607__auto___3141 = size;
          var i_3142 = 0;
          while (true) {
            if (i_3142 < n__4607__auto___3141) {
              cljs.core.chunk_append(b, function() {
                var G__3135 = idx + i_3142;
                var G__3136 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3142);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3135, G__3136) : f.call(null, G__3135, G__3136);
              }());
              var G__3143 = i_3142 + 1;
              i_3142 = G__3143;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__3137 = idx;
            var G__3138 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3137, G__3138) : f.call(null, G__3137, G__3138);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__3145 = arguments.length;
  switch(G__3145) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3149 = null;
      var G__3149__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3149__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3149__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__3149 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3149__0.call(this);
          case 1:
            return G__3149__1.call(this, result);
          case 2:
            return G__3149__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3149.cljs$core$IFn$_invoke$arity$0 = G__3149__0;
      G__3149.cljs$core$IFn$_invoke$arity$1 = G__3149__1;
      G__3149.cljs$core$IFn$_invoke$arity$2 = G__3149__2;
      return G__3149;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3150 = size;
        var i_3151 = 0;
        while (true) {
          if (i_3151 < n__4607__auto___3150) {
            var x_3152 = function() {
              var G__3146 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3151);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3146) : f.call(null, G__3146);
            }();
            if (x_3152 == null) {
            } else {
              cljs.core.chunk_append(b, x_3152);
            }
            var G__3153 = i_3151 + 1;
            i_3151 = G__3153;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__3147 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3147) : f.call(null, G__3147);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__3154 = cljs.core.seq(self__.watches);
  var chunk__3155 = null;
  var count__3156 = 0;
  var i__3157 = 0;
  while (true) {
    if (i__3157 < count__3156) {
      var vec__3164 = chunk__3155.cljs$core$IIndexed$_nth$arity$2(null, i__3157);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3164, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3164, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__3170 = seq__3154;
      var G__3171 = chunk__3155;
      var G__3172 = count__3156;
      var G__3173 = i__3157 + 1;
      seq__3154 = G__3170;
      chunk__3155 = G__3171;
      count__3156 = G__3172;
      i__3157 = G__3173;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3154);
      if (temp__5720__auto__) {
        var seq__3154__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3154__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3154__$1);
          var G__3174 = cljs.core.chunk_rest(seq__3154__$1);
          var G__3175 = c__4550__auto__;
          var G__3176 = cljs.core.count(c__4550__auto__);
          var G__3177 = 0;
          seq__3154 = G__3174;
          chunk__3155 = G__3175;
          count__3156 = G__3176;
          i__3157 = G__3177;
          continue;
        } else {
          var vec__3167 = cljs.core.first(seq__3154__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3167, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3167, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__3178 = cljs.core.next(seq__3154__$1);
          var G__3179 = null;
          var G__3180 = 0;
          var G__3181 = 0;
          seq__3154 = G__3178;
          chunk__3155 = G__3179;
          count__3156 = G__3180;
          i__3157 = G__3181;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__3185 = arguments.length;
  switch(G__3185) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3190 = arguments.length;
      var i__4731__auto___3191 = 0;
      while (true) {
        if (i__4731__auto___3191 < len__4730__auto___3190) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3191]);
          var G__3192 = i__4731__auto___3191 + 1;
          i__4731__auto___3191 = G__3192;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__3186) {
  var map__3187 = p__3186;
  var map__3187__$1 = (!(map__3187 == null) ? map__3187.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3187.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__3187) : map__3187;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3187__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3187__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq3183) {
  var G__3184 = cljs.core.first(seq3183);
  var seq3183__$1 = cljs.core.next(seq3183);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3184, seq3183__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__3199 = arguments.length;
  switch(G__3199) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3207 = arguments.length;
      var i__4731__auto___3208 = 0;
      while (true) {
        if (i__4731__auto___3208 < len__4730__auto___3207) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3208]);
          var G__3209 = i__4731__auto___3208 + 1;
          i__4731__auto___3208 = G__3209;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3200 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3200) : f.call(null, G__3200);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3201 = a.state;
      var G__3202 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3201, G__3202) : f.call(null, G__3201, G__3202);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__3203 = a.state;
      var G__3204 = x;
      var G__3205 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3203, G__3204, G__3205) : f.call(null, G__3203, G__3204, G__3205);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq3194) {
  var G__3195 = cljs.core.first(seq3194);
  var seq3194__$1 = cljs.core.next(seq3194);
  var G__3196 = cljs.core.first(seq3194__$1);
  var seq3194__$2 = cljs.core.next(seq3194__$1);
  var G__3197 = cljs.core.first(seq3194__$2);
  var seq3194__$3 = cljs.core.next(seq3194__$2);
  var G__3198 = cljs.core.first(seq3194__$3);
  var seq3194__$4 = cljs.core.next(seq3194__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3195, G__3196, G__3197, G__3198, seq3194__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__3216 = arguments.length;
  switch(G__3216) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3224 = arguments.length;
      var i__4731__auto___3225 = 0;
      while (true) {
        if (i__4731__auto___3225 < len__4730__auto___3224) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3225]);
          var G__3226 = i__4731__auto___3225 + 1;
          i__4731__auto___3225 = G__3226;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3217 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3217) : f.call(null, G__3217);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3218 = a.state;
    var G__3219 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3218, G__3219) : f.call(null, G__3218, G__3219);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__3220 = a.state;
    var G__3221 = x;
    var G__3222 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3220, G__3221, G__3222) : f.call(null, G__3220, G__3221, G__3222);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq3211) {
  var G__3212 = cljs.core.first(seq3211);
  var seq3211__$1 = cljs.core.next(seq3211);
  var G__3213 = cljs.core.first(seq3211__$1);
  var seq3211__$2 = cljs.core.next(seq3211__$1);
  var G__3214 = cljs.core.first(seq3211__$2);
  var seq3211__$3 = cljs.core.next(seq3211__$2);
  var G__3215 = cljs.core.first(seq3211__$3);
  var seq3211__$4 = cljs.core.next(seq3211__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3212, G__3213, G__3214, G__3215, seq3211__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__3228 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__3228) : val.call(null, G__3228);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__3230 = arguments.length;
  switch(G__3230) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__3240 = null;
        var G__3240__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3240__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3240__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__3240 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3240__0.call(this);
            case 1:
              return G__3240__1.call(this, result);
            case 2:
              return G__3240__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3240.cljs$core$IFn$_invoke$arity$0 = G__3240__0;
        G__3240.cljs$core$IFn$_invoke$arity$1 = G__3240__1;
        G__3240.cljs$core$IFn$_invoke$arity$2 = G__3240__2;
        return G__3240;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll__$1);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4607__auto___3241 = size;
          var i_3242 = 0;
          while (true) {
            if (i_3242 < n__4607__auto___3241) {
              var x_3243 = function() {
                var G__3235 = idx + i_3242;
                var G__3236 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3242);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3235, G__3236) : f.call(null, G__3235, G__3236);
              }();
              if (x_3243 == null) {
              } else {
                cljs.core.chunk_append(b, x_3243);
              }
              var G__3244 = i_3242 + 1;
              i_3242 = G__3244;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__3237 = idx;
            var G__3238 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3237, G__3238) : f.call(null, G__3237, G__3238);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__3256 = arguments.length;
  switch(G__3256) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3258 = arguments.length;
      var i__4731__auto___3259 = 0;
      while (true) {
        if (i__4731__auto___3259 < len__4730__auto___3258) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3259]);
          var G__3260 = i__4731__auto___3259 + 1;
          i__4731__auto___3259 = G__3260;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__3261__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3261 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3262__i = 0, G__3262__a = new Array(arguments.length - 3);
          while (G__3262__i < G__3262__a.length) {
            G__3262__a[G__3262__i] = arguments[G__3262__i + 3];
            ++G__3262__i;
          }
          args = new cljs.core.IndexedSeq(G__3262__a, 0, null);
        }
        return G__3261__delegate.call(this, x, y, z, args);
      };
      G__3261.cljs$lang$maxFixedArity = 3;
      G__3261.cljs$lang$applyTo = function(arglist__3263) {
        var x = cljs.core.first(arglist__3263);
        arglist__3263 = cljs.core.next(arglist__3263);
        var y = cljs.core.first(arglist__3263);
        arglist__3263 = cljs.core.next(arglist__3263);
        var z = cljs.core.first(arglist__3263);
        var args = cljs.core.rest(arglist__3263);
        return G__3261__delegate(x, y, z, args);
      };
      G__3261.cljs$core$IFn$_invoke$arity$variadic = G__3261__delegate;
      return G__3261;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__3264 = null;
          if (arguments.length > 3) {
            var G__3265__i = 0, G__3265__a = new Array(arguments.length - 3);
            while (G__3265__i < G__3265__a.length) {
              G__3265__a[G__3265__i] = arguments[G__3265__i + 3];
              ++G__3265__i;
            }
            G__3264 = new cljs.core.IndexedSeq(G__3265__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3264);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__3266__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(function(and__4120__auto__) {
              return function(p1__3245_SHARP_) {
                var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3245_SHARP_) : p1.call(null, p1__3245_SHARP_);
                if (cljs.core.truth_(and__4120__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3245_SHARP_) : p2.call(null, p1__3245_SHARP_);
                } else {
                  return and__4120__auto____$1;
                }
              };
            }(and__4120__auto__), args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3266 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3267__i = 0, G__3267__a = new Array(arguments.length - 3);
          while (G__3267__i < G__3267__a.length) {
            G__3267__a[G__3267__i] = arguments[G__3267__i + 3];
            ++G__3267__i;
          }
          args = new cljs.core.IndexedSeq(G__3267__a, 0, null);
        }
        return G__3266__delegate.call(this, x, y, z, args);
      };
      G__3266.cljs$lang$maxFixedArity = 3;
      G__3266.cljs$lang$applyTo = function(arglist__3268) {
        var x = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var y = cljs.core.first(arglist__3268);
        arglist__3268 = cljs.core.next(arglist__3268);
        var z = cljs.core.first(arglist__3268);
        var args = cljs.core.rest(arglist__3268);
        return G__3266__delegate(x, y, z, args);
      };
      G__3266.cljs$core$IFn$_invoke$arity$variadic = G__3266__delegate;
      return G__3266;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__3269 = null;
          if (arguments.length > 3) {
            var G__3270__i = 0, G__3270__a = new Array(arguments.length - 3);
            while (G__3270__i < G__3270__a.length) {
              G__3270__a[G__3270__i] = arguments[G__3270__i + 3];
              ++G__3270__i;
            }
            G__3269 = new cljs.core.IndexedSeq(G__3270__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3269);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4120__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4120__auto__)) {
          var and__4120__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4120__auto____$1)) {
            var and__4120__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4120__auto____$2)) {
              var and__4120__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$3)) {
                var and__4120__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4120__auto____$4)) {
                  var and__4120__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4120__auto____$5)) {
                    var and__4120__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4120__auto____$6)) {
                      var and__4120__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4120__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4120__auto____$7;
                      }
                    } else {
                      return and__4120__auto____$6;
                    }
                  } else {
                    return and__4120__auto____$5;
                  }
                } else {
                  return and__4120__auto____$4;
                }
              } else {
                return and__4120__auto____$3;
              }
            } else {
              return and__4120__auto____$2;
            }
          } else {
            return and__4120__auto____$1;
          }
        } else {
          return and__4120__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__3271__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4120__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4120__auto__)) {
            return cljs.core.every_QMARK_(function(and__4120__auto__) {
              return function(p1__3246_SHARP_) {
                var and__4120__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p1.call(null, p1__3246_SHARP_);
                if (cljs.core.truth_(and__4120__auto____$1)) {
                  var and__4120__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p2.call(null, p1__3246_SHARP_);
                  if (cljs.core.truth_(and__4120__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3246_SHARP_) : p3.call(null, p1__3246_SHARP_);
                  } else {
                    return and__4120__auto____$2;
                  }
                } else {
                  return and__4120__auto____$1;
                }
              };
            }(and__4120__auto__), args);
          } else {
            return and__4120__auto__;
          }
        }());
      };
      var G__3271 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3272__i = 0, G__3272__a = new Array(arguments.length - 3);
          while (G__3272__i < G__3272__a.length) {
            G__3272__a[G__3272__i] = arguments[G__3272__i + 3];
            ++G__3272__i;
          }
          args = new cljs.core.IndexedSeq(G__3272__a, 0, null);
        }
        return G__3271__delegate.call(this, x, y, z, args);
      };
      G__3271.cljs$lang$maxFixedArity = 3;
      G__3271.cljs$lang$applyTo = function(arglist__3273) {
        var x = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var y = cljs.core.first(arglist__3273);
        arglist__3273 = cljs.core.next(arglist__3273);
        var z = cljs.core.first(arglist__3273);
        var args = cljs.core.rest(arglist__3273);
        return G__3271__delegate(x, y, z, args);
      };
      G__3271.cljs$core$IFn$_invoke$arity$variadic = G__3271__delegate;
      return G__3271;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__3274 = null;
          if (arguments.length > 3) {
            var G__3275__i = 0, G__3275__a = new Array(arguments.length - 3);
            while (G__3275__i < G__3275__a.length) {
              G__3275__a[G__3275__i] = arguments[G__3275__i + 3];
              ++G__3275__i;
            }
            G__3274 = new cljs.core.IndexedSeq(G__3275__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3274);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3247_SHARP_) {
            return p1__3247_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3247_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3247_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3248_SHARP_) {
            var and__4120__auto__ = p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3248_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4120__auto__)) {
              return p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3248_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3248_SHARP_.call(null, y);
            } else {
              return and__4120__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__3249_SHARP_) {
            var and__4120__auto__ = p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3249_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4120__auto__)) {
              var and__4120__auto____$1 = p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3249_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4120__auto____$1)) {
                return p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3249_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3249_SHARP_.call(null, z);
              } else {
                return and__4120__auto____$1;
              }
            } else {
              return and__4120__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__3276__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4120__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4120__auto__)) {
              return cljs.core.every_QMARK_(function(and__4120__auto__, ps__$1) {
                return function(p1__3250_SHARP_) {
                  return cljs.core.every_QMARK_(p1__3250_SHARP_, args);
                };
              }(and__4120__auto__, ps__$1), ps__$1);
            } else {
              return and__4120__auto__;
            }
          }());
        };
        var G__3276 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3277__i = 0, G__3277__a = new Array(arguments.length - 3);
            while (G__3277__i < G__3277__a.length) {
              G__3277__a[G__3277__i] = arguments[G__3277__i + 3];
              ++G__3277__i;
            }
            args = new cljs.core.IndexedSeq(G__3277__a, 0, null);
          }
          return G__3276__delegate.call(this, x, y, z, args);
        };
        G__3276.cljs$lang$maxFixedArity = 3;
        G__3276.cljs$lang$applyTo = function(arglist__3278) {
          var x = cljs.core.first(arglist__3278);
          arglist__3278 = cljs.core.next(arglist__3278);
          var y = cljs.core.first(arglist__3278);
          arglist__3278 = cljs.core.next(arglist__3278);
          var z = cljs.core.first(arglist__3278);
          var args = cljs.core.rest(arglist__3278);
          return G__3276__delegate(x, y, z, args);
        };
        G__3276.cljs$core$IFn$_invoke$arity$variadic = G__3276__delegate;
        return G__3276;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__3279 = null;
            if (arguments.length > 3) {
              var G__3280__i = 0, G__3280__a = new Array(arguments.length - 3);
              while (G__3280__i < G__3280__a.length) {
                G__3280__a[G__3280__i] = arguments[G__3280__i + 3];
                ++G__3280__i;
              }
              G__3279 = new cljs.core.IndexedSeq(G__3280__a, 0, null);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3279);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq3252) {
  var G__3253 = cljs.core.first(seq3252);
  var seq3252__$1 = cljs.core.next(seq3252);
  var G__3254 = cljs.core.first(seq3252__$1);
  var seq3252__$2 = cljs.core.next(seq3252__$1);
  var G__3255 = cljs.core.first(seq3252__$2);
  var seq3252__$3 = cljs.core.next(seq3252__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3253, G__3254, G__3255, seq3252__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__3292 = arguments.length;
  switch(G__3292) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3294 = arguments.length;
      var i__4731__auto___3295 = 0;
      while (true) {
        if (i__4731__auto___3295 < len__4730__auto___3294) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3295]);
          var G__3296 = i__4731__auto___3295 + 1;
          i__4731__auto___3295 = G__3296;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__3297__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__3297 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3298__i = 0, G__3298__a = new Array(arguments.length - 3);
          while (G__3298__i < G__3298__a.length) {
            G__3298__a[G__3298__i] = arguments[G__3298__i + 3];
            ++G__3298__i;
          }
          args = new cljs.core.IndexedSeq(G__3298__a, 0, null);
        }
        return G__3297__delegate.call(this, x, y, z, args);
      };
      G__3297.cljs$lang$maxFixedArity = 3;
      G__3297.cljs$lang$applyTo = function(arglist__3299) {
        var x = cljs.core.first(arglist__3299);
        arglist__3299 = cljs.core.next(arglist__3299);
        var y = cljs.core.first(arglist__3299);
        arglist__3299 = cljs.core.next(arglist__3299);
        var z = cljs.core.first(arglist__3299);
        var args = cljs.core.rest(arglist__3299);
        return G__3297__delegate(x, y, z, args);
      };
      G__3297.cljs$core$IFn$_invoke$arity$variadic = G__3297__delegate;
      return G__3297;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__3300 = null;
          if (arguments.length > 3) {
            var G__3301__i = 0, G__3301__a = new Array(arguments.length - 3);
            while (G__3301__i < G__3301__a.length) {
              G__3301__a[G__3301__i] = arguments[G__3301__i + 3];
              ++G__3301__i;
            }
            G__3300 = new cljs.core.IndexedSeq(G__3301__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3300);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__3302__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__3281_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3281_SHARP_) : p1.call(null, p1__3281_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3281_SHARP_) : p2.call(null, p1__3281_SHARP_);
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__3302 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3303__i = 0, G__3303__a = new Array(arguments.length - 3);
          while (G__3303__i < G__3303__a.length) {
            G__3303__a[G__3303__i] = arguments[G__3303__i + 3];
            ++G__3303__i;
          }
          args = new cljs.core.IndexedSeq(G__3303__a, 0, null);
        }
        return G__3302__delegate.call(this, x, y, z, args);
      };
      G__3302.cljs$lang$maxFixedArity = 3;
      G__3302.cljs$lang$applyTo = function(arglist__3304) {
        var x = cljs.core.first(arglist__3304);
        arglist__3304 = cljs.core.next(arglist__3304);
        var y = cljs.core.first(arglist__3304);
        arglist__3304 = cljs.core.next(arglist__3304);
        var z = cljs.core.first(arglist__3304);
        var args = cljs.core.rest(arglist__3304);
        return G__3302__delegate(x, y, z, args);
      };
      G__3302.cljs$core$IFn$_invoke$arity$variadic = G__3302__delegate;
      return G__3302;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__3305 = null;
          if (arguments.length > 3) {
            var G__3306__i = 0, G__3306__a = new Array(arguments.length - 3);
            while (G__3306__i < G__3306__a.length) {
              G__3306__a[G__3306__i] = arguments[G__3306__i + 3];
              ++G__3306__i;
            }
            G__3305 = new cljs.core.IndexedSeq(G__3306__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3305);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                var or__4131__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4131__auto____$5)) {
                  return or__4131__auto____$5;
                } else {
                  var or__4131__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4131__auto____$6)) {
                    return or__4131__auto____$6;
                  } else {
                    var or__4131__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4131__auto____$7)) {
                      return or__4131__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__3307__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__3282_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p1.call(null, p1__3282_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p2.call(null, p1__3282_SHARP_);
                if (cljs.core.truth_(or__4131__auto____$2)) {
                  return or__4131__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__3282_SHARP_) : p3.call(null, p1__3282_SHARP_);
                }
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__3307 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__3308__i = 0, G__3308__a = new Array(arguments.length - 3);
          while (G__3308__i < G__3308__a.length) {
            G__3308__a[G__3308__i] = arguments[G__3308__i + 3];
            ++G__3308__i;
          }
          args = new cljs.core.IndexedSeq(G__3308__a, 0, null);
        }
        return G__3307__delegate.call(this, x, y, z, args);
      };
      G__3307.cljs$lang$maxFixedArity = 3;
      G__3307.cljs$lang$applyTo = function(arglist__3309) {
        var x = cljs.core.first(arglist__3309);
        arglist__3309 = cljs.core.next(arglist__3309);
        var y = cljs.core.first(arglist__3309);
        arglist__3309 = cljs.core.next(arglist__3309);
        var z = cljs.core.first(arglist__3309);
        var args = cljs.core.rest(arglist__3309);
        return G__3307__delegate(x, y, z, args);
      };
      G__3307.cljs$core$IFn$_invoke$arity$variadic = G__3307__delegate;
      return G__3307;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__3310 = null;
          if (arguments.length > 3) {
            var G__3311__i = 0, G__3311__a = new Array(arguments.length - 3);
            while (G__3311__i < G__3311__a.length) {
              G__3311__a[G__3311__i] = arguments[G__3311__i + 3];
              ++G__3311__i;
            }
            G__3310 = new cljs.core.IndexedSeq(G__3311__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3310);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3283_SHARP_) {
            return p1__3283_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3283_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3283_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3284_SHARP_) {
            var or__4131__auto__ = p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3284_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3284_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3284_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__3285_SHARP_) {
            var or__4131__auto__ = p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__3285_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              var or__4131__auto____$1 = p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__3285_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3285_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__3285_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__3312__delegate = function(x, y, z, args) {
          var or__4131__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.some(function(or__4131__auto__, ps__$1) {
              return function(p1__3286_SHARP_) {
                return cljs.core.some(p1__3286_SHARP_, args);
              };
            }(or__4131__auto__, ps__$1), ps__$1);
          }
        };
        var G__3312 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__3313__i = 0, G__3313__a = new Array(arguments.length - 3);
            while (G__3313__i < G__3313__a.length) {
              G__3313__a[G__3313__i] = arguments[G__3313__i + 3];
              ++G__3313__i;
            }
            args = new cljs.core.IndexedSeq(G__3313__a, 0, null);
          }
          return G__3312__delegate.call(this, x, y, z, args);
        };
        G__3312.cljs$lang$maxFixedArity = 3;
        G__3312.cljs$lang$applyTo = function(arglist__3314) {
          var x = cljs.core.first(arglist__3314);
          arglist__3314 = cljs.core.next(arglist__3314);
          var y = cljs.core.first(arglist__3314);
          arglist__3314 = cljs.core.next(arglist__3314);
          var z = cljs.core.first(arglist__3314);
          var args = cljs.core.rest(arglist__3314);
          return G__3312__delegate(x, y, z, args);
        };
        G__3312.cljs$core$IFn$_invoke$arity$variadic = G__3312__delegate;
        return G__3312;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__3315 = null;
            if (arguments.length > 3) {
              var G__3316__i = 0, G__3316__a = new Array(arguments.length - 3);
              while (G__3316__i < G__3316__a.length) {
                G__3316__a[G__3316__i] = arguments[G__3316__i + 3];
                ++G__3316__i;
              }
              G__3315 = new cljs.core.IndexedSeq(G__3316__a, 0, null);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__3315);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq3288) {
  var G__3289 = cljs.core.first(seq3288);
  var seq3288__$1 = cljs.core.next(seq3288);
  var G__3290 = cljs.core.first(seq3288__$1);
  var seq3288__$2 = cljs.core.next(seq3288__$1);
  var G__3291 = cljs.core.first(seq3288__$2);
  var seq3288__$3 = cljs.core.next(seq3288__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3289, G__3290, G__3291, seq3288__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__3324 = arguments.length;
  switch(G__3324) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3337 = arguments.length;
      var i__4731__auto___3338 = 0;
      while (true) {
        if (i__4731__auto___3338 < len__4730__auto___3337) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3338]);
          var G__3339 = i__4731__auto___3338 + 1;
          i__4731__auto___3338 = G__3339;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__3340 = null;
      var G__3340__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3340__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3340__2 = function(result, input) {
        var G__3325 = result;
        var G__3326 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3325, G__3326) : rf.call(null, G__3325, G__3326);
      };
      var G__3340__3 = function() {
        var G__3341__delegate = function(result, input, inputs) {
          var G__3327 = result;
          var G__3328 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3327, G__3328) : rf.call(null, G__3327, G__3328);
        };
        var G__3341 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__3342__i = 0, G__3342__a = new Array(arguments.length - 2);
            while (G__3342__i < G__3342__a.length) {
              G__3342__a[G__3342__i] = arguments[G__3342__i + 2];
              ++G__3342__i;
            }
            inputs = new cljs.core.IndexedSeq(G__3342__a, 0, null);
          }
          return G__3341__delegate.call(this, result, input, inputs);
        };
        G__3341.cljs$lang$maxFixedArity = 2;
        G__3341.cljs$lang$applyTo = function(arglist__3343) {
          var result = cljs.core.first(arglist__3343);
          arglist__3343 = cljs.core.next(arglist__3343);
          var input = cljs.core.first(arglist__3343);
          var inputs = cljs.core.rest(arglist__3343);
          return G__3341__delegate(result, input, inputs);
        };
        G__3341.cljs$core$IFn$_invoke$arity$variadic = G__3341__delegate;
        return G__3341;
      }();
      G__3340 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__3340__0.call(this);
          case 1:
            return G__3340__1.call(this, result);
          case 2:
            return G__3340__2.call(this, result, input);
          default:
            var G__3344 = null;
            if (arguments.length > 2) {
              var G__3345__i = 0, G__3345__a = new Array(arguments.length - 2);
              while (G__3345__i < G__3345__a.length) {
                G__3345__a[G__3345__i] = arguments[G__3345__i + 2];
                ++G__3345__i;
              }
              G__3344 = new cljs.core.IndexedSeq(G__3345__a, 0, null);
            }
            return G__3340__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__3344);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3340.cljs$lang$maxFixedArity = 2;
      G__3340.cljs$lang$applyTo = G__3340__3.cljs$lang$applyTo;
      G__3340.cljs$core$IFn$_invoke$arity$0 = G__3340__0;
      G__3340.cljs$core$IFn$_invoke$arity$1 = G__3340__1;
      G__3340.cljs$core$IFn$_invoke$arity$2 = G__3340__2;
      G__3340.cljs$core$IFn$_invoke$arity$variadic = G__3340__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__3340;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3346 = size;
        var i_3347 = 0;
        while (true) {
          if (i_3347 < n__4607__auto___3346) {
            cljs.core.chunk_append(b, function() {
              var G__3329 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3347);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3329) : f.call(null, G__3329);
            }());
            var G__3348 = i_3347 + 1;
            i_3347 = G__3348;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__3330 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3330) : f.call(null, G__3330);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__3331 = cljs.core.first(s1);
        var G__3332 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3331, G__3332) : f.call(null, G__3331, G__3332);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__3333 = cljs.core.first(s1);
        var G__3334 = cljs.core.first(s2);
        var G__3335 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3333, G__3334, G__3335) : f.call(null, G__3333, G__3334, G__3335);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__3317_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__3317_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq3319) {
  var G__3320 = cljs.core.first(seq3319);
  var seq3319__$1 = cljs.core.next(seq3319);
  var G__3321 = cljs.core.first(seq3319__$1);
  var seq3319__$2 = cljs.core.next(seq3319__$1);
  var G__3322 = cljs.core.first(seq3319__$2);
  var seq3319__$3 = cljs.core.next(seq3319__$2);
  var G__3323 = cljs.core.first(seq3319__$3);
  var seq3319__$4 = cljs.core.next(seq3319__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3320, G__3321, G__3322, G__3323, seq3319__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__3350 = arguments.length;
  switch(G__3350) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3352 = null;
        var G__3352__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3352__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3352__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__3352 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3352__0.call(this);
            case 1:
              return G__3352__1.call(this, result);
            case 2:
              return G__3352__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3352.cljs$core$IFn$_invoke$arity$0 = G__3352__0;
        G__3352.cljs$core$IFn$_invoke$arity$1 = G__3352__1;
        G__3352.cljs$core$IFn$_invoke$arity$2 = G__3352__2;
        return G__3352;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__3354 = arguments.length;
  switch(G__3354) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__3356 = null;
        var G__3356__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3356__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3356__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3356 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3356__0.call(this);
            case 1:
              return G__3356__1.call(this, result);
            case 2:
              return G__3356__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3356.cljs$core$IFn$_invoke$arity$0 = G__3356__0;
        G__3356.cljs$core$IFn$_invoke$arity$1 = G__3356__1;
        G__3356.cljs$core$IFn$_invoke$arity$2 = G__3356__2;
        return G__3356;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__3357 = n__$1 - 1;
        var G__3358 = cljs.core.rest(s);
        n__$1 = G__3357;
        coll__$1 = G__3358;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__3360 = arguments.length;
  switch(G__3360) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__3362 = cljs.core.next(s);
      var G__3363 = cljs.core.next(lead);
      s = G__3362;
      lead = G__3363;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__3365 = arguments.length;
  switch(G__3365) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__3369 = null;
        var G__3369__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3369__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3369__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4120__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4120__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3369 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3369__0.call(this);
            case 1:
              return G__3369__1.call(this, result);
            case 2:
              return G__3369__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3369.cljs$core$IFn$_invoke$arity$0 = G__3369__0;
        G__3369.cljs$core$IFn$_invoke$arity$1 = G__3369__1;
        G__3369.cljs$core$IFn$_invoke$arity$2 = G__3369__2;
        return G__3369;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = s;
        if (and__4120__auto__) {
          var G__3367 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3367) : pred__$1.call(null, G__3367);
        } else {
          return and__4120__auto__;
        }
      }())) {
        var G__3370 = pred__$1;
        var G__3371 = cljs.core.rest(s);
        pred__$1 = G__3370;
        coll__$1 = G__3371;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5718__auto___3378 = cljs.core.next(self__.prev);
    if (temp__5718__auto___3378) {
      var c_3379 = temp__5718__auto___3378;
      self__.current = c_3379;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4131__auto__ = cljs.core.next(s);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__3374 = ret;
      var G__3375 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3374, G__3375) : f.call(null, G__3374, G__3375);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3380 = s__$1;
      var G__3381 = ret__$1;
      s = G__3380;
      ret = G__3381;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__3376 = ret;
      var G__3377 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3376, G__3377) : f.call(null, G__3376, G__3377);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__3382 = function() {
        var or__4131__auto__ = cljs.core.next(s);
        if (or__4131__auto__) {
          return or__4131__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__3383 = ret__$1;
      s = G__3382;
      ret = G__3383;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5718__auto__ = cljs.core.seq(coll);
  if (temp__5718__auto__) {
    var vals = temp__5718__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__3384 = null;
  var G__3384__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3384__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3384 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3384__1.call(this, x);
      case 2:
        return G__3384__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3384.cljs$core$IFn$_invoke$arity$1 = G__3384__1;
  G__3384.cljs$core$IFn$_invoke$arity$2 = G__3384__2;
  return G__3384;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__3385 = null;
  var G__3385__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__3385__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3385 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3385__1.call(this, x);
      case 2:
        return G__3385__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3385.cljs$core$IFn$_invoke$arity$1 = G__3385__1;
  G__3385.cljs$core$IFn$_invoke$arity$2 = G__3385__2;
  return G__3385;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3386 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3386;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3387 = i + 1;
          var G__3388 = ret__$1;
          i = G__3387;
          ret = G__3388;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__3389 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__3389;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__3390 = i + 1;
          var G__3391 = ret__$1;
          i = G__3390;
          ret = G__3391;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__3393 = arguments.length;
  switch(G__3393) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__3396 = arguments.length;
  switch(G__3396) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3398 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3399 = v__$2;
      ret = G__3398;
      v__$1 = G__3399;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__3400 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__3401 = v__$2;
      ret = G__3400;
      v__$1 = G__3401;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__3406 = arguments.length;
  switch(G__3406) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3408 = arguments.length;
      var i__4731__auto___3409 = 0;
      while (true) {
        if (i__4731__auto___3409 < len__4730__auto___3408) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3409]);
          var G__3410 = i__4731__auto___3409 + 1;
          i__4731__auto___3409 = G__3410;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4752__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq3403) {
  var G__3404 = cljs.core.first(seq3403);
  var seq3403__$1 = cljs.core.next(seq3403);
  var G__3405 = cljs.core.first(seq3403__$1);
  var seq3403__$2 = cljs.core.next(seq3403__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3404, G__3405, seq3403__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__3412 = arguments.length;
  switch(G__3412) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__3414 = null;
        var G__3414__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__3414__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__3414__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__3414 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__3414__0.call(this);
            case 1:
              return G__3414__1.call(this, result);
            case 2:
              return G__3414__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__3414.cljs$core$IFn$_invoke$arity$0 = G__3414__0;
        G__3414.cljs$core$IFn$_invoke$arity$1 = G__3414__1;
        G__3414.cljs$core$IFn$_invoke$arity$2 = G__3414__2;
        return G__3414;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5718__auto__ = cljs.core.seq(coll);
      if (temp__5718__auto__) {
        var coll__$1 = temp__5718__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__3418 = arguments.length;
  switch(G__3418) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3420 = arguments.length;
      var i__4731__auto___3421 = 0;
      while (true) {
        if (i__4731__auto___3421 < len__4730__auto___3420) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3421]);
          var G__3422 = i__4731__auto___3421 + 1;
          i__4731__auto___3421 = G__3422;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq3416) {
  var G__3417 = cljs.core.first(seq3416);
  var seq3416__$1 = cljs.core.next(seq3416);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3417, seq3416__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__3424 = arguments.length;
  switch(G__3424) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__3427 = null;
      var G__3427__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__3427__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__3427__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__3427 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__3427__0.call(this);
          case 1:
            return G__3427__1.call(this, result);
          case 2:
            return G__3427__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__3427.cljs$core$IFn$_invoke$arity$0 = G__3427__0;
      G__3427.cljs$core$IFn$_invoke$arity$1 = G__3427__1;
      G__3427.cljs$core$IFn$_invoke$arity$2 = G__3427__2;
      return G__3427;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4607__auto___3428 = size;
        var i_3429 = 0;
        while (true) {
          if (i_3429 < n__4607__auto___3428) {
            if (cljs.core.truth_(function() {
              var G__3425 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3429);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3425) : pred.call(null, G__3425);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_3429));
            } else {
            }
            var G__3430 = i_3429 + 1;
            i_3429 = G__3430;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__3432 = arguments.length;
  switch(G__3432) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__3434_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__3434_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__3436 = arguments.length;
  switch(G__3436) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__3446 = arguments.length;
  switch(G__3446) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3448 = arguments.length;
      var i__4731__auto___3449 = 0;
      while (true) {
        if (i__4731__auto___3449 < len__4730__auto___3448) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3449]);
          var G__3450 = i__4731__auto___3449 + 1;
          i__4731__auto___3449 = G__3450;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4752__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq3441) {
  var G__3442 = cljs.core.first(seq3441);
  var seq3441__$1 = cljs.core.next(seq3441);
  var G__3443 = cljs.core.first(seq3441__$1);
  var seq3441__$2 = cljs.core.next(seq3441__$1);
  var G__3444 = cljs.core.first(seq3441__$2);
  var seq3441__$3 = cljs.core.next(seq3441__$2);
  var G__3445 = cljs.core.first(seq3441__$3);
  var seq3441__$4 = cljs.core.next(seq3441__$3);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3442, G__3443, G__3444, G__3445, seq3441__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__3452 = arguments.length;
  switch(G__3452) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__3455 = arguments.length;
  switch(G__3455) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__3457 = sentinel;
        var G__3458 = m__$2;
        var G__3459 = cljs.core.next(ks__$1);
        sentinel = G__3457;
        m__$1 = G__3458;
        ks__$1 = G__3459;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__3460, v) {
  var vec__3461 = p__3460;
  var seq__3462 = cljs.core.seq(vec__3461);
  var first__3463 = cljs.core.first(seq__3462);
  var seq__3462__$1 = cljs.core.next(seq__3462);
  var k = first__3463;
  var ks = seq__3462__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3464 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3465 = ks;
      var G__3466 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__3464, G__3465, G__3466) : cljs.core.assoc_in.call(null, G__3464, G__3465, G__3466);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__3475 = arguments.length;
  switch(G__3475) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3507 = arguments.length;
      var i__4731__auto___3508 = 0;
      while (true) {
        if (i__4731__auto___3508 < len__4730__auto___3507) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3508]);
          var G__3509 = i__4731__auto___3508 + 1;
          i__4731__auto___3508 = G__3509;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__3476, f) {
  var vec__3477 = p__3476;
  var seq__3478 = cljs.core.seq(vec__3477);
  var first__3479 = cljs.core.first(seq__3478);
  var seq__3478__$1 = cljs.core.next(seq__3478);
  var k = first__3479;
  var ks = seq__3478__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3480 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3480) : f.call(null, G__3480);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__3481, f, a) {
  var vec__3482 = p__3481;
  var seq__3483 = cljs.core.seq(vec__3482);
  var first__3484 = cljs.core.first(seq__3483);
  var seq__3483__$1 = cljs.core.next(seq__3483);
  var k = first__3484;
  var ks = seq__3483__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3485 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3486 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3485, G__3486) : f.call(null, G__3485, G__3486);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__3487, f, a, b) {
  var vec__3488 = p__3487;
  var seq__3489 = cljs.core.seq(vec__3488);
  var first__3490 = cljs.core.first(seq__3489);
  var seq__3489__$1 = cljs.core.next(seq__3489);
  var k = first__3490;
  var ks = seq__3489__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3491 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3492 = a;
      var G__3493 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3491, G__3492, G__3493) : f.call(null, G__3491, G__3492, G__3493);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__3494, f, a, b, c) {
  var vec__3495 = p__3494;
  var seq__3496 = cljs.core.seq(vec__3495);
  var first__3497 = cljs.core.first(seq__3496);
  var seq__3496__$1 = cljs.core.next(seq__3496);
  var k = first__3497;
  var ks = seq__3496__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__3498 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__3499 = a;
      var G__3500 = b;
      var G__3501 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3498, G__3499, G__3500, G__3501) : f.call(null, G__3498, G__3499, G__3500, G__3501);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__3502, f, a, b, c, args) {
  var vec__3503 = p__3502;
  var seq__3504 = cljs.core.seq(vec__3503);
  var first__3505 = cljs.core.first(seq__3504);
  var seq__3504__$1 = cljs.core.next(seq__3504);
  var k = first__3505;
  var ks = seq__3504__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq3468) {
  var G__3469 = cljs.core.first(seq3468);
  var seq3468__$1 = cljs.core.next(seq3468);
  var G__3470 = cljs.core.first(seq3468__$1);
  var seq3468__$2 = cljs.core.next(seq3468__$1);
  var G__3471 = cljs.core.first(seq3468__$2);
  var seq3468__$3 = cljs.core.next(seq3468__$2);
  var G__3472 = cljs.core.first(seq3468__$3);
  var seq3468__$4 = cljs.core.next(seq3468__$3);
  var G__3473 = cljs.core.first(seq3468__$4);
  var seq3468__$5 = cljs.core.next(seq3468__$4);
  var G__3474 = cljs.core.first(seq3468__$5);
  var seq3468__$6 = cljs.core.next(seq3468__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3469, G__3470, G__3471, G__3472, G__3473, G__3474, seq3468__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__3518 = arguments.length;
  switch(G__3518) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___3530 = arguments.length;
      var i__4731__auto___3531 = 0;
      while (true) {
        if (i__4731__auto___3531 < len__4730__auto___3530) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___3531]);
          var G__3532 = i__4731__auto___3531 + 1;
          i__4731__auto___3531 = G__3532;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4752__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3519) : f.call(null, G__3519);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3520 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3521 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3520, G__3521) : f.call(null, G__3520, G__3521);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3522 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3523 = x;
    var G__3524 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3522, G__3523, G__3524) : f.call(null, G__3522, G__3523, G__3524);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__3525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__3526 = x;
    var G__3527 = y;
    var G__3528 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3525, G__3526, G__3527, G__3528) : f.call(null, G__3525, G__3526, G__3527, G__3528);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq3511) {
  var G__3512 = cljs.core.first(seq3511);
  var seq3511__$1 = cljs.core.next(seq3511);
  var G__3513 = cljs.core.first(seq3511__$1);
  var seq3511__$2 = cljs.core.next(seq3511__$1);
  var G__3514 = cljs.core.first(seq3511__$2);
  var seq3511__$3 = cljs.core.next(seq3511__$2);
  var G__3515 = cljs.core.first(seq3511__$3);
  var seq3511__$4 = cljs.core.next(seq3511__$3);
  var G__3516 = cljs.core.first(seq3511__$4);
  var seq3511__$5 = cljs.core.next(seq3511__$4);
  var G__3517 = cljs.core.first(seq3511__$5);
  var seq3511__$6 = cljs.core.next(seq3511__$5);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__3512, G__3513, G__3514, G__3515, G__3516, G__3517, seq3511__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__3533 = ll - 5;
      var G__3534 = r;
      ll = G__3533;
      ret = G__3534;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__3535 = pv;
        var G__3536 = level - 5;
        var G__3537 = child;
        var G__3538 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__3535, G__3536, G__3537, G__3538) : cljs.core.push_tail.call(null, G__3535, G__3536, G__3537, G__3538);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__3539 = cljs.core.pv_aget(node, 0);
      var G__3540 = level - 5;
      node = G__3539;
      level = G__3540;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__3541 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__3542 = level - 5;
        node = G__3541;
        level = G__3542;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__3543 = pv;
      var G__3544 = level - 5;
      var G__3545 = cljs.core.pv_aget(node, subidx);
      var G__3546 = i;
      var G__3547 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__3543, G__3544, G__3545, G__3546, G__3547) : cljs.core.do_assoc.call(null, G__3543, G__3544, G__3545, G__3546, G__3547);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3548 = pv;
      var G__3549 = level - 5;
      var G__3550 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__3548, G__3549, G__3550) : cljs.core.pop_tail.call(null, G__3548, G__3549, G__3550);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__3552 = arguments.length;
  switch(G__3552) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__3553 = acc;
        var G__3554 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3553, G__3554) : f.call(null, G__3553, G__3554);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__3556 = nacc;
        var G__3557 = i + 1;
        var G__3558 = arr__$1;
        acc = G__3556;
        i = G__3557;
        arr = G__3558;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__3565 = null;
  var G__3565__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3565__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3565 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3565__1.call(this, x);
      case 2:
        return G__3565__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3565.cljs$core$IFn$_invoke$arity$1 = G__3565__1;
  G__3565.cljs$core$IFn$_invoke$arity$2 = G__3565__2;
  return G__3565;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__3566 = null;
  var G__3566__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3566__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3566 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3566__1.call(this, x);
      case 2:
        return G__3566__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3566.cljs$core$IFn$_invoke$arity$1 = G__3566__1;
  G__3566.cljs$core$IFn$_invoke$arity$2 = G__3566__2;
  return G__3566;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3560 = init__$2;
              var G__3561 = j + i;
              var G__3562 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3560, G__3561, G__3562) : f.call(null, G__3560, G__3561, G__3562);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3567 = j + 1;
              var G__3568 = init__$3;
              j = G__3567;
              init__$2 = G__3568;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3569 = i + len;
        var G__3570 = init__$2;
        i = G__3569;
        init__$1 = G__3570;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__3563 = init__$2;
              var G__3564 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3563, G__3564) : f.call(null, G__3563, G__3564);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__3571 = j + 1;
              var G__3572 = init__$3;
              j = G__3571;
              init__$2 = G__3572;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3573 = i + len;
        var G__3574 = init__$2;
        i = G__3573;
        init__$1 = G__3574;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4607__auto___3575 = len;
    var i_3576 = 0;
    while (true) {
      if (i_3576 < n__4607__auto___3575) {
        new_tail[i_3576] = self__.tail[i_3576];
        var G__3577 = i_3576 + 1;
        i_3576 = G__3577;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__3578 = null;
  var G__3578__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3578__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3578 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3578__2.call(this, self__, k);
      case 3:
        return G__3578__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3578.cljs$core$IFn$_invoke$arity$2 = G__3578__2;
  G__3578.cljs$core$IFn$_invoke$arity$3 = G__3578__3;
  return G__3578;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args3559) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3559)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__3579 = i + 1;
        var G__3580 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__3579;
        out = G__3580;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
var G__3581_3584 = cljs.core.PersistentVector.prototype;
var G__3582_3585 = cljs.core.ITER_SYMBOL;
var G__3583_3586 = function(G__3581_3584, G__3582_3585) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3581_3584, G__3582_3585);
goog.object.set(G__3581_3584, G__3582_3585, G__3583_3586);
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___3588 = arguments.length;
  var i__4731__auto___3589 = 0;
  while (true) {
    if (i__4731__auto___3589 < len__4730__auto___3588) {
      args__4736__auto__.push(arguments[i__4731__auto___3589]);
      var G__3590 = i__4731__auto___3589 + 1;
      i__4731__auto___3589 = G__3590;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq3587) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq3587));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__3591 = null;
  var G__3591__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3591__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3591 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3591__1.call(this, x);
      case 2:
        return G__3591__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3591.cljs$core$IFn$_invoke$arity$1 = G__3591__1;
  G__3591.cljs$core$IFn$_invoke$arity$2 = G__3591__2;
  return G__3591;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__3592 = null;
  var G__3592__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3592__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3592 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3592__1.call(this, x);
      case 2:
        return G__3592__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3592.cljs$core$IFn$_invoke$arity$1 = G__3592__1;
  G__3592.cljs$core$IFn$_invoke$arity$2 = G__3592__2;
  return G__3592;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
var G__3593_3596 = cljs.core.ChunkedSeq.prototype;
var G__3594_3597 = cljs.core.ITER_SYMBOL;
var G__3595_3598 = function(G__3593_3596, G__3594_3597) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3593_3596, G__3594_3597);
goog.object.set(G__3593_3596, G__3594_3597, G__3595_3598);
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__3600 = arguments.length;
  switch(G__3600) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__3609 = null;
  var G__3609__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3609__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3609 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3609__1.call(this, x);
      case 2:
        return G__3609__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3609.cljs$core$IFn$_invoke$arity$1 = G__3609__1;
  G__3609.cljs$core$IFn$_invoke$arity$2 = G__3609__2;
  return G__3609;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__3610 = null;
  var G__3610__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3610__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__3610 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__3610__1.call(this, x);
      case 2:
        return G__3610__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3610.cljs$core$IFn$_invoke$arity$1 = G__3610__1;
  G__3610.cljs$core$IFn$_invoke$arity$2 = G__3610__2;
  return G__3610;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__3603 = init__$1;
        var G__3604 = j;
        var G__3605 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3603, G__3604, G__3605) : f.call(null, G__3603, G__3604, G__3605);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3611 = i + 1;
        var G__3612 = j + 1;
        var G__3613 = init__$2;
        i = G__3611;
        j = G__3612;
        init__$1 = G__3613;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4219__auto__ = self__.end;
      var y__4220__auto__ = v_pos + 1;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__3614 = null;
  var G__3614__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3614__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3614 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3614__2.call(this, self__, k);
      case 3:
        return G__3614__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3614.cljs$core$IFn$_invoke$arity$2 = G__3614__2;
  G__3614.cljs$core$IFn$_invoke$arity$3 = G__3614__3;
  return G__3614;
}();
cljs.core.Subvec.prototype.apply = function(self__, args3602) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3602)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
var G__3615_3618 = cljs.core.Subvec.prototype;
var G__3616_3619 = cljs.core.ITER_SYMBOL;
var G__3617_3620 = function(G__3615_3618, G__3616_3619) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3615_3618, G__3616_3619);
goog.object.set(G__3615_3618, G__3616_3619, G__3617_3620);
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__3621 = meta;
      var G__3622 = v.v;
      var G__3623 = v.start + start;
      var G__3624 = v.start + end;
      var G__3625 = __hash;
      meta = G__3621;
      v = G__3622;
      start = G__3623;
      end = G__3624;
      __hash = G__3625;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      var c_3626 = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c_3626 || end > c_3626) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__3628 = arguments.length;
  switch(G__3628) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__3632 = tv;
      var G__3633 = level - 5;
      var G__3634 = child;
      var G__3635 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__3632, G__3633, G__3634, G__3635) : cljs.core.tv_push_tail.call(null, G__3632, G__3633, G__3634, G__3635);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__3636 = tv;
      var G__3637 = level - 5;
      var G__3638 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__3636, G__3637, G__3638) : cljs.core.tv_pop_tail.call(null, G__3636, G__3637, G__3638);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__3639 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__3640 = level - 5;
        node = G__3639;
        level = G__3640;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__3642 = function(tcoll__$1) {
            return function cljs$core$go(level, node) {
              var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
              if (level === 0) {
                cljs.core.pv_aset(node__$1, n & 31, val);
                return node__$1;
              } else {
                var subidx = n >>> level & 31;
                cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
                return node__$1;
              }
            };
          }(tcoll__$1);
          return fexpr__3642(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__3643 = null;
  var G__3643__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3643__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3643 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3643__2.call(this, self__, k);
      case 3:
        return G__3643__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3643.cljs$core$IFn$_invoke$arity$2 = G__3643__2;
  G__3643.cljs$core$IFn$_invoke$arity$3 = G__3643__3;
  return G__3643;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args3641) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3641)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var and__4120__auto__ = !(self__.riter == null);
    if (and__4120__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4120__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__3644 = null;
  var G__3644__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3644__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3644 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3644__1.call(this, x);
      case 2:
        return G__3644__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3644.cljs$core$IFn$_invoke$arity$1 = G__3644__1;
  G__3644.cljs$core$IFn$_invoke$arity$2 = G__3644__2;
  return G__3644;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__3645 = null;
  var G__3645__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3645__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3645 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3645__1.call(this, x);
      case 2:
        return G__3645__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3645.cljs$core$IFn$_invoke$arity$1 = G__3645__1;
  G__3645.cljs$core$IFn$_invoke$arity$2 = G__3645__2;
  return G__3645;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core.next(self__.front);
  if (temp__5718__auto__) {
    var f1 = temp__5718__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
var G__3646_3649 = cljs.core.PersistentQueueSeq.prototype;
var G__3647_3650 = cljs.core.ITER_SYMBOL;
var G__3648_3651 = function(G__3646_3649, G__3647_3650) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3646_3649, G__3647_3650);
goog.object.set(G__3646_3649, G__3647_3650, G__3648_3651);
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__3652 = null;
  var G__3652__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3652__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3652 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3652__1.call(this, x);
      case 2:
        return G__3652__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3652.cljs$core$IFn$_invoke$arity$1 = G__3652__1;
  G__3652.cljs$core$IFn$_invoke$arity$2 = G__3652__2;
  return G__3652;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__3653 = null;
  var G__3653__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__3653__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3653 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3653__1.call(this, x);
      case 2:
        return G__3653__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3653.cljs$core$IFn$_invoke$arity$1 = G__3653__1;
  G__3653.cljs$core$IFn$_invoke$arity$2 = G__3653__2;
  return G__3653;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5718__auto__ = cljs.core.next(self__.front);
    if (temp__5718__auto__) {
      var f1 = temp__5718__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = self__.front;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4131__auto__ = self__.rear;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
var G__3654_3657 = cljs.core.PersistentQueue.prototype;
var G__3655_3658 = cljs.core.ITER_SYMBOL;
var G__3656_3659 = function(G__3654_3657, G__3655_3658) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3654_3657, G__3655_3658);
goog.object.set(G__3654_3657, G__3655_3658, G__3656_3659);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__3661 = i + incr;
        i = G__3661;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__3662 = i + 1;
      var G__3663 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__3662;
      out = G__3663;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_3669 = 0;
  while (true) {
    if (i_3669 < l) {
      var k_3670 = ks[i_3669];
      var G__3666_3671 = new_obj;
      var G__3667_3672 = k_3670;
      var G__3668_3673 = goog.object.get(obj, k_3670);
      goog.object.set(G__3666_3671, G__3667_3672, G__3668_3673);
      var G__3674 = i_3669 + 1;
      i_3669 = G__3674;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__3677 = init__$1;
        var G__3678 = k;
        var G__3679 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3677, G__3678, G__3679) : f.call(null, G__3677, G__3678, G__3679);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3680 = cljs.core.rest(keys__$1);
        var G__3681 = init__$2;
        keys__$1 = G__3680;
        init__$1 = G__3681;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__3675_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__3675_SHARP_, self__.strobj[p1__3675_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__3682 = null;
  var G__3682__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3682__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3682 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3682__2.call(this, self__, k);
      case 3:
        return G__3682__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3682.cljs$core$IFn$_invoke$arity$2 = G__3682__2;
  G__3682.cljs$core$IFn$_invoke$arity$3 = G__3682__3;
  return G__3682;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args3676) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3676)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = self__.i < self__.base_count;
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__3685 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3685, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3685, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__3688 = i + 2;
        i = G__3688;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__3689 = i + 2;
        i = G__3689;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__3690 = i + 2;
        i = G__3690;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__3691 = i + 2;
        i = G__3691;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__3692 = i + 2;
        i = G__3692;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_3693 = 0;
  while (true) {
    if (i_3693 < l) {
      narr[i_3693] = arr[i_3693];
      var G__3694 = i_3693 + 1;
      i_3693 = G__3694;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3696 = k;
  switch(G__3696) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__3698 = null;
  var G__3698__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3698__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3698 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3698__1.call(this, x);
      case 2:
        return G__3698__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3698.cljs$core$IFn$_invoke$arity$1 = G__3698__1;
  G__3698.cljs$core$IFn$_invoke$arity$2 = G__3698__2;
  return G__3698;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__3699 = null;
  var G__3699__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3699__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3699 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3699__1.call(this, x);
      case 2:
        return G__3699__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3699.cljs$core$IFn$_invoke$arity$1 = G__3699__1;
  G__3699.cljs$core$IFn$_invoke$arity$2 = G__3699__2;
  return G__3699;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__3700 = null;
  var G__3700__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3700__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3700 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3700__2.call(this, self__, k);
      case 3:
        return G__3700__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3700.cljs$core$IFn$_invoke$arity$2 = G__3700__2;
  G__3700.cljs$core$IFn$_invoke$arity$3 = G__3700__3;
  return G__3700;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args3695) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3695)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__3702 = null;
  var G__3702__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3702__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3702 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3702__1.call(this, x);
      case 2:
        return G__3702__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3702.cljs$core$IFn$_invoke$arity$1 = G__3702__1;
  G__3702.cljs$core$IFn$_invoke$arity$2 = G__3702__2;
  return G__3702;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__3703 = null;
  var G__3703__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3703__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3703 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3703__1.call(this, x);
      case 2:
        return G__3703__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3703.cljs$core$IFn$_invoke$arity$1 = G__3703__1;
  G__3703.cljs$core$IFn$_invoke$arity$2 = G__3703__2;
  return G__3703;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
var G__3704_3707 = cljs.core.PersistentArrayMapSeq.prototype;
var G__3705_3708 = cljs.core.ITER_SYMBOL;
var G__3706_3709 = function(G__3704_3707, G__3705_3708) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3704_3707, G__3705_3708);
goog.object.set(G__3704_3707, G__3705_3708, G__3706_3709);
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3711 = cljs.core.seq(coll);
  var chunk__3712 = null;
  var count__3713 = 0;
  var i__3714 = 0;
  while (true) {
    if (i__3714 < count__3713) {
      var vec__3721 = chunk__3712.cljs$core$IIndexed$_nth$arity$2(null, i__3714);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3721, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3721, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3733 = seq__3711;
      var G__3734 = chunk__3712;
      var G__3735 = count__3713;
      var G__3736 = i__3714 + 1;
      seq__3711 = G__3733;
      chunk__3712 = G__3734;
      count__3713 = G__3735;
      i__3714 = G__3736;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3711);
      if (temp__5720__auto__) {
        var seq__3711__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3711__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3711__$1);
          var G__3737 = cljs.core.chunk_rest(seq__3711__$1);
          var G__3738 = c__4550__auto__;
          var G__3739 = cljs.core.count(c__4550__auto__);
          var G__3740 = 0;
          seq__3711 = G__3737;
          chunk__3712 = G__3738;
          count__3713 = G__3739;
          i__3714 = G__3740;
          continue;
        } else {
          var vec__3724 = cljs.core.first(seq__3711__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3724, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3724, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3741 = cljs.core.next(seq__3711__$1);
          var G__3742 = null;
          var G__3743 = 0;
          var G__3744 = 0;
          seq__3711 = G__3741;
          chunk__3712 = G__3742;
          count__3713 = G__3743;
          i__3714 = G__3744;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__3727 = init__$1;
        var G__3728 = self__.arr[i];
        var G__3729 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3727, G__3728, G__3729) : f.call(null, G__3727, G__3728, G__3729);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__3745 = i + 2;
        var G__3746 = init__$2;
        i = G__3745;
        init__$1 = G__3746;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__3747 = i + 2;
              i = G__3747;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__3748 = s + 2;
            var G__3749 = d;
            s = G__3748;
            d = G__3749;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__3750 = s + 2;
            var G__3751 = d + 2;
            s = G__3750;
            d = G__3751;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__3732 = cljs.core.aclone(self__.arr);
        G__3732[idx + 1] = v;
        return G__3732;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3752 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3753 = cljs.core.next(es);
          ret = G__3752;
          es = G__3753;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__3754 = null;
  var G__3754__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3754__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3754 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3754__2.call(this, self__, k);
      case 3:
        return G__3754__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3754.cljs$core$IFn$_invoke$arity$2 = G__3754__2;
  G__3754.cljs$core$IFn$_invoke$arity$3 = G__3754__3;
  return G__3754;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args3710) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3710)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_3755 = 0;
    while (true) {
      if (i_3755 < arr__$1.length) {
        var k_3756 = arr__$1[i_3755];
        var v_3757 = arr__$1[i_3755 + 1];
        var idx_3758 = cljs.core.array_index_of(ret, k_3756);
        if (idx_3758 === -1) {
          ret.push(k_3756);
          ret.push(v_3757);
        } else {
        }
        var G__3759 = i_3755 + 2;
        i_3755 = G__3759;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_3761 = 0;
  while (true) {
    if (i_3761 < arr.length) {
      var k_3762 = arr[i_3761];
      var v_3763 = arr[i_3761 + 1];
      var idx_3764 = cljs.core.array_index_of(ret, k_3762);
      if (idx_3764 === -1) {
        var G__3760_3765 = ret;
        G__3760_3765.push(k_3762);
        G__3760_3765.push(v_3763);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_3762)].join(""));
      }
      var G__3766 = i_3761 + 2;
      i_3761 = G__3766;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_3768 = 0;
  while (true) {
    if (i_3768 < arr.length) {
      var k_3769 = arr[i_3768];
      var v_3770 = arr[i_3768 + 1];
      var idx_3771 = cljs.core.array_index_of(ret, k_3769);
      if (idx_3771 === -1) {
        var G__3767_3772 = ret;
        G__3767_3772.push(k_3769);
        G__3767_3772.push(v_3770);
      } else {
        ret[idx_3771 + 1] = v_3770;
      }
      var G__3773 = i_3768 + 2;
      i_3768 = G__3773;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
var G__3774_3777 = cljs.core.PersistentArrayMap.prototype;
var G__3775_3778 = cljs.core.ITER_SYMBOL;
var G__3776_3779 = function(G__3774_3777, G__3775_3778) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3774_3777, G__3775_3778);
goog.object.set(G__3774_3777, G__3775_3778, G__3776_3779);
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3782 = cljs.core.next(es);
            var G__3783 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__3782;
            tcoll__$2 = G__3783;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__3781_3784 = self__.arr;
      G__3781_3784.pop();
      G__3781_3784.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__3785 = null;
  var G__3785__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__3785__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3785 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3785__2.call(this, self__, key);
      case 3:
        return G__3785__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3785.cljs$core$IFn$_invoke$arity$2 = G__3785__2;
  G__3785.cljs$core$IFn$_invoke$arity$3 = G__3785__3;
  return G__3785;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args3780) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3780)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__3786 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__3787 = i + 2;
      out = G__3786;
      i = G__3787;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__3789 = arguments.length;
  switch(G__3789) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__3790 = cljs.core.aclone(arr);
  G__3790[i] = a;
  return G__3790;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__3791 = cljs.core.aclone(arr);
  G__3791[i] = a;
  G__3791[j] = b;
  return G__3791;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__3794 = arguments.length;
  switch(G__3794) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__3796 = init__$1;
          var G__3797 = k;
          var G__3798 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3796, G__3797, G__3798) : f.call(null, G__3796, G__3797, G__3798);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__3799 = i + 2;
        var G__3800 = init__$2;
        i = G__3799;
        init__$1 = G__3800;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4131__auto__ = !(self__.next_entry == null);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = !(self__.next_iter == null);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_3801 = 0;
        var j_3802 = 0;
        while (true) {
          if (i_3801 < 32) {
            if ((self__.bitmap >>> i_3801 & 1) === 0) {
              var G__3803 = i_3801 + 1;
              var G__3804 = j_3802;
              i_3801 = G__3803;
              j_3802 = G__3804;
              continue;
            } else {
              nodes[i_3801] = !(self__.arr[j_3802] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_3802]), self__.arr[j_3802], self__.arr[j_3802 + 1], added_leaf_QMARK_) : self__.arr[j_3802 + 1];
              var G__3805 = i_3801 + 1;
              var G__3806 = j_3802 + 2;
              i_3801 = G__3805;
              j_3802 = G__3806;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_3807 = 0;
      var j_3808 = 0;
      while (true) {
        if (i_3807 < 32) {
          if ((self__.bitmap >>> i_3807 & 1) === 0) {
            var G__3809 = i_3807 + 1;
            var G__3810 = j_3808;
            i_3807 = G__3809;
            j_3808 = G__3810;
            continue;
          } else {
            nodes[i_3807] = !(self__.arr[j_3808] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_3808]), self__.arr[j_3808], self__.arr[j_3808 + 1], added_leaf_QMARK_) : self__.arr[j_3808 + 1];
            var G__3811 = i_3807 + 1;
            var G__3812 = j_3808 + 2;
            i_3807 = G__3811;
            j_3808 = G__3812;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__3813 = i + 1;
        var G__3814 = j + 2;
        var G__3815 = bitmap | 1 << i;
        i = G__3813;
        j = G__3814;
        bitmap = G__3815;
        continue;
      } else {
        var G__3816 = i + 1;
        var G__3817 = j;
        var G__3818 = bitmap;
        i = G__3816;
        j = G__3817;
        bitmap = G__3818;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__3819 = i + 1;
          var G__3820 = init__$2;
          i = G__3819;
          init__$1 = G__3820;
          continue;
        }
      } else {
        var G__3821 = i + 1;
        var G__3822 = init__$1;
        i = G__3821;
        init__$1 = G__3822;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__3823 = i + 2;
        i = G__3823;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__3825 = arguments.length;
  switch(G__3825) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__3827 = null;
  var G__3827__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3827__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3827 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3827__1.call(this, x);
      case 2:
        return G__3827__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3827.cljs$core$IFn$_invoke$arity$1 = G__3827__1;
  G__3827.cljs$core$IFn$_invoke$arity$2 = G__3827__2;
  return G__3827;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__3828 = null;
  var G__3828__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3828__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3828 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3828__1.call(this, x);
      case 2:
        return G__3828__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3828.cljs$core$IFn$_invoke$arity$1 = G__3828__1;
  G__3828.cljs$core$IFn$_invoke$arity$2 = G__3828__2;
  return G__3828;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
var G__3829_3832 = cljs.core.NodeSeq.prototype;
var G__3830_3833 = cljs.core.ITER_SYMBOL;
var G__3831_3834 = function(G__3829_3832, G__3830_3833) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3829_3832, G__3830_3833);
goog.object.set(G__3829_3832, G__3830_3833, G__3831_3834);
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__3836 = arguments.length;
  switch(G__3836) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5718__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5718__auto__)) {
            var node = temp__5718__auto__;
            var temp__5718__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5718__auto____$1)) {
              var node_seq = temp__5718__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__3838 = j + 2;
              j = G__3838;
              continue;
            }
          } else {
            var G__3839 = j + 2;
            j = G__3839;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__3840 = null;
  var G__3840__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3840__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3840 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3840__1.call(this, x);
      case 2:
        return G__3840__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3840.cljs$core$IFn$_invoke$arity$1 = G__3840__1;
  G__3840.cljs$core$IFn$_invoke$arity$2 = G__3840__2;
  return G__3840;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__3841 = null;
  var G__3841__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3841__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3841 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3841__1.call(this, x);
      case 2:
        return G__3841__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3841.cljs$core$IFn$_invoke$arity$1 = G__3841__1;
  G__3841.cljs$core$IFn$_invoke$arity$2 = G__3841__2;
  return G__3841;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
var G__3842_3845 = cljs.core.ArrayNodeSeq.prototype;
var G__3843_3846 = cljs.core.ITER_SYMBOL;
var G__3844_3847 = function(G__3842_3845, G__3843_3846) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3842_3845, G__3843_3846);
goog.object.set(G__3842_3845, G__3843_3846, G__3844_3847);
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__3849 = arguments.length;
  switch(G__3849) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5718__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5718__auto__)) {
          var nj = temp__5718__auto__;
          var temp__5718__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5718__auto____$1)) {
            var ns = temp__5718__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__3851 = j + 1;
            j = G__3851;
            continue;
          }
        } else {
          var G__3852 = j + 1;
          j = G__3852;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3854 = cljs.core.seq(coll);
  var chunk__3855 = null;
  var count__3856 = 0;
  var i__3857 = 0;
  while (true) {
    if (i__3857 < count__3856) {
      var vec__3864 = chunk__3855.cljs$core$IIndexed$_nth$arity$2(null, i__3857);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3864, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3864, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__3872 = seq__3854;
      var G__3873 = chunk__3855;
      var G__3874 = count__3856;
      var G__3875 = i__3857 + 1;
      seq__3854 = G__3872;
      chunk__3855 = G__3873;
      count__3856 = G__3874;
      i__3857 = G__3875;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3854);
      if (temp__5720__auto__) {
        var seq__3854__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3854__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3854__$1);
          var G__3876 = cljs.core.chunk_rest(seq__3854__$1);
          var G__3877 = c__4550__auto__;
          var G__3878 = cljs.core.count(c__4550__auto__);
          var G__3879 = 0;
          seq__3854 = G__3876;
          chunk__3855 = G__3877;
          count__3856 = G__3878;
          i__3857 = G__3879;
          continue;
        } else {
          var vec__3867 = cljs.core.first(seq__3854__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3867, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3867, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__3880 = cljs.core.next(seq__3854__$1);
          var G__3881 = null;
          var G__3882 = 0;
          var G__3883 = 0;
          seq__3854 = G__3880;
          chunk__3855 = G__3881;
          count__3856 = G__3882;
          i__3857 = G__3883;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__3884 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__3885 = cljs.core.next(es);
          ret = G__3884;
          es = G__3885;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__3886 = null;
  var G__3886__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__3886__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__3886 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3886__2.call(this, self__, k);
      case 3:
        return G__3886__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3886.cljs$core$IFn$_invoke$arity$2 = G__3886__2;
  G__3886.cljs$core$IFn$_invoke$arity$3 = G__3886__3;
  return G__3886;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args3853) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3853)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3887 = i + 2;
      var G__3888 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__3887;
      ret = G__3888;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__3889 = i + 1;
      var G__3890 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__3889;
      out = G__3890;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_3891 = 0;
  while (true) {
    if (i_3891 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_3891], arr[i_3891 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_3891 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_3891])].join(""));
      } else {
        var G__3892 = i_3891 + 2;
        i_3891 = G__3892;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
var G__3893_3896 = cljs.core.PersistentHashMap.prototype;
var G__3894_3897 = cljs.core.ITER_SYMBOL;
var G__3895_3898 = function(G__3893_3896, G__3894_3897) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3893_3896, G__3894_3897);
goog.object.set(G__3893_3896, G__3894_3897, G__3895_3898);
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5718__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5718__auto__)) {
            var e = temp__5718__auto__;
            var G__3900 = cljs.core.next(es);
            var G__3901 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__3900;
            tcoll__$1 = G__3901;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__3902 = null;
  var G__3902__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__3902__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__3902 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3902__2.call(this, self__, key);
      case 3:
        return G__3902__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3902.cljs$core$IFn$_invoke$arity$2 = G__3902__2;
  G__3902.cljs$core$IFn$_invoke$arity$3 = G__3902__3;
  return G__3902;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args3899) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3899)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__3903 = ascending_QMARK_ ? t.left : t.right;
      var G__3904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__3903;
      stack__$1 = G__3904;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__3905 = null;
  var G__3905__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3905__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3905 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3905__1.call(this, x);
      case 2:
        return G__3905__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3905.cljs$core$IFn$_invoke$arity$1 = G__3905__1;
  G__3905.cljs$core$IFn$_invoke$arity$2 = G__3905__2;
  return G__3905;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__3906 = null;
  var G__3906__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3906__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3906 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3906__1.call(this, x);
      case 2:
        return G__3906__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3906.cljs$core$IFn$_invoke$arity$1 = G__3906__1;
  G__3906.cljs$core$IFn$_invoke$arity$2 = G__3906__2;
  return G__3906;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
var G__3907_3910 = cljs.core.PersistentTreeMapSeq.prototype;
var G__3908_3911 = cljs.core.ITER_SYMBOL;
var G__3909_3912 = function(G__3907_3910, G__3908_3911) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3907_3910, G__3908_3911);
goog.object.set(G__3907_3910, G__3908_3911, G__3909_3912);
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__3913 = node.left;
    var G__3914 = f;
    var G__3915 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3913, G__3914, G__3915) : cljs.core.tree_map_kv_reduce.call(null, G__3913, G__3914, G__3915);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__3916 = init__$1;
      var G__3917 = node.key;
      var G__3918 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3916, G__3917, G__3918) : f.call(null, G__3916, G__3917, G__3918);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__3919 = node.right;
        var G__3920 = f;
        var G__3921 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__3919, G__3920, G__3921) : cljs.core.tree_map_kv_reduce.call(null, G__3919, G__3920, G__3921);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3923 = k;
  switch(G__3923) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__3925 = null;
  var G__3925__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3925__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3925 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3925__1.call(this, x);
      case 2:
        return G__3925__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3925.cljs$core$IFn$_invoke$arity$1 = G__3925__1;
  G__3925.cljs$core$IFn$_invoke$arity$2 = G__3925__2;
  return G__3925;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__3926 = null;
  var G__3926__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3926__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3926 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3926__1.call(this, x);
      case 2:
        return G__3926__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3926.cljs$core$IFn$_invoke$arity$1 = G__3926__1;
  G__3926.cljs$core$IFn$_invoke$arity$2 = G__3926__2;
  return G__3926;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__3927 = null;
  var G__3927__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3927__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3927 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3927__2.call(this, self__, k);
      case 3:
        return G__3927__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3927.cljs$core$IFn$_invoke$arity$2 = G__3927__2;
  G__3927.cljs$core$IFn$_invoke$arity$3 = G__3927__3;
  return G__3927;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args3922) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3922)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
var G__3928_3931 = cljs.core.BlackNode.prototype;
var G__3929_3932 = cljs.core.ITER_SYMBOL;
var G__3930_3933 = function(G__3928_3931, G__3929_3932) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3928_3931, G__3929_3932);
goog.object.set(G__3928_3931, G__3929_3932, G__3930_3933);
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__3935 = k;
  switch(G__3935) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__3937 = null;
  var G__3937__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__3937__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3937 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3937__1.call(this, x);
      case 2:
        return G__3937__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3937.cljs$core$IFn$_invoke$arity$1 = G__3937__1;
  G__3937.cljs$core$IFn$_invoke$arity$2 = G__3937__2;
  return G__3937;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__3938 = null;
  var G__3938__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__3938__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__3938 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__3938__1.call(this, x);
      case 2:
        return G__3938__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__3938.cljs$core$IFn$_invoke$arity$1 = G__3938__1;
  G__3938.cljs$core$IFn$_invoke$arity$2 = G__3938__2;
  return G__3938;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__3939 = null;
  var G__3939__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__3939__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__3939 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__3939__2.call(this, self__, k);
      case 3:
        return G__3939__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__3939.cljs$core$IFn$_invoke$arity$2 = G__3939__2;
  G__3939.cljs$core$IFn$_invoke$arity$3 = G__3939__3;
  return G__3939;
}();
cljs.core.RedNode.prototype.apply = function(self__, args3934) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3934)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
var G__3940_3943 = cljs.core.RedNode.prototype;
var G__3941_3944 = cljs.core.ITER_SYMBOL;
var G__3942_3945 = function(G__3940_3943, G__3941_3944) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__3940_3943, G__3941_3944);
goog.object.set(G__3940_3943, G__3941_3944, G__3942_3945);
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__3946 = k;
      var G__3947 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3946, G__3947) : comp.call(null, G__3946, G__3947);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__3948 = comp;
          var G__3949 = tree.left;
          var G__3950 = k;
          var G__3951 = v;
          var G__3952 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3948, G__3949, G__3950, G__3951, G__3952) : cljs.core.tree_map_add.call(null, G__3948, G__3949, G__3950, G__3951, G__3952);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__3953 = comp;
          var G__3954 = tree.right;
          var G__3955 = k;
          var G__3956 = v;
          var G__3957 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__3953, G__3954, G__3955, G__3956, G__3957) : cljs.core.tree_map_add.call(null, G__3953, G__3954, G__3955, G__3956, G__3957);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__3958 = left.right;
            var G__3959 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3958, G__3959) : cljs.core.tree_map_append.call(null, G__3958, G__3959);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__3960 = left.right;
            var G__3961 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3960, G__3961) : cljs.core.tree_map_append.call(null, G__3960, G__3961);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__3962 = left;
            var G__3963 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3962, G__3963) : cljs.core.tree_map_append.call(null, G__3962, G__3963);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__3964 = left.right;
            var G__3965 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__3964, G__3965) : cljs.core.tree_map_append.call(null, G__3964, G__3965);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__3966 = k;
      var G__3967 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__3966, G__3967) : comp.call(null, G__3966, G__3967);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__3968 = comp;
          var G__3969 = tree.left;
          var G__3970 = k;
          var G__3971 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3968, G__3969, G__3970, G__3971) : cljs.core.tree_map_remove.call(null, G__3968, G__3969, G__3970, G__3971);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__3972 = comp;
          var G__3973 = tree.right;
          var G__3974 = k;
          var G__3975 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__3972, G__3973, G__3974, G__3975) : cljs.core.tree_map_remove.call(null, G__3972, G__3973, G__3974, G__3975);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__3976 = comp;
        var G__3977 = tree.left;
        var G__3978 = k;
        var G__3979 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3976, G__3977, G__3978, G__3979) : cljs.core.tree_map_replace.call(null, G__3976, G__3977, G__3978, G__3979);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__3980 = comp;
        var G__3981 = tree.right;
        var G__3982 = k;
        var G__3983 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__3980, G__3981, G__3982, G__3983) : cljs.core.tree_map_replace.call(null, G__3980, G__3981, G__3982, G__3983);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__3985 = cljs.core.seq(coll);
  var chunk__3986 = null;
  var count__3987 = 0;
  var i__3988 = 0;
  while (true) {
    if (i__3988 < count__3987) {
      var vec__3995 = chunk__3986.cljs$core$IIndexed$_nth$arity$2(null, i__3988);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3995, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3995, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4007 = seq__3985;
      var G__4008 = chunk__3986;
      var G__4009 = count__3987;
      var G__4010 = i__3988 + 1;
      seq__3985 = G__4007;
      chunk__3986 = G__4008;
      count__3987 = G__4009;
      i__3988 = G__4010;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__3985);
      if (temp__5720__auto__) {
        var seq__3985__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__3985__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__3985__$1);
          var G__4011 = cljs.core.chunk_rest(seq__3985__$1);
          var G__4012 = c__4550__auto__;
          var G__4013 = cljs.core.count(c__4550__auto__);
          var G__4014 = 0;
          seq__3985 = G__4011;
          chunk__3986 = G__4012;
          count__3987 = G__4013;
          i__3988 = G__4014;
          continue;
        } else {
          var vec__3998 = cljs.core.first(seq__3985__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3998, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3998, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4015 = cljs.core.next(seq__3985__$1);
          var G__4016 = null;
          var G__4017 = 0;
          var G__4018 = 0;
          seq__3985 = G__4015;
          chunk__3986 = G__4016;
          count__3987 = G__4017;
          i__3988 = G__4018;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__4001 = k;
        var G__4002 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4001, G__4002) : self__.comp.call(null, G__4001, G__4002);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__4019 = t.left;
          t = G__4019;
          continue;
        } else {
          var G__4020 = t.right;
          t = G__4020;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__4021 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__4022 = cljs.core.next(es);
          ret = G__4021;
          es = G__4022;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__4023 = null;
  var G__4023__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4023__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4023 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4023__2.call(this, self__, k);
      case 3:
        return G__4023__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4023.cljs$core$IFn$_invoke$arity$2 = G__4023__2;
  G__4023.cljs$core$IFn$_invoke$arity$3 = G__4023__3;
  return G__4023;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args3984) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args3984)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__4005 = k;
          var G__4006 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4005, G__4006) : self__.comp.call(null, G__4005, G__4006);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__4024 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__4025 = t.left;
              stack = G__4024;
              t = G__4025;
              continue;
            } else {
              var G__4026 = stack;
              var G__4027 = t.right;
              stack = G__4026;
              t = G__4027;
              continue;
            }
          } else {
            if (c > 0) {
              var G__4028 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__4029 = t.right;
              stack = G__4028;
              t = G__4029;
              continue;
            } else {
              var G__4030 = stack;
              var G__4031 = t.left;
              stack = G__4030;
              t = G__4031;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
var G__4032_4035 = cljs.core.PersistentTreeMap.prototype;
var G__4033_4036 = cljs.core.ITER_SYMBOL;
var G__4034_4037 = function(G__4032_4035, G__4033_4036) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4032_4035, G__4033_4036);
goog.object.set(G__4032_4035, G__4033_4036, G__4034_4037);
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4039 = arguments.length;
  var i__4731__auto___4040 = 0;
  while (true) {
    if (i__4731__auto___4040 < len__4730__auto___4039) {
      args__4736__auto__.push(arguments[i__4731__auto___4040]);
      var G__4041 = i__4731__auto___4040 + 1;
      i__4731__auto___4040 = G__4041;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__4042 = cljs.core.nnext(in$);
      var G__4043 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4042;
      out = G__4043;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq4038) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4038));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4045 = arguments.length;
  var i__4731__auto___4046 = 0;
  while (true) {
    if (i__4731__auto___4046 < len__4730__auto___4045) {
      args__4736__auto__.push(arguments[i__4731__auto___4046]);
      var G__4047 = i__4731__auto___4046 + 1;
      i__4731__auto___4046 = G__4047;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq4044) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4044));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4054 = arguments.length;
  var i__4731__auto___4055 = 0;
  while (true) {
    if (i__4731__auto___4055 < len__4730__auto___4054) {
      args__4736__auto__.push(arguments[i__4731__auto___4055]);
      var G__4056 = i__4731__auto___4055 + 1;
      i__4731__auto___4055 = G__4056;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      var G__4051_4057 = obj;
      var G__4052_4058 = cljs.core.first(kvs);
      var G__4053_4059 = cljs.core.second(kvs);
      goog.object.set(G__4051_4057, G__4052_4058, G__4053_4059);
      var G__4060 = cljs.core.nnext(kvs);
      kvs = G__4060;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq4048) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4048));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4062 = arguments.length;
  var i__4731__auto___4063 = 0;
  while (true) {
    if (i__4731__auto___4063 < len__4730__auto___4062) {
      args__4736__auto__.push(arguments[i__4731__auto___4063]);
      var G__4064 = i__4731__auto___4063 + 1;
      i__4731__auto___4063 = G__4064;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__4065 = cljs.core.nnext(in$);
      var G__4066 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4065;
      out = G__4066;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq4061) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4061));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4069 = arguments.length;
  var i__4731__auto___4070 = 0;
  while (true) {
    if (i__4731__auto___4070 < len__4730__auto___4069) {
      args__4736__auto__.push(arguments[i__4731__auto___4070]);
      var G__4071 = i__4731__auto___4070 + 1;
      i__4731__auto___4070 = G__4071;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__4072 = cljs.core.nnext(in$);
      var G__4073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__4072;
      out = G__4073;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq4067) {
  var G__4068 = cljs.core.first(seq4067);
  var seq4067__$1 = cljs.core.next(seq4067);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4068, seq4067__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__4076 = null;
  var G__4076__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4076__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4076 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4076__1.call(this, x);
      case 2:
        return G__4076__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4076.cljs$core$IFn$_invoke$arity$1 = G__4076__1;
  G__4076.cljs$core$IFn$_invoke$arity$2 = G__4076__2;
  return G__4076;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__4077 = null;
  var G__4077__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4077__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4077 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4077__1.call(this, x);
      case 2:
        return G__4077__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4077.cljs$core$IFn$_invoke$arity$1 = G__4077__1;
  G__4077.cljs$core$IFn$_invoke$arity$2 = G__4077__2;
  return G__4077;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
var G__4078_4081 = cljs.core.KeySeq.prototype;
var G__4079_4082 = cljs.core.ITER_SYMBOL;
var G__4080_4083 = function(G__4078_4081, G__4079_4082) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4078_4081, G__4079_4082);
goog.object.set(G__4078_4081, G__4079_4082, G__4080_4083);
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__4086 = null;
  var G__4086__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4086__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4086 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4086__1.call(this, x);
      case 2:
        return G__4086__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4086.cljs$core$IFn$_invoke$arity$1 = G__4086__1;
  G__4086.cljs$core$IFn$_invoke$arity$2 = G__4086__2;
  return G__4086;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__4087 = null;
  var G__4087__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4087__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__4087 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4087__1.call(this, x);
      case 2:
        return G__4087__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4087.cljs$core$IFn$_invoke$arity$1 = G__4087__1;
  G__4087.cljs$core$IFn$_invoke$arity$2 = G__4087__2;
  return G__4087;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
var G__4088_4091 = cljs.core.ValSeq.prototype;
var G__4089_4092 = cljs.core.ITER_SYMBOL;
var G__4090_4093 = function(G__4088_4091, G__4089_4092) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4088_4091, G__4089_4092);
goog.object.set(G__4088_4091, G__4089_4092, G__4090_4093);
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5720__auto__ = cljs.core.seq(map);
  if (temp__5720__auto__) {
    var mseq = temp__5720__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4097 = arguments.length;
  var i__4731__auto___4098 = 0;
  while (true) {
    if (i__4731__auto___4098 < len__4730__auto___4097) {
      args__4736__auto__.push(arguments[i__4731__auto___4098]);
      var G__4099 = i__4731__auto___4098 + 1;
      i__4731__auto___4098 = G__4099;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__4094_SHARP_, p2__4095_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4131__auto__ = p1__4094_SHARP_;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__4095_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq4096) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4096));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4104 = arguments.length;
  var i__4731__auto___4105 = 0;
  while (true) {
    if (i__4731__auto___4105 < len__4730__auto___4104) {
      args__4736__auto__.push(arguments[i__4731__auto___4105]);
      var G__4106 = i__4731__auto___4105 + 1;
      i__4731__auto___4105 = G__4106;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__4102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__4103 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4102, G__4103) : f.call(null, G__4102, G__4103);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4131__auto__ = m1;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq4100) {
  var G__4101 = cljs.core.first(seq4100);
  var seq4100__$1 = cljs.core.next(seq4100);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4101, seq4100__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__4107 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__4108 = cljs.core.next(keys);
      ret = G__4107;
      keys = G__4108;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4112 = cljs.core.seq(coll);
  var chunk__4113 = null;
  var count__4114 = 0;
  var i__4115 = 0;
  while (true) {
    if (i__4115 < count__4114) {
      var vec__4122 = chunk__4113.cljs$core$IIndexed$_nth$arity$2(null, i__4115);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4122, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4122, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4131 = seq__4112;
      var G__4132 = chunk__4113;
      var G__4133 = count__4114;
      var G__4134 = i__4115 + 1;
      seq__4112 = G__4131;
      chunk__4113 = G__4132;
      count__4114 = G__4133;
      i__4115 = G__4134;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4112);
      if (temp__5720__auto__) {
        var seq__4112__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4112__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4112__$1);
          var G__4135 = cljs.core.chunk_rest(seq__4112__$1);
          var G__4136 = c__4550__auto__;
          var G__4137 = cljs.core.count(c__4550__auto__);
          var G__4138 = 0;
          seq__4112 = G__4135;
          chunk__4113 = G__4136;
          count__4114 = G__4137;
          i__4115 = G__4138;
          continue;
        } else {
          var vec__4125 = cljs.core.first(seq__4112__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4125, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4125, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4139 = cljs.core.next(seq__4112__$1);
          var G__4140 = null;
          var G__4141 = 0;
          var G__4142 = 0;
          seq__4112 = G__4139;
          chunk__4113 = G__4140;
          count__4114 = G__4141;
          i__4115 = G__4142;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5718__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var entry = temp__5718__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4120__auto__ = cljs.core.set_QMARK_(other);
  if (and__4120__auto__) {
    var and__4120__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4120__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4120__auto____$1, and__4120__auto__, coll__$1) {
          return function(p1__4110_SHARP_, p2__4109_SHARP_) {
            var or__4131__auto__ = cljs.core.contains_QMARK_(other, p2__4109_SHARP_);
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4120__auto____$1, and__4120__auto__, coll__$1), true, self__.hash_map);
      } catch (e4130) {
        if (e4130 instanceof Error) {
          var ex = e4130;
          return false;
        } else {
          throw e4130;
        }
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__4143 = null;
  var G__4143__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4143__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4143 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4143__2.call(this, self__, k);
      case 3:
        return G__4143__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4143.cljs$core$IFn$_invoke$arity$2 = G__4143__2;
  G__4143.cljs$core$IFn$_invoke$arity$3 = G__4143__3;
  return G__4143;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args4111) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4111)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__4144 = i + 1;
        var G__4145 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__4144;
        out = G__4145;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__4146 = i + 1;
        var G__4147 = cljs.core._conj_BANG_(out, items[i]);
        i = G__4146;
        out = G__4147;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4607__auto___4148 = len;
  var i_4149 = 0;
  while (true) {
    if (i_4149 < n__4607__auto___4148) {
      cljs.core._conj_BANG_(t, items[i_4149]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_4149 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_4149])].join(""));
      }
      var G__4150 = i_4149 + 1;
      i_4149 = G__4150;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4607__auto___4151 = len;
  var i_4152 = 0;
  while (true) {
    if (i_4152 < n__4607__auto___4151) {
      cljs.core._conj_BANG_(t, items[i_4152]);
      var G__4153 = i_4152 + 1;
      i_4152 = G__4153;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
var G__4154_4157 = cljs.core.PersistentHashSet.prototype;
var G__4155_4158 = cljs.core.ITER_SYMBOL;
var G__4156_4159 = function(G__4154_4157, G__4155_4158) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4154_4157, G__4155_4158);
goog.object.set(G__4154_4157, G__4155_4158, G__4156_4159);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__4161 = null;
  var G__4161__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__4161__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__4161 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4161__2.call(this, self__, k);
      case 3:
        return G__4161__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4161.cljs$core$IFn$_invoke$arity$2 = G__4161__2;
  G__4161.cljs$core$IFn$_invoke$arity$3 = G__4161__3;
  return G__4161;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args4160) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4160)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__4165 = cljs.core.seq(coll);
  var chunk__4166 = null;
  var count__4167 = 0;
  var i__4168 = 0;
  while (true) {
    if (i__4168 < count__4167) {
      var vec__4175 = chunk__4166.cljs$core$IIndexed$_nth$arity$2(null, i__4168);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4175, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4175, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__4184 = seq__4165;
      var G__4185 = chunk__4166;
      var G__4186 = count__4167;
      var G__4187 = i__4168 + 1;
      seq__4165 = G__4184;
      chunk__4166 = G__4185;
      count__4167 = G__4186;
      i__4168 = G__4187;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4165);
      if (temp__5720__auto__) {
        var seq__4165__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4165__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4165__$1);
          var G__4188 = cljs.core.chunk_rest(seq__4165__$1);
          var G__4189 = c__4550__auto__;
          var G__4190 = cljs.core.count(c__4550__auto__);
          var G__4191 = 0;
          seq__4165 = G__4188;
          chunk__4166 = G__4189;
          count__4167 = G__4190;
          i__4168 = G__4191;
          continue;
        } else {
          var vec__4178 = cljs.core.first(seq__4165__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4178, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4178, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__4192 = cljs.core.next(seq__4165__$1);
          var G__4193 = null;
          var G__4194 = 0;
          var G__4195 = 0;
          seq__4165 = G__4192;
          chunk__4166 = G__4193;
          count__4167 = G__4194;
          i__4168 = G__4195;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var and__4120__auto__ = cljs.core.set_QMARK_(other);
  if (and__4120__auto__) {
    var and__4120__auto____$1 = cljs.core.count(coll__$1) === cljs.core.count(other);
    if (and__4120__auto____$1) {
      try {
        return cljs.core.reduce_kv(function(and__4120__auto____$1, and__4120__auto__, coll__$1) {
          return function(p1__4163_SHARP_, p2__4162_SHARP_) {
            var or__4131__auto__ = cljs.core.contains_QMARK_(other, p2__4162_SHARP_);
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              return cljs.core.reduced(false);
            }
          };
        }(and__4120__auto____$1, and__4120__auto__, coll__$1), true, self__.tree_map);
      } catch (e4183) {
        if (e4183 instanceof Error) {
          var ex = e4183;
          return false;
        } else {
          throw e4183;
        }
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__4196 = null;
  var G__4196__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__4196__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__4196 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__4196__2.call(this, self__, k);
      case 3:
        return G__4196__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4196.cljs$core$IFn$_invoke$arity$2 = G__4196__2;
  G__4196.cljs$core$IFn$_invoke$arity$3 = G__4196__3;
  return G__4196;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args4164) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4164)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
var G__4197_4200 = cljs.core.PersistentTreeSet.prototype;
var G__4198_4201 = cljs.core.ITER_SYMBOL;
var G__4199_4202 = function(G__4197_4200, G__4198_4201) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4197_4200, G__4198_4201);
goog.object.set(G__4197_4200, G__4198_4201, G__4199_4202);
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4604__auto__ = arr;
    var l__4605__auto__ = a__4604__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4605__auto__) {
        var G__4203 = i + 1;
        var G__4204 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__4203;
        res = G__4204;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__4205 = cljs.core.next(in$__$1);
            var G__4206 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__4205;
            out = G__4206;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__4209 = arguments.length;
  switch(G__4209) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4211 = arguments.length;
      var i__4731__auto___4212 = 0;
      while (true) {
        if (i__4731__auto___4212 < len__4730__auto___4211) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4212]);
          var G__4213 = i__4731__auto___4212 + 1;
          i__4731__auto___4212 = G__4213;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4752__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq4208) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4208));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4215 = arguments.length;
  var i__4731__auto___4216 = 0;
  while (true) {
    if (i__4731__auto___4216 < len__4730__auto___4215) {
      args__4736__auto__.push(arguments[i__4731__auto___4216]);
      var G__4217 = i__4731__auto___4216 + 1;
      i__4731__auto___4216 = G__4217;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq4214) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4214));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4220 = arguments.length;
  var i__4731__auto___4221 = 0;
  while (true) {
    if (i__4731__auto___4221 < len__4730__auto___4220) {
      args__4736__auto__.push(arguments[i__4731__auto___4221]);
      var G__4222 = i__4731__auto___4221 + 1;
      i__4731__auto___4221 = G__4222;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq4218) {
  var G__4219 = cljs.core.first(seq4218);
  var seq4218__$1 = cljs.core.next(seq4218);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4219, seq4218__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__4226 = arguments.length;
  switch(G__4226) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__4223_SHARP_) {
    var temp__5718__auto__ = cljs.core.find(smap, p1__4223_SHARP_);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var e = temp__5718__auto__;
      return cljs.core.val(e);
    } else {
      return p1__4223_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__5718__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__5718__auto__)) {
          var e = temp__5718__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__4224_SHARP_) {
      var temp__5718__auto__ = cljs.core.find(smap, p1__4224_SHARP_);
      if (cljs.core.truth_(temp__5718__auto__)) {
        var e = temp__5718__auto__;
        return cljs.core.second(e);
      } else {
        return p1__4224_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__4229 = arguments.length;
  switch(G__4229) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__4240 = null;
        var G__4240__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4240__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4240__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
            return result;
          } else {
            seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4240 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4240__0.call(this);
            case 1:
              return G__4240__1.call(this, result);
            case 2:
              return G__4240__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4240.cljs$core$IFn$_invoke$arity$0 = G__4240__0;
        G__4240.cljs$core$IFn$_invoke$arity$1 = G__4240__1;
        G__4240.cljs$core$IFn$_invoke$arity$2 = G__4240__2;
        return G__4240;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__4234 = function(p__4235, seen__$1) {
        while (true) {
          var vec__4236 = p__4235;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4236, 0, null);
          var xs__$1 = vec__4236;
          var temp__5720__auto__ = cljs.core.seq(xs__$1);
          if (temp__5720__auto__) {
            var s = temp__5720__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__4241 = cljs.core.rest(s);
              var G__4242 = seen__$1;
              p__4235 = G__4241;
              seen__$1 = G__4242;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__4234(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__4243 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__4244 = cljs.core.next(s__$1);
      ret = G__4243;
      s__$1 = G__4244;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return cljs.core._name(x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__4246 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__4247 = cljs.core.next(ks);
      var G__4248 = cljs.core.next(vs);
      map = G__4246;
      ks = G__4247;
      vs = G__4248;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__4256 = arguments.length;
  switch(G__4256) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4258 = arguments.length;
      var i__4731__auto___4259 = 0;
      while (true) {
        if (i__4731__auto___4259 < len__4730__auto___4258) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4259]);
          var G__4260 = i__4731__auto___4259 + 1;
          i__4731__auto___4259 = G__4260;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4249_SHARP_, p2__4250_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__4249_SHARP_, p2__4250_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq4252) {
  var G__4253 = cljs.core.first(seq4252);
  var seq4252__$1 = cljs.core.next(seq4252);
  var G__4254 = cljs.core.first(seq4252__$1);
  var seq4252__$2 = cljs.core.next(seq4252__$1);
  var G__4255 = cljs.core.first(seq4252__$2);
  var seq4252__$3 = cljs.core.next(seq4252__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4253, G__4254, G__4255, seq4252__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__4268 = arguments.length;
  switch(G__4268) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4270 = arguments.length;
      var i__4731__auto___4271 = 0;
      while (true) {
        if (i__4731__auto___4271 < len__4730__auto___4270) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4271]);
          var G__4272 = i__4731__auto___4271 + 1;
          i__4731__auto___4271 = G__4272;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4261_SHARP_, p2__4262_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__4261_SHARP_, p2__4262_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq4264) {
  var G__4265 = cljs.core.first(seq4264);
  var seq4264__$1 = cljs.core.next(seq4264);
  var G__4266 = cljs.core.first(seq4264__$1);
  var seq4264__$2 = cljs.core.next(seq4264__$1);
  var G__4267 = cljs.core.first(seq4264__$2);
  var seq4264__$3 = cljs.core.next(seq4264__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4265, G__4266, G__4267, seq4264__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__4274 = arguments.length;
  switch(G__4274) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__4276 = null;
        var G__4276__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4276__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4276__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__4276 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4276__0.call(this);
            case 1:
              return G__4276__1.call(this, result);
            case 2:
              return G__4276__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4276.cljs$core$IFn$_invoke$arity$0 = G__4276__0;
        G__4276.cljs$core$IFn$_invoke$arity$1 = G__4276__1;
        G__4276.cljs$core$IFn$_invoke$arity$2 = G__4276__2;
        return G__4276;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__4278 = arguments.length;
  switch(G__4278) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__4281 = null;
      var G__4281__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4281__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4281__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__4281 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4281__0.call(this);
          case 1:
            return G__4281__1.call(this, result);
          case 2:
            return G__4281__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4281.cljs$core$IFn$_invoke$arity$0 = G__4281__0;
      G__4281.cljs$core$IFn$_invoke$arity$1 = G__4281__1;
      G__4281.cljs$core$IFn$_invoke$arity$2 = G__4281__2;
      return G__4281;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      if (cljs.core.truth_(function() {
        var G__4279 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4279) : pred.call(null, G__4279);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__4282 = function() {
      var G__4284 = cljs.core._entry_key(sc, e);
      var G__4285 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4284, G__4285) : comp.call(null, G__4284, G__4285);
    }();
    var G__4283 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__4282, G__4283) : test.call(null, G__4282, G__4283);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__4287 = arguments.length;
  switch(G__4287) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4288 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__4288.cljs$core$IFn$_invoke$arity$1 ? fexpr__4288.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4288.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4289 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4289, 0, null);
      var s = vec__4289;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4292 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4292, 0, null);
    var s = vec__4292;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__4295 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__4295.cljs$core$IFn$_invoke$arity$1 ? fexpr__4295.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4295.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__4298 = arguments.length;
  switch(G__4298) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__4299 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__4299.cljs$core$IFn$_invoke$arity$1 ? fexpr__4299.cljs$core$IFn$_invoke$arity$1(test) : fexpr__4299.call(null, test);
  }())) {
    var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var vec__4300 = temp__5720__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4300, 0, null);
      var s = vec__4300;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5720__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5720__auto__)) {
    var vec__4303 = temp__5720__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4303, 0, null);
    var s = vec__4303;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__4306 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__4306.cljs$core$IFn$_invoke$arity$1 ? fexpr__4306.cljs$core$IFn$_invoke$arity$1(e) : fexpr__4306.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__4309 = null;
  var G__4309__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__4309__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4309 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4309__1.call(this, x);
      case 2:
        return G__4309__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4309.cljs$core$IFn$_invoke$arity$1 = G__4309__1;
  G__4309.cljs$core$IFn$_invoke$arity$2 = G__4309__2;
  return G__4309;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__4310 = null;
  var G__4310__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__4310__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__4310 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__4310__1.call(this, x);
      case 2:
        return G__4310__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4310.cljs$core$IFn$_invoke$arity$1 = G__4310__1;
  G__4310.cljs$core$IFn$_invoke$arity$2 = G__4310__2;
  return G__4310;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__4308 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__4308);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__4311 = i + self__.step;
        var G__4312 = ret__$1;
        i = G__4311;
        ret = G__4312;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
var G__4313_4316 = cljs.core.Range.prototype;
var G__4314_4317 = cljs.core.ITER_SYMBOL;
var G__4315_4318 = function(G__4313_4316, G__4314_4317) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4313_4316, G__4314_4317);
goog.object.set(G__4313_4316, G__4314_4317, G__4315_4318);
cljs.core.range = function cljs$core$range(var_args) {
  var G__4320 = arguments.length;
  switch(G__4320) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__4323 = arguments.length;
  switch(G__4323) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__4325 = null;
        var G__4325__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4325__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4325__2 = function(result, input) {
          var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__4325 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4325__0.call(this);
            case 1:
              return G__4325__1.call(this, result);
            case 2:
              return G__4325__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4325.cljs$core$IFn$_invoke$arity$0 = G__4325__0;
        G__4325.cljs$core$IFn$_invoke$arity$1 = G__4325__1;
        G__4325.cljs$core$IFn$_invoke$arity$2 = G__4325__2;
        return G__4325;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__4328 = arguments.length;
  switch(G__4328) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__4330 = null;
        var G__4330__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4330__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__4330__2 = function(result, input) {
          var pval = cljs.core.deref(pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__4330 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4330__0.call(this);
            case 1:
              return G__4330__1.call(this, result);
            case 2:
              return G__4330__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4330.cljs$core$IFn$_invoke$arity$0 = G__4330__0;
        G__4330.cljs$core$IFn$_invoke$arity$1 = G__4330__1;
        G__4330.cljs$core$IFn$_invoke$arity$2 = G__4330__2;
        return G__4330;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__5720__auto__) {
        return function(p1__4326_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__4326_SHARP_) : f.call(null, p1__4326_SHARP_));
        };
      }(fst, fv, s, temp__5720__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function(fst, fv, run, s, temp__5720__auto__) {
        return function() {
          return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
        };
      }(fst, fv, run, s, temp__5720__auto__), null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__4332 = arguments.length;
  switch(G__4332) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5718__auto__ = cljs.core.seq(coll);
    if (temp__5718__auto__) {
      var s = temp__5718__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5720__auto__ = cljs.core.seq(coll);
      if (temp__5720__auto__) {
        var s = temp__5720__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__4333 = init;
          var G__4334 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4333, G__4334) : f.call(null, G__4333, G__4334);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__4351 = arguments.length;
  switch(G__4351) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4353 = arguments.length;
      var i__4731__auto___4354 = 0;
      while (true) {
        if (i__4731__auto___4354 < len__4730__auto___4353) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4354]);
          var G__4355 = i__4731__auto___4354 + 1;
          i__4731__auto___4354 = G__4355;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4752__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__4356 = null;
    var G__4356__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__4356__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__4356__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__4356__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__4356__4 = function() {
      var G__4357__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__4357 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4358__i = 0, G__4358__a = new Array(arguments.length - 3);
          while (G__4358__i < G__4358__a.length) {
            G__4358__a[G__4358__i] = arguments[G__4358__i + 3];
            ++G__4358__i;
          }
          args = new cljs.core.IndexedSeq(G__4358__a, 0, null);
        }
        return G__4357__delegate.call(this, x, y, z, args);
      };
      G__4357.cljs$lang$maxFixedArity = 3;
      G__4357.cljs$lang$applyTo = function(arglist__4359) {
        var x = cljs.core.first(arglist__4359);
        arglist__4359 = cljs.core.next(arglist__4359);
        var y = cljs.core.first(arglist__4359);
        arglist__4359 = cljs.core.next(arglist__4359);
        var z = cljs.core.first(arglist__4359);
        var args = cljs.core.rest(arglist__4359);
        return G__4357__delegate(x, y, z, args);
      };
      G__4357.cljs$core$IFn$_invoke$arity$variadic = G__4357__delegate;
      return G__4357;
    }();
    G__4356 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4356__0.call(this);
        case 1:
          return G__4356__1.call(this, x);
        case 2:
          return G__4356__2.call(this, x, y);
        case 3:
          return G__4356__3.call(this, x, y, z);
        default:
          var G__4360 = null;
          if (arguments.length > 3) {
            var G__4361__i = 0, G__4361__a = new Array(arguments.length - 3);
            while (G__4361__i < G__4361__a.length) {
              G__4361__a[G__4361__i] = arguments[G__4361__i + 3];
              ++G__4361__i;
            }
            G__4360 = new cljs.core.IndexedSeq(G__4361__a, 0, null);
          }
          return G__4356__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4360);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4356.cljs$lang$maxFixedArity = 3;
    G__4356.cljs$lang$applyTo = G__4356__4.cljs$lang$applyTo;
    G__4356.cljs$core$IFn$_invoke$arity$0 = G__4356__0;
    G__4356.cljs$core$IFn$_invoke$arity$1 = G__4356__1;
    G__4356.cljs$core$IFn$_invoke$arity$2 = G__4356__2;
    G__4356.cljs$core$IFn$_invoke$arity$3 = G__4356__3;
    G__4356.cljs$core$IFn$_invoke$arity$variadic = G__4356__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4356;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__4362 = null;
    var G__4362__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__4362__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__4362__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__4362__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__4362__4 = function() {
      var G__4363__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__4363 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4364__i = 0, G__4364__a = new Array(arguments.length - 3);
          while (G__4364__i < G__4364__a.length) {
            G__4364__a[G__4364__i] = arguments[G__4364__i + 3];
            ++G__4364__i;
          }
          args = new cljs.core.IndexedSeq(G__4364__a, 0, null);
        }
        return G__4363__delegate.call(this, x, y, z, args);
      };
      G__4363.cljs$lang$maxFixedArity = 3;
      G__4363.cljs$lang$applyTo = function(arglist__4365) {
        var x = cljs.core.first(arglist__4365);
        arglist__4365 = cljs.core.next(arglist__4365);
        var y = cljs.core.first(arglist__4365);
        arglist__4365 = cljs.core.next(arglist__4365);
        var z = cljs.core.first(arglist__4365);
        var args = cljs.core.rest(arglist__4365);
        return G__4363__delegate(x, y, z, args);
      };
      G__4363.cljs$core$IFn$_invoke$arity$variadic = G__4363__delegate;
      return G__4363;
    }();
    G__4362 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4362__0.call(this);
        case 1:
          return G__4362__1.call(this, x);
        case 2:
          return G__4362__2.call(this, x, y);
        case 3:
          return G__4362__3.call(this, x, y, z);
        default:
          var G__4366 = null;
          if (arguments.length > 3) {
            var G__4367__i = 0, G__4367__a = new Array(arguments.length - 3);
            while (G__4367__i < G__4367__a.length) {
              G__4367__a[G__4367__i] = arguments[G__4367__i + 3];
              ++G__4367__i;
            }
            G__4366 = new cljs.core.IndexedSeq(G__4367__a, 0, null);
          }
          return G__4362__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4366);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4362.cljs$lang$maxFixedArity = 3;
    G__4362.cljs$lang$applyTo = G__4362__4.cljs$lang$applyTo;
    G__4362.cljs$core$IFn$_invoke$arity$0 = G__4362__0;
    G__4362.cljs$core$IFn$_invoke$arity$1 = G__4362__1;
    G__4362.cljs$core$IFn$_invoke$arity$2 = G__4362__2;
    G__4362.cljs$core$IFn$_invoke$arity$3 = G__4362__3;
    G__4362.cljs$core$IFn$_invoke$arity$variadic = G__4362__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4362;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__4368 = null;
    var G__4368__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__4368__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__4368__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__4368__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__4368__4 = function() {
      var G__4369__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__4369 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__4370__i = 0, G__4370__a = new Array(arguments.length - 3);
          while (G__4370__i < G__4370__a.length) {
            G__4370__a[G__4370__i] = arguments[G__4370__i + 3];
            ++G__4370__i;
          }
          args = new cljs.core.IndexedSeq(G__4370__a, 0, null);
        }
        return G__4369__delegate.call(this, x, y, z, args);
      };
      G__4369.cljs$lang$maxFixedArity = 3;
      G__4369.cljs$lang$applyTo = function(arglist__4371) {
        var x = cljs.core.first(arglist__4371);
        arglist__4371 = cljs.core.next(arglist__4371);
        var y = cljs.core.first(arglist__4371);
        arglist__4371 = cljs.core.next(arglist__4371);
        var z = cljs.core.first(arglist__4371);
        var args = cljs.core.rest(arglist__4371);
        return G__4369__delegate(x, y, z, args);
      };
      G__4369.cljs$core$IFn$_invoke$arity$variadic = G__4369__delegate;
      return G__4369;
    }();
    G__4368 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__4368__0.call(this);
        case 1:
          return G__4368__1.call(this, x);
        case 2:
          return G__4368__2.call(this, x, y);
        case 3:
          return G__4368__3.call(this, x, y, z);
        default:
          var G__4372 = null;
          if (arguments.length > 3) {
            var G__4373__i = 0, G__4373__a = new Array(arguments.length - 3);
            while (G__4373__i < G__4373__a.length) {
              G__4373__a[G__4373__i] = arguments[G__4373__i + 3];
              ++G__4373__i;
            }
            G__4372 = new cljs.core.IndexedSeq(G__4373__a, 0, null);
          }
          return G__4368__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4372);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__4368.cljs$lang$maxFixedArity = 3;
    G__4368.cljs$lang$applyTo = G__4368__4.cljs$lang$applyTo;
    G__4368.cljs$core$IFn$_invoke$arity$0 = G__4368__0;
    G__4368.cljs$core$IFn$_invoke$arity$1 = G__4368__1;
    G__4368.cljs$core$IFn$_invoke$arity$2 = G__4368__2;
    G__4368.cljs$core$IFn$_invoke$arity$3 = G__4368__3;
    G__4368.cljs$core$IFn$_invoke$arity$variadic = G__4368__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__4368;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__4374 = null;
      var G__4374__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4336_SHARP_, p2__4337_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4336_SHARP_, p2__4337_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4337_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4337_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4338_SHARP_, p2__4339_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4338_SHARP_, p2__4339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4339_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__4339_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4340_SHARP_, p2__4341_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4340_SHARP_, p2__4341_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4341_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__4341_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__4342_SHARP_, p2__4343_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4342_SHARP_, p2__4343_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4343_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__4343_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__4374__4 = function() {
        var G__4375__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__4344_SHARP_, p2__4345_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4344_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4345_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__4375 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__4376__i = 0, G__4376__a = new Array(arguments.length - 3);
            while (G__4376__i < G__4376__a.length) {
              G__4376__a[G__4376__i] = arguments[G__4376__i + 3];
              ++G__4376__i;
            }
            args = new cljs.core.IndexedSeq(G__4376__a, 0, null);
          }
          return G__4375__delegate.call(this, x, y, z, args);
        };
        G__4375.cljs$lang$maxFixedArity = 3;
        G__4375.cljs$lang$applyTo = function(arglist__4377) {
          var x = cljs.core.first(arglist__4377);
          arglist__4377 = cljs.core.next(arglist__4377);
          var y = cljs.core.first(arglist__4377);
          arglist__4377 = cljs.core.next(arglist__4377);
          var z = cljs.core.first(arglist__4377);
          var args = cljs.core.rest(arglist__4377);
          return G__4375__delegate(x, y, z, args);
        };
        G__4375.cljs$core$IFn$_invoke$arity$variadic = G__4375__delegate;
        return G__4375;
      }();
      G__4374 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__4374__0.call(this);
          case 1:
            return G__4374__1.call(this, x);
          case 2:
            return G__4374__2.call(this, x, y);
          case 3:
            return G__4374__3.call(this, x, y, z);
          default:
            var G__4378 = null;
            if (arguments.length > 3) {
              var G__4379__i = 0, G__4379__a = new Array(arguments.length - 3);
              while (G__4379__i < G__4379__a.length) {
                G__4379__a[G__4379__i] = arguments[G__4379__i + 3];
                ++G__4379__i;
              }
              G__4378 = new cljs.core.IndexedSeq(G__4379__a, 0, null);
            }
            return G__4374__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__4378);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4374.cljs$lang$maxFixedArity = 3;
      G__4374.cljs$lang$applyTo = G__4374__4.cljs$lang$applyTo;
      G__4374.cljs$core$IFn$_invoke$arity$0 = G__4374__0;
      G__4374.cljs$core$IFn$_invoke$arity$1 = G__4374__1;
      G__4374.cljs$core$IFn$_invoke$arity$2 = G__4374__2;
      G__4374.cljs$core$IFn$_invoke$arity$3 = G__4374__3;
      G__4374.cljs$core$IFn$_invoke$arity$variadic = G__4374__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__4374;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq4347) {
  var G__4348 = cljs.core.first(seq4347);
  var seq4347__$1 = cljs.core.next(seq4347);
  var G__4349 = cljs.core.first(seq4347__$1);
  var seq4347__$2 = cljs.core.next(seq4347__$1);
  var G__4350 = cljs.core.first(seq4347__$2);
  var seq4347__$3 = cljs.core.next(seq4347__$2);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4348, G__4349, G__4350, seq4347__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__4381 = arguments.length;
  switch(G__4381) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(coll);
    if (temp__5720__auto__) {
      var s = temp__5720__auto__;
      var G__4383 = cljs.core.next(s);
      coll = G__4383;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__4384 = n - 1;
      var G__4385 = cljs.core.next(coll);
      n = G__4384;
      coll = G__4385;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__4387 = arguments.length;
  switch(G__4387) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5724__auto__ = re.exec(s);
  if (temp__5724__auto__ == null) {
    return null;
  } else {
    var matches = temp__5724__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function(match_str, match_vals, matches, temp__5724__auto__) {
      return function() {
        var post_idx = matches.index + function() {
          var x__4219__auto__ = 1;
          var y__4220__auto__ = match_str.length;
          return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
        }();
        if (post_idx <= s.length) {
          var G__4389 = re;
          var G__4390 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
          return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__4389, G__4390) : cljs.core.re_seq_STAR_.call(null, G__4389, G__4390);
        } else {
          return null;
        }
      };
    }(match_str, match_vals, matches, temp__5724__auto__), null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__4391 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4391, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4391, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4131__auto__ = flags;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__4394 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__4395 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__4395;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__4396_4402 = cljs.core.first(coll);
          var G__4397_4403 = writer;
          var G__4398_4404 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4396_4402, G__4397_4403, G__4398_4404) : print_one.call(null, G__4396_4402, G__4397_4403, G__4398_4404);
        } else {
        }
        var coll_4405__$1 = cljs.core.next(coll);
        var n_4406 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_4405__$1 && (n_4406 == null || !(n_4406 === 0))) {
            cljs.core._write(writer, sep);
            var G__4399_4407 = cljs.core.first(coll_4405__$1);
            var G__4400_4408 = writer;
            var G__4401_4409 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4399_4407, G__4400_4408, G__4401_4409) : print_one.call(null, G__4399_4407, G__4400_4408, G__4401_4409);
            var G__4410 = cljs.core.next(coll_4405__$1);
            var G__4411 = n_4406 - 1;
            coll_4405__$1 = G__4410;
            n_4406 = G__4411;
            continue;
          } else {
            if (cljs.core.seq(coll_4405__$1) && n_4406 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__4394;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4418 = arguments.length;
  var i__4731__auto___4419 = 0;
  while (true) {
    if (i__4731__auto___4419 < len__4730__auto___4418) {
      args__4736__auto__.push(arguments[i__4731__auto___4419]);
      var G__4420 = i__4731__auto___4419 + 1;
      i__4731__auto___4419 = G__4420;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__4414 = cljs.core.seq(ss);
  var chunk__4415 = null;
  var count__4416 = 0;
  var i__4417 = 0;
  while (true) {
    if (i__4417 < count__4416) {
      var s = chunk__4415.cljs$core$IIndexed$_nth$arity$2(null, i__4417);
      cljs.core._write(writer, s);
      var G__4421 = seq__4414;
      var G__4422 = chunk__4415;
      var G__4423 = count__4416;
      var G__4424 = i__4417 + 1;
      seq__4414 = G__4421;
      chunk__4415 = G__4422;
      count__4416 = G__4423;
      i__4417 = G__4424;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4414);
      if (temp__5720__auto__) {
        var seq__4414__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4414__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4414__$1);
          var G__4425 = cljs.core.chunk_rest(seq__4414__$1);
          var G__4426 = c__4550__auto__;
          var G__4427 = cljs.core.count(c__4550__auto__);
          var G__4428 = 0;
          seq__4414 = G__4425;
          chunk__4415 = G__4426;
          count__4416 = G__4427;
          i__4417 = G__4428;
          continue;
        } else {
          var s = cljs.core.first(seq__4414__$1);
          cljs.core._write(writer, s);
          var G__4429 = cljs.core.next(seq__4414__$1);
          var G__4430 = null;
          var G__4431 = 0;
          var G__4432 = 0;
          seq__4414 = G__4429;
          chunk__4415 = G__4430;
          count__4416 = G__4431;
          i__4417 = G__4432;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq4412) {
  var G__4413 = cljs.core.first(seq4412);
  var seq4412__$1 = cljs.core.next(seq4412);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4413, seq4412__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj4434 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj4434;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4120__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4120__auto__) {
    var and__4120__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4120__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__4439 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__4439);
                  } else {
                    return G__4439;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = cljs.core.truth_(function() {
                      var or__4131__auto__ = name == null;
                      if (or__4131__auto__) {
                        return or__4131__auto__;
                      } else {
                        return goog.string.isEmpty(name);
                      }
                    }()) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core._STAR_print_fn_bodies_STAR_ ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (cljs.core.count(ns) < len) {
                            var G__4442 = ["0", ns].join("");
                            ns = G__4442;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__4440 = obj;
                          var G__4440__$1 = G__4440 == null ? null : G__4440.constructor;
                          if (G__4440__$1 == null) {
                            return null;
                          } else {
                            return G__4440__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__4441 = obj;
                            var G__4441__$1 = G__4441 == null ? null : G__4441.constructor;
                            if (G__4441__$1 == null) {
                              return null;
                            } else {
                              return G__4441__$1.name;
                            }
                          }();
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4131__auto__ = name == null;
                            if (or__4131__auto__) {
                              return or__4131__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var alt_impl = temp__5718__auto__;
    var G__4443 = obj;
    var G__4444 = writer;
    var G__4445 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4443, G__4444, G__4445) : alt_impl.call(null, G__4443, G__4444, G__4445);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__4446 = cljs.core.seq(cljs.core.next(objs));
  var chunk__4447 = null;
  var count__4448 = 0;
  var i__4449 = 0;
  while (true) {
    if (i__4449 < count__4448) {
      var obj = chunk__4447.cljs$core$IIndexed$_nth$arity$2(null, i__4449);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__4450 = seq__4446;
      var G__4451 = chunk__4447;
      var G__4452 = count__4448;
      var G__4453 = i__4449 + 1;
      seq__4446 = G__4450;
      chunk__4447 = G__4451;
      count__4448 = G__4452;
      i__4449 = G__4453;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4446);
      if (temp__5720__auto__) {
        var seq__4446__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4446__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4446__$1);
          var G__4454 = cljs.core.chunk_rest(seq__4446__$1);
          var G__4455 = c__4550__auto__;
          var G__4456 = cljs.core.count(c__4550__auto__);
          var G__4457 = 0;
          seq__4446 = G__4454;
          chunk__4447 = G__4455;
          count__4448 = G__4456;
          i__4449 = G__4457;
          continue;
        } else {
          var obj = cljs.core.first(seq__4446__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__4458 = cljs.core.next(seq__4446__$1);
          var G__4459 = null;
          var G__4460 = 0;
          var G__4461 = 0;
          seq__4446 = G__4458;
          chunk__4447 = G__4459;
          count__4448 = G__4460;
          i__4449 = G__4461;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__4463 = arguments.length;
  switch(G__4463) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4466 = arguments.length;
  var i__4731__auto___4467 = 0;
  while (true) {
    if (i__4731__auto___4467 < len__4730__auto___4466) {
      args__4736__auto__.push(arguments[i__4731__auto___4467]);
      var G__4468 = i__4731__auto___4467 + 1;
      i__4731__auto___4467 = G__4468;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq4465) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4465));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4470 = arguments.length;
  var i__4731__auto___4471 = 0;
  while (true) {
    if (i__4731__auto___4471 < len__4730__auto___4470) {
      args__4736__auto__.push(arguments[i__4731__auto___4471]);
      var G__4472 = i__4731__auto___4471 + 1;
      i__4731__auto___4471 = G__4472;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq4469) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4469));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4474 = arguments.length;
  var i__4731__auto___4475 = 0;
  while (true) {
    if (i__4731__auto___4475 < len__4730__auto___4474) {
      args__4736__auto__.push(arguments[i__4731__auto___4475]);
      var G__4476 = i__4731__auto___4475 + 1;
      i__4731__auto___4475 = G__4476;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq4473) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4473));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__4477__i = 0, G__4477__a = new Array(arguments.length - 0);
      while (G__4477__i < G__4477__a.length) {
        G__4477__a[G__4477__i] = arguments[G__4477__i + 0];
        ++G__4477__i;
      }
      objs = new cljs.core.IndexedSeq(G__4477__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__4478) {
    var objs = cljs.core.seq(arglist__4478);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4480 = arguments.length;
  var i__4731__auto___4481 = 0;
  while (true) {
    if (i__4731__auto___4481 < len__4730__auto___4480) {
      args__4736__auto__.push(arguments[i__4731__auto___4481]);
      var G__4482 = i__4731__auto___4481 + 1;
      i__4731__auto___4481 = G__4482;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq4479) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4479));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4484 = arguments.length;
  var i__4731__auto___4485 = 0;
  while (true) {
    if (i__4731__auto___4485 < len__4730__auto___4484) {
      args__4736__auto__.push(arguments[i__4731__auto___4485]);
      var G__4486 = i__4731__auto___4485 + 1;
      i__4731__auto___4485 = G__4486;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq4483) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4483));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4488 = arguments.length;
  var i__4731__auto___4489 = 0;
  while (true) {
    if (i__4731__auto___4489 < len__4730__auto___4488) {
      args__4736__auto__.push(arguments[i__4731__auto___4489]);
      var G__4490 = i__4731__auto___4489 + 1;
      i__4731__auto___4489 = G__4490;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq4487) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4487));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4492 = arguments.length;
  var i__4731__auto___4493 = 0;
  while (true) {
    if (i__4731__auto___4493 < len__4730__auto___4492) {
      args__4736__auto__.push(arguments[i__4731__auto___4493]);
      var G__4494 = i__4731__auto___4493 + 1;
      i__4731__auto___4493 = G__4494;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core._STAR_print_newline_STAR_) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq4491) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4491));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core._STAR_print_namespace_maps_STAR_) {
    var ns = null;
    var G__4501 = cljs.core.seq(m);
    var vec__4502 = G__4501;
    var seq__4503 = cljs.core.seq(vec__4502);
    var first__4504 = cljs.core.first(seq__4503);
    var seq__4503__$1 = cljs.core.next(seq__4503);
    var vec__4505 = first__4504;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505, 1, null);
    var entry = vec__4505;
    var entries = seq__4503__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__4501__$1 = G__4501;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__4514 = G__4501__$1;
      var seq__4515 = cljs.core.seq(vec__4514);
      var first__4516 = cljs.core.first(seq__4515);
      var seq__4515__$1 = cljs.core.next(seq__4515);
      var vec__4517 = first__4516;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4517, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4517, 1, null);
      var entry__$1 = vec__4517;
      var entries__$1 = seq__4515__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__4520 = ns__$2;
              var G__4521 = entries__$1;
              var G__4522 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4520;
              G__4501__$1 = G__4521;
              lm__$1 = G__4522;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5720__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5720__auto__)) {
              var new_ns = temp__5720__auto__;
              var G__4523 = new_ns;
              var G__4524 = entries__$1;
              var G__4525 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__4523;
              G__4501__$1 = G__4524;
              lm__$1 = G__4525;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__4526_4532 = cljs.core.key(e);
    var G__4527_4533 = w;
    var G__4528_4534 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4526_4532, G__4527_4533, G__4528_4534) : print_one.call(null, G__4526_4532, G__4527_4533, G__4528_4534);
    cljs.core._write(w, " ");
    var G__4529 = cljs.core.val(e);
    var G__4530 = w;
    var G__4531 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4529, G__4530, G__4531) : print_one.call(null, G__4529, G__4530, G__4531);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__4535 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4535, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4535, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4541 = arguments.length;
  var i__4731__auto___4542 = 0;
  while (true) {
    if (i__4731__auto___4542 < len__4730__auto___4541) {
      args__4736__auto__.push(arguments[i__4731__auto___4542]);
      var G__4543 = i__4731__auto___4542 + 1;
      i__4731__auto___4542 = G__4543;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq4538) {
  var G__4539 = cljs.core.first(seq4538);
  var seq4538__$1 = cljs.core.next(seq4538);
  var G__4540 = cljs.core.first(seq4538__$1);
  var seq4538__$2 = cljs.core.next(seq4538__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4539, G__4540, seq4538__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__4545 = arguments.length;
  switch(G__4545) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__4547_SHARP_, p2__4548_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__4547_SHARP_, p2__4548_SHARP_) : rf.call(null, p1__4547_SHARP_, p2__4548_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__4549 = null;
      var G__4549__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4549__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__4549__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__4549 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4549__0.call(this);
          case 1:
            return G__4549__1.call(this, result);
          case 2:
            return G__4549__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4549.cljs$core$IFn$_invoke$arity$0 = G__4549__0;
      G__4549.cljs$core$IFn$_invoke$arity$1 = G__4549__1;
      G__4549.cljs$core$IFn$_invoke$arity$2 = G__4549__2;
      return G__4549;
    }();
  }(rf1);
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__4551 = arguments.length;
  switch(G__4551) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__4555 = null;
      var G__4555__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__4555__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__4555__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__4552 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__4553 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__4552, G__4553) : retf.call(null, G__4552, G__4553);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__4555 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__4555__0.call(this);
          case 1:
            return G__4555__1.call(this, result);
          case 2:
            return G__4555__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__4555.cljs$core$IFn$_invoke$arity$0 = G__4555__0;
      G__4555.cljs$core$IFn$_invoke$arity$1 = G__4555__1;
      G__4555.cljs$core$IFn$_invoke$arity$2 = G__4555__2;
      return G__4555;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__4557 = arguments.length;
  switch(G__4557) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__4559 = null;
        var G__4559__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__4559__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__4559__2 = function(result, input) {
          var prior = cljs.core.deref(pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__4559 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__4559__0.call(this);
            case 1:
              return G__4559__1.call(this, result);
            case 2:
              return G__4559__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__4559.cljs$core$IFn$_invoke$arity$0 = G__4559__0;
        G__4559.cljs$core$IFn$_invoke$arity$1 = G__4559__1;
        G__4559.cljs$core$IFn$_invoke$arity$2 = G__4559__2;
        return G__4559;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__4561 = arguments.length;
  switch(G__4561) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__4563 = null;
  var G__4563__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__4563__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4563 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4563__1.call(this, x);
      case 2:
        return G__4563__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4563.cljs$core$IFn$_invoke$arity$1 = G__4563__1;
  G__4563.cljs$core$IFn$_invoke$arity$2 = G__4563__2;
  return G__4563;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__4564 = null;
  var G__4564__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__4564__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__4564 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__4564__1.call(this, x);
      case 2:
        return G__4564__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__4564.cljs$core$IFn$_invoke$arity$1 = G__4564__1;
  G__4564.cljs$core$IFn$_invoke$arity$2 = G__4564__2;
  return G__4564;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
var G__4565_4568 = cljs.core.Eduction.prototype;
var G__4566_4569 = cljs.core.ITER_SYMBOL;
var G__4567_4570 = function(G__4565_4568, G__4566_4569) {
  return function() {
    var this__4669__auto__ = this;
    return cljs.core.es6_iterator(this__4669__auto__);
  };
}(G__4565_4568, G__4566_4569);
goog.object.set(G__4565_4568, G__4566_4569, G__4567_4570);
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4572 = arguments.length;
  var i__4731__auto___4573 = 0;
  while (true) {
    if (i__4731__auto___4573 < len__4730__auto___4572) {
      args__4736__auto__.push(arguments[i__4731__auto___4573]);
      var G__4574 = i__4731__auto___4573 + 1;
      i__4731__auto___4573 = G__4574;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq4571) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4571));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4576_SHARP_, p2__4575_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__4575_SHARP_) : proc.call(null, p2__4575_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._clj__GT_js["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4434__auto__.call(null, x);
    } else {
      var m__4431__auto__ = cljs.core._key__GT_js["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4431__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__4578 = arguments.length;
  switch(G__4578) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4656 = arguments.length;
  var i__4731__auto___4657 = 0;
  while (true) {
    if (i__4731__auto___4657 < len__4730__auto___4656) {
      args__4736__auto__.push(arguments[i__4731__auto___4657]);
      var G__4658 = i__4731__auto___4657 + 1;
      i__4731__auto___4657 = G__4658;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__4583) {
  var map__4584 = p__4583;
  var map__4584__$1 = (!(map__4584 == null) ? map__4584.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4584.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4584) : map__4584;
  var options = map__4584__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__4584__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function(map__4584, map__4584__$1, options, keyword_fn) {
    return function cljs$core$keyfn(k) {
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
    };
  }(map__4584, map__4584__$1, options, keyword_fn);
  var thisfn = function(map__4584, map__4584__$1, options, keyword_fn) {
    return function cljs$core$thisfn(x__$1) {
      if (x__$1 == null) {
        return null;
      } else {
        if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
          return cljs.core._clj__GT_js(x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Keyword) {
            return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
          } else {
            if (x__$1 instanceof cljs.core.Symbol) {
              return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
            } else {
              if (cljs.core.map_QMARK_(x__$1)) {
                var m = {};
                var seq__4624_4659 = cljs.core.seq(x__$1);
                var chunk__4625_4660 = null;
                var count__4626_4661 = 0;
                var i__4627_4662 = 0;
                while (true) {
                  if (i__4627_4662 < count__4626_4661) {
                    var vec__4640_4663 = chunk__4625_4660.cljs$core$IIndexed$_nth$arity$2(null, i__4627_4662);
                    var k_4664 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4640_4663, 0, null);
                    var v_4665 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4640_4663, 1, null);
                    var G__4643_4666 = m;
                    var G__4644_4667 = keyfn(k_4664);
                    var G__4645_4668 = cljs$core$thisfn(v_4665);
                    goog.object.set(G__4643_4666, G__4644_4667, G__4645_4668);
                    var G__4669 = seq__4624_4659;
                    var G__4670 = chunk__4625_4660;
                    var G__4671 = count__4626_4661;
                    var G__4672 = i__4627_4662 + 1;
                    seq__4624_4659 = G__4669;
                    chunk__4625_4660 = G__4670;
                    count__4626_4661 = G__4671;
                    i__4627_4662 = G__4672;
                    continue;
                  } else {
                    var temp__5720__auto___4673 = cljs.core.seq(seq__4624_4659);
                    if (temp__5720__auto___4673) {
                      var seq__4624_4674__$1 = temp__5720__auto___4673;
                      if (cljs.core.chunked_seq_QMARK_(seq__4624_4674__$1)) {
                        var c__4550__auto___4675 = cljs.core.chunk_first(seq__4624_4674__$1);
                        var G__4676 = cljs.core.chunk_rest(seq__4624_4674__$1);
                        var G__4677 = c__4550__auto___4675;
                        var G__4678 = cljs.core.count(c__4550__auto___4675);
                        var G__4679 = 0;
                        seq__4624_4659 = G__4676;
                        chunk__4625_4660 = G__4677;
                        count__4626_4661 = G__4678;
                        i__4627_4662 = G__4679;
                        continue;
                      } else {
                        var vec__4646_4680 = cljs.core.first(seq__4624_4674__$1);
                        var k_4681 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4646_4680, 0, null);
                        var v_4682 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4646_4680, 1, null);
                        var G__4649_4683 = m;
                        var G__4650_4684 = keyfn(k_4681);
                        var G__4651_4685 = cljs$core$thisfn(v_4682);
                        goog.object.set(G__4649_4683, G__4650_4684, G__4651_4685);
                        var G__4686 = cljs.core.next(seq__4624_4674__$1);
                        var G__4687 = null;
                        var G__4688 = 0;
                        var G__4689 = 0;
                        seq__4624_4659 = G__4686;
                        chunk__4625_4660 = G__4687;
                        count__4626_4661 = G__4688;
                        i__4627_4662 = G__4689;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return m;
              } else {
                if (cljs.core.coll_QMARK_(x__$1)) {
                  var arr = [];
                  var seq__4652_4690 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                  var chunk__4653_4691 = null;
                  var count__4654_4692 = 0;
                  var i__4655_4693 = 0;
                  while (true) {
                    if (i__4655_4693 < count__4654_4692) {
                      var x_4694__$2 = chunk__4653_4691.cljs$core$IIndexed$_nth$arity$2(null, i__4655_4693);
                      arr.push(x_4694__$2);
                      var G__4695 = seq__4652_4690;
                      var G__4696 = chunk__4653_4691;
                      var G__4697 = count__4654_4692;
                      var G__4698 = i__4655_4693 + 1;
                      seq__4652_4690 = G__4695;
                      chunk__4653_4691 = G__4696;
                      count__4654_4692 = G__4697;
                      i__4655_4693 = G__4698;
                      continue;
                    } else {
                      var temp__5720__auto___4699 = cljs.core.seq(seq__4652_4690);
                      if (temp__5720__auto___4699) {
                        var seq__4652_4700__$1 = temp__5720__auto___4699;
                        if (cljs.core.chunked_seq_QMARK_(seq__4652_4700__$1)) {
                          var c__4550__auto___4701 = cljs.core.chunk_first(seq__4652_4700__$1);
                          var G__4702 = cljs.core.chunk_rest(seq__4652_4700__$1);
                          var G__4703 = c__4550__auto___4701;
                          var G__4704 = cljs.core.count(c__4550__auto___4701);
                          var G__4705 = 0;
                          seq__4652_4690 = G__4702;
                          chunk__4653_4691 = G__4703;
                          count__4654_4692 = G__4704;
                          i__4655_4693 = G__4705;
                          continue;
                        } else {
                          var x_4706__$2 = cljs.core.first(seq__4652_4700__$1);
                          arr.push(x_4706__$2);
                          var G__4707 = cljs.core.next(seq__4652_4700__$1);
                          var G__4708 = null;
                          var G__4709 = 0;
                          var G__4710 = 0;
                          seq__4652_4690 = G__4707;
                          chunk__4653_4691 = G__4708;
                          count__4654_4692 = G__4709;
                          i__4655_4693 = G__4710;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  return arr;
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4584, map__4584__$1, options, keyword_fn);
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq4581) {
  var G__4582 = cljs.core.first(seq4581);
  var seq4581__$1 = cljs.core.next(seq4581);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4582, seq4581__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4433__auto__ = x == null ? null : x;
    var m__4434__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4434__auto__.call(null, x, options);
    } else {
      var m__4431__auto__ = cljs.core._js__GT_clj["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4431__auto__.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__4716 = arguments.length;
  switch(G__4716) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4721 = arguments.length;
      var i__4731__auto___4722 = 0;
      while (true) {
        if (i__4731__auto___4722 < len__4730__auto___4721) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4722]);
          var G__4723 = i__4731__auto___4722 + 1;
          i__4731__auto___4722 = G__4723;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__4717 = opts;
  var map__4717__$1 = (!(map__4717 == null) ? map__4717.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__4717.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__4717) : map__4717;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__4717__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.map_entry_QMARK_(x__$1)) {
            return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
          } else {
            if (cljs.core.coll_QMARK_(x__$1)) {
              return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
            } else {
              if (cljs.core.array_QMARK_(x__$1)) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
                  return function(p1__4711_SHARP_, p2__4712_SHARP_) {
                    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__4711_SHARP_, cljs$core$thisfn(p2__4712_SHARP_));
                  };
                }(map__4717, map__4717__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
              } else {
                if (cljs.core.type(x__$1) === Object) {
                  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(map__4717, map__4717__$1, keywordize_keys, keyfn) {
                    return function(r, k) {
                      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                    };
                  }(map__4717, map__4717__$1, keywordize_keys, keyfn), cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
                } else {
                  return x__$1;
                }
              }
            }
          }
        }
      }
    };
  }(map__4717, map__4717__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq4714) {
  var G__4715 = cljs.core.first(seq4714);
  var seq4714__$1 = cljs.core.next(seq4714);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4715, seq4714__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__4724__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__4724 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__4725__i = 0, G__4725__a = new Array(arguments.length - 0);
          while (G__4725__i < G__4725__a.length) {
            G__4725__a[G__4725__i] = arguments[G__4725__i + 0];
            ++G__4725__i;
          }
          args = new cljs.core.IndexedSeq(G__4725__a, 0, null);
        }
        return G__4724__delegate.call(this, args);
      };
      G__4724.cljs$lang$maxFixedArity = 0;
      G__4724.cljs$lang$applyTo = function(arglist__4726) {
        var args = cljs.core.seq(arglist__4726);
        return G__4724__delegate(args);
      };
      G__4724.cljs$core$IFn$_invoke$arity$variadic = G__4724__delegate;
      return G__4724;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__4730 = arguments.length;
  switch(G__4730) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4751__auto__ = [];
      var len__4730__auto___4732 = arguments.length;
      var i__4731__auto___4733 = 0;
      while (true) {
        if (i__4731__auto___4733 < len__4730__auto___4732) {
          args_arr__4751__auto__.push(arguments[i__4731__auto___4733]);
          var G__4734 = i__4731__auto___4733 + 1;
          i__4731__auto___4733 = G__4734;
          continue;
        } else {
        }
        break;
      }
      var argseq__4752__auto__ = new cljs.core.IndexedSeq(args_arr__4751__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4752__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__4735 = ret;
      f = G__4735;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq4728) {
  var G__4729 = cljs.core.first(seq4728);
  var seq4728__$1 = cljs.core.next(seq4728);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4729, seq4728__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__4737 = arguments.length;
  switch(G__4737) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__4739 = Math.random() * n;
  return Math.floor(G__4739);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4742 = arguments.length;
  var i__4731__auto___4743 = 0;
  while (true) {
    if (i__4731__auto___4743 < len__4730__auto___4742) {
      args__4736__auto__.push(arguments[i__4731__auto___4743]);
      var G__4744 = i__4731__auto___4743 + 1;
      i__4731__auto___4743 = G__4744;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq4740) {
  var G__4741 = cljs.core.first(seq4740);
  var seq4740__$1 = cljs.core.next(seq4740);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4741, seq4740__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__4746 = arguments.length;
  switch(G__4746) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4131__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__4749 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__4749.cljs$core$IFn$_invoke$arity$1 ? fexpr__4749.cljs$core$IFn$_invoke$arity$1(child) : fexpr__4749.call(null, child);
    }(), parent);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      var and__4120__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4120__auto__) {
        var and__4120__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4120__auto____$1) {
          var and__4120__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4120__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__4751 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__4752 = i + 1;
                ret = G__4751;
                i = G__4752;
                continue;
              }
              break;
            }
          } else {
            return and__4120__auto____$2;
          }
        } else {
          return and__4120__auto____$1;
        }
      } else {
        return and__4120__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__4754 = arguments.length;
  switch(G__4754) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__4757 = arguments.length;
  switch(G__4757) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__4760 = arguments.length;
  switch(G__4760) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__4763 = arguments.length;
  switch(G__4763) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4131__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__4769 = arguments.length;
  switch(G__4769) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__4765_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__4765_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__4765_SHARP_), cljs.core.second(p1__4765_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__4766_SHARP_, p2__4767_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__4766_SHARP_, p2__4767_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__4771 = cljs.core.deref(prefer_table);
    return fexpr__4771.cljs$core$IFn$_invoke$arity$1 ? fexpr__4771.cljs$core$IFn$_invoke$arity$1(x) : fexpr__4771.call(null, x);
  }();
  var or__4131__auto__ = cljs.core.truth_(function() {
    var and__4120__auto__ = xprefs;
    if (cljs.core.truth_(and__4120__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4120__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__4775 = x;
            var G__4776 = cljs.core.first(ps);
            var G__4777 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4775, G__4776, G__4777) : cljs.core.prefers_STAR_.call(null, G__4775, G__4776, G__4777);
          }())) {
          } else {
          }
          var G__4784 = cljs.core.rest(ps);
          ps = G__4784;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4131__auto____$1)) {
      return or__4131__auto____$1;
    } else {
      var or__4131__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__4781 = cljs.core.first(ps);
              var G__4782 = y;
              var G__4783 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__4781, G__4782, G__4783) : cljs.core.prefers_STAR_.call(null, G__4781, G__4782, G__4783);
            }())) {
            } else {
            }
            var G__4785 = cljs.core.rest(ps);
            ps = G__4785;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4131__auto____$2)) {
        return or__4131__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4131__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__4786) {
    var vec__4787 = p__4786;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 1, null);
    var e = vec__4787;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5718__auto__ = function() {
      var and__4120__auto__ = best_entry == null;
      if (and__4120__auto__) {
        var fexpr__4791 = cljs.core.deref(method_table);
        return fexpr__4791.cljs$core$IFn$_invoke$arity$1 ? fexpr__4791.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__4791.call(null, default_dispatch_val);
      } else {
        return and__4120__auto__;
      }
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var entry = temp__5718__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._reset[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._reset["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._add_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4434__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4431__auto__ = cljs.core._add_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4431__auto__.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._remove_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4434__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4431__auto__ = cljs.core._remove_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4431__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._prefer_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4434__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4431__auto__ = cljs.core._prefer_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4431__auto__.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._get_method[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4434__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4431__auto__ = cljs.core._get_method["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4431__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._methods[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._methods["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._prefers[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._prefers["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._default_dispatch_val["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4433__auto__ = mf == null ? null : mf;
    var m__4434__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4434__auto__.call(null, mf);
    } else {
      var m__4431__auto__ = cljs.core._dispatch_fn["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4431__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__4794 = null;
  var G__4794__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__4794__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__4794__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__4794__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__4794__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__4794__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__4794__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__4794__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__4794__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__4794__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__4794__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__4794__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__4794__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__4794__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__4794__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__4794__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__4794__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__4794__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__4794__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__4794__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__4794__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__4794__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__4794 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__4794__1.call(this, self__);
      case 2:
        return G__4794__2.call(this, self__, a);
      case 3:
        return G__4794__3.call(this, self__, a, b);
      case 4:
        return G__4794__4.call(this, self__, a, b, c);
      case 5:
        return G__4794__5.call(this, self__, a, b, c, d);
      case 6:
        return G__4794__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__4794__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__4794__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__4794__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__4794__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__4794__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__4794__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__4794__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__4794__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__4794__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__4794__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__4794__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__4794__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__4794__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__4794__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__4794__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__4794__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__4794.cljs$core$IFn$_invoke$arity$1 = G__4794__1;
  G__4794.cljs$core$IFn$_invoke$arity$2 = G__4794__2;
  G__4794.cljs$core$IFn$_invoke$arity$3 = G__4794__3;
  G__4794.cljs$core$IFn$_invoke$arity$4 = G__4794__4;
  G__4794.cljs$core$IFn$_invoke$arity$5 = G__4794__5;
  G__4794.cljs$core$IFn$_invoke$arity$6 = G__4794__6;
  G__4794.cljs$core$IFn$_invoke$arity$7 = G__4794__7;
  G__4794.cljs$core$IFn$_invoke$arity$8 = G__4794__8;
  G__4794.cljs$core$IFn$_invoke$arity$9 = G__4794__9;
  G__4794.cljs$core$IFn$_invoke$arity$10 = G__4794__10;
  G__4794.cljs$core$IFn$_invoke$arity$11 = G__4794__11;
  G__4794.cljs$core$IFn$_invoke$arity$12 = G__4794__12;
  G__4794.cljs$core$IFn$_invoke$arity$13 = G__4794__13;
  G__4794.cljs$core$IFn$_invoke$arity$14 = G__4794__14;
  G__4794.cljs$core$IFn$_invoke$arity$15 = G__4794__15;
  G__4794.cljs$core$IFn$_invoke$arity$16 = G__4794__16;
  G__4794.cljs$core$IFn$_invoke$arity$17 = G__4794__17;
  G__4794.cljs$core$IFn$_invoke$arity$18 = G__4794__18;
  G__4794.cljs$core$IFn$_invoke$arity$19 = G__4794__19;
  G__4794.cljs$core$IFn$_invoke$arity$20 = G__4794__20;
  G__4794.cljs$core$IFn$_invoke$arity$21 = G__4794__21;
  G__4794.cljs$core$IFn$_invoke$arity$22 = G__4794__22;
  return G__4794;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args4792) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args4792)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5718__auto__ = function() {
    var fexpr__4793 = cljs.core.deref(self__.method_cache);
    return fexpr__4793.cljs$core$IFn$_invoke$arity$1 ? fexpr__4793.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__4793.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var target_fn = temp__5718__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__4795 = self__.uuid;
  var G__4796 = other.uuid;
  return goog.array.defaultCompare(G__4795, G__4796);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__4799 = arguments.length;
  switch(G__4799) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__4801 = v;
  var G__4801__$1 = G__4801 instanceof cljs.core.Keyword ? G__4801.fqn : null;
  switch(G__4801__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__4803_SHARP_, p2__4804_SHARP_) {
      goog.object.set(p1__4803_SHARP_, p2__4804_SHARP_, true);
      return p1__4803_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__4807 = cljs.core.next(ks__$1);
          var G__4808 = [function() {
            var G__4806 = ret;
            if (!(ret === "")) {
              return [G__4806, "|"].join("");
            } else {
              return G__4806;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__4807;
          ret = G__4808;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_4809 = 0;
  while (true) {
    if (i_4809 < name.length) {
      var c_4810 = name.charAt(i_4809);
      var sub_4811 = goog.object.get(cljs.core.CHAR_MAP, c_4810);
      if (!(sub_4811 == null)) {
        sb.append(sub_4811);
      } else {
        sb.append(c_4810);
      }
      var G__4812 = i_4809 + 1;
      i_4809 = G__4812;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE_), "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5718__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5718__auto__)) {
      var match = temp__5718__auto__;
      var vec__4816 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4816, 0, null);
      var G__4819 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__4820 = r.lastIndex;
      ret = G__4819;
      last_match_end = G__4820;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__4822 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__4821 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__4821.cljs$core$IFn$_invoke$arity$1 ? fexpr__4821.cljs$core$IFn$_invoke$arity$1(G__4822) : fexpr__4821.call(null, G__4822);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__4823 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4824 = null;
    var count__4825 = 0;
    var i__4826 = 0;
    while (true) {
      if (i__4826 < count__4825) {
        var tap = chunk__4824.cljs$core$IIndexed$_nth$arity$2(null, i__4826);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4829) {
          if (e4829 instanceof Error) {
            var ex_4831 = e4829;
          } else {
            throw e4829;
          }
        }
        var G__4832 = seq__4823;
        var G__4833 = chunk__4824;
        var G__4834 = count__4825;
        var G__4835 = i__4826 + 1;
        seq__4823 = G__4832;
        chunk__4824 = G__4833;
        count__4825 = G__4834;
        i__4826 = G__4835;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4823);
        if (temp__5720__auto__) {
          var seq__4823__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4823__$1)) {
            var c__4550__auto__ = cljs.core.chunk_first(seq__4823__$1);
            var G__4836 = cljs.core.chunk_rest(seq__4823__$1);
            var G__4837 = c__4550__auto__;
            var G__4838 = cljs.core.count(c__4550__auto__);
            var G__4839 = 0;
            seq__4823 = G__4836;
            chunk__4824 = G__4837;
            count__4825 = G__4838;
            i__4826 = G__4839;
            continue;
          } else {
            var tap = cljs.core.first(seq__4823__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4830) {
              if (e4830 instanceof Error) {
                var ex_4840 = e4830;
              } else {
                throw e4830;
              }
            }
            var G__4841 = cljs.core.next(seq__4823__$1);
            var G__4842 = null;
            var G__4843 = 0;
            var G__4844 = 0;
            seq__4823 = G__4841;
            chunk__4824 = G__4842;
            count__4825 = G__4843;
            i__4826 = G__4844;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__4823 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__4824 = null;
    var count__4825 = 0;
    var i__4826 = 0;
    while (true) {
      if (i__4826 < count__4825) {
        var tap = chunk__4824.cljs$core$IIndexed$_nth$arity$2(null, i__4826);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e4829) {
          if (e4829 instanceof Error) {
            var ex_4845 = e4829;
          } else {
            throw e4829;
          }
        }
        var G__4846 = seq__4823;
        var G__4847 = chunk__4824;
        var G__4848 = count__4825;
        var G__4849 = i__4826 + 1;
        seq__4823 = G__4846;
        chunk__4824 = G__4847;
        count__4825 = G__4848;
        i__4826 = G__4849;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__4823);
        if (temp__5720__auto__) {
          var seq__4823__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__4823__$1)) {
            var c__4550__auto__ = cljs.core.chunk_first(seq__4823__$1);
            var G__4850 = cljs.core.chunk_rest(seq__4823__$1);
            var G__4851 = c__4550__auto__;
            var G__4852 = cljs.core.count(c__4550__auto__);
            var G__4853 = 0;
            seq__4823 = G__4850;
            chunk__4824 = G__4851;
            count__4825 = G__4852;
            i__4826 = G__4853;
            continue;
          } else {
            var tap = cljs.core.first(seq__4823__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e4830) {
              if (e4830 instanceof Error) {
                var ex_4854 = e4830;
              } else {
                throw e4830;
              }
            }
            var G__4855 = cljs.core.next(seq__4823__$1);
            var G__4856 = null;
            var G__4857 = 0;
            var G__4858 = 0;
            seq__4823 = G__4855;
            chunk__4824 = G__4856;
            count__4825 = G__4857;
            i__4826 = G__4858;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
  return cljs.core._write(writer__4375__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__4861 = function() {
          var G__4859 = ctxt;
          var G__4860 = cljs.core.first(xs);
          return goog.object.get(G__4859, G__4860);
        }();
        var G__4862 = cljs.core.next(xs);
        ctxt = G__4861;
        xs = G__4862;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__4863 = cljs.core._STAR_target_STAR_;
  switch(G__4863) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4120__auto__ = ctxt;
              if (cljs.core.truth_(and__4120__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4120__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e4864) {
            if (e4864 instanceof ReferenceError) {
              var e = e4864;
              return null;
            } else {
              throw e4864;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core._STAR_target_STAR_].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__4867 = arguments.length;
  switch(G__4867) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.out.println(s);
        };
      }(system));
      return cljs.core.set_print_err_fn_BANG_(function(system) {
        return function() {
          var xs = arguments;
          var s = goog.array.clone(xs).join("");
          return system.error.println(s);
        };
      }(system));
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__2636 = "g";
    var G__2636__$1 = cljs.core.truth_(re.ignoreCase) ? [G__2636, "i"].join("") : G__2636;
    var G__2636__$2 = cljs.core.truth_(re.multiline) ? [G__2636__$1, "m"].join("") : G__2636__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__2636__$2, "u"].join("");
    } else {
      return G__2636__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__2639__delegate = function(args) {
      var matches = cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2, args);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(matches), 1)) {
        var G__2637 = cljs.core.first(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2637) : f.call(null, G__2637);
      } else {
        var G__2638 = cljs.core.vec(matches);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2638) : f.call(null, G__2638);
      }
    };
    var G__2639 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__2640__i = 0, G__2640__a = new Array(arguments.length - 0);
        while (G__2640__i < G__2640__a.length) {
          G__2640__a[G__2640__i] = arguments[G__2640__i + 0];
          ++G__2640__i;
        }
        args = new cljs.core.IndexedSeq(G__2640__a, 0, null);
      }
      return G__2639__delegate.call(this, args);
    };
    G__2639.cljs$lang$maxFixedArity = 0;
    G__2639.cljs$lang$applyTo = function(arglist__2641) {
      var args = cljs.core.seq(arglist__2641);
      return G__2639__delegate(args);
    };
    G__2639.cljs$core$IFn$_invoke$arity$variadic = G__2639__delegate;
    return G__2639;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all(s, match, replacement);
      } else {
        return clojure.string.replace_all(s, match, clojure.string.replace_with(replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__2643 = arguments.length;
  switch(G__2643) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__2645 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));
      var G__2646 = cljs.core.next(coll__$1);
      sb = G__2645;
      coll__$1 = G__2646;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));
      var coll__$2 = cljs.core.next(coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__2647 = sb;
      var G__2648 = coll__$2;
      sb = G__2647;
      coll__$1 = G__2648;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek(v__$1)) {
      var G__2649 = cljs.core.pop(v__$1);
      v__$1 = G__2649;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count(v)) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__2650 = cljs.core._EQ__EQ_;
    var expr__2651 = limit;
    if (cljs.core.truth_(pred__2650.cljs$core$IFn$_invoke$arity$2 ? pred__2650.cljs$core$IFn$_invoke$arity$2(1, expr__2651) : pred__2650.call(null, 1, expr__2651))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__2650.cljs$core$IFn$_invoke$arity$2 ? pred__2650.cljs$core$IFn$_invoke$arity$2(2, expr__2651) : pred__2650.call(null, 2, expr__2651))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__2654 = arguments.length;
  switch(G__2654) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed(limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
      } else {
        var m = cljs.core.re_find(re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__2656 = s__$1.substring(index + cljs.core.count(m));
          var G__2657 = limit__$1 - 1;
          var G__2658 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
          s__$1 = G__2656;
          limit__$1 = G__2657;
          parts = G__2658;
          continue;
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__2659 = index - 1;
        index = G__2659;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__2660 = index + 1;
      index = G__2660;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__2662 = arguments.length;
  switch(G__2662) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__2665 = arguments.length;
  switch(G__2665) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4121 = arguments.length;
  var i__4731__auto___4122 = 0;
  while (true) {
    if (i__4731__auto___4122 < len__4730__auto___4121) {
      args__4736__auto__.push(arguments[i__4731__auto___4122]);
      var G__4123 = i__4731__auto___4122 + 1;
      i__4731__auto___4122 = G__4123;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write(cljs.core._STAR_out_STAR_, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq4120) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4120));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4125 = arguments.length;
  var i__4731__auto___4126 = 0;
  while (true) {
    if (i__4731__auto___4126 < len__4730__auto___4125) {
      args__4736__auto__.push(arguments[i__4731__auto___4126]);
      var G__4127 = i__4731__auto___4126 + 1;
      i__4731__auto___4126 = G__4127;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.print, more);
  return cljs.core._write(cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq4124) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4124));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write(cljs.core._STAR_out_STAR_, function() {
    var pred__4128 = cljs.core._EQ_;
    var expr__4129 = c;
    if (cljs.core.truth_(function() {
      var G__4131 = "\b";
      var G__4132 = expr__4129;
      return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4131, G__4132) : pred__4128.call(null, G__4131, G__4132);
    }())) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(function() {
        var G__4133 = "\t";
        var G__4134 = expr__4129;
        return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4133, G__4134) : pred__4128.call(null, G__4133, G__4134);
      }())) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(function() {
          var G__4135 = "\n";
          var G__4136 = expr__4129;
          return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4135, G__4136) : pred__4128.call(null, G__4135, G__4136);
        }())) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(function() {
            var G__4137 = "\f";
            var G__4138 = expr__4129;
            return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4137, G__4138) : pred__4128.call(null, G__4137, G__4138);
          }())) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(function() {
              var G__4139 = "\r";
              var G__4140 = expr__4129;
              return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4139, G__4140) : pred__4128.call(null, G__4139, G__4140);
            }())) {
              return "\\return";
            } else {
              if (cljs.core.truth_(function() {
                var G__4141 = '"';
                var G__4142 = expr__4129;
                return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4141, G__4142) : pred__4128.call(null, G__4141, G__4142);
              }())) {
                return '\\"';
              } else {
                if (cljs.core.truth_(function() {
                  var G__4143 = "\\";
                  var G__4144 = expr__4129;
                  return pred__4128.cljs$core$IFn$_invoke$arity$2 ? pred__4128.cljs$core$IFn$_invoke$arity$2(G__4143, G__4144) : pred__4128.call(null, G__4143, G__4144);
                }())) {
                  return "\\\\";
                } else {
                  return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4146 = arguments.length;
  var i__4731__auto___4147 = 0;
  while (true) {
    if (i__4731__auto___4147 < len__4730__auto___4146) {
      args__4736__auto__.push(arguments[i__4731__auto___4147]);
      var G__4148 = i__4731__auto___4147 + 1;
      i__4731__auto___4147 = G__4148;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write(cljs.core._STAR_out_STAR_, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq4145) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4145));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4150 = arguments.length;
  var i__4731__auto___4151 = 0;
  while (true) {
    if (i__4731__auto___4151 < len__4730__auto___4150) {
      args__4736__auto__.push(arguments[i__4731__auto___4151]);
      var G__4152 = i__4731__auto___4151 + 1;
      i__4731__auto___4151 = G__4152;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 0 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.pr, more);
  return cljs.core._write(cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq4149) {
  var self__4718__auto__ = this;
  return self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq4149));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_(lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first(lis__$1);
      var remainder = cljs.core.next(lis__$1);
      var vec__4156 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4156, 0, null);
      var new_context = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4156, 1, null);
      var G__4159 = new_context;
      var G__4160 = remainder;
      var G__4161 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, result);
      context = G__4159;
      lis__$1 = G__4160;
      acc = G__4161;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__4165 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4165, 0, null);
    var new_context = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4165, 1, null);
    if (cljs.core.not(result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__4168 = new_context;
      var G__4169 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, result);
      context = G__4168;
      acc = G__4169;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__4173 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4173, 0, null);
    var continue$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4173, 1, null);
    var new_context = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4173, 2, null);
    if (cljs.core.not(continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__4176 = new_context;
      var G__4177 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, result);
      context = G__4176;
      acc = G__4177;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4523__auto__ = function cljs$pprint$unzip_map_$_iter__4178(s__4179) {
      return new cljs.core.LazySeq(null, function() {
        var s__4179__$1 = s__4179;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq(s__4179__$1);
          if (temp__5720__auto__) {
            var s__4179__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__4179__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first(s__4179__$2);
              var size__4522__auto__ = cljs.core.count(c__4521__auto__);
              var b__4181 = cljs.core.chunk_buffer(size__4522__auto__);
              if (function() {
                var i__4180 = 0;
                while (true) {
                  if (i__4180 < size__4522__auto__) {
                    var vec__4182 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__4180);
                    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4182, 0, null);
                    var vec__4185 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4182, 1, null);
                    var v1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4185, 0, null);
                    var v2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4185, 1, null);
                    cljs.core.chunk_append(b__4181, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__4210 = i__4180 + 1;
                    i__4180 = G__4210;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4181), cljs$pprint$unzip_map_$_iter__4178(cljs.core.chunk_rest(s__4179__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4181), null);
              }
            } else {
              var vec__4188 = cljs.core.first(s__4179__$2);
              var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4188, 0, null);
              var vec__4191 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4188, 1, null);
              var v1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4191, 0, null);
              var v2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4191, 1, null);
              return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__4178(cljs.core.rest(s__4179__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__(m);
  }()), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4523__auto__ = function cljs$pprint$unzip_map_$_iter__4194(s__4195) {
      return new cljs.core.LazySeq(null, function() {
        var s__4195__$1 = s__4195;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq(s__4195__$1);
          if (temp__5720__auto__) {
            var s__4195__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__4195__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first(s__4195__$2);
              var size__4522__auto__ = cljs.core.count(c__4521__auto__);
              var b__4197 = cljs.core.chunk_buffer(size__4522__auto__);
              if (function() {
                var i__4196 = 0;
                while (true) {
                  if (i__4196 < size__4522__auto__) {
                    var vec__4198 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__4196);
                    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4198, 0, null);
                    var vec__4201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4198, 1, null);
                    var v1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4201, 0, null);
                    var v2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4201, 1, null);
                    cljs.core.chunk_append(b__4197, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__4211 = i__4196 + 1;
                    i__4196 = G__4211;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4197), cljs$pprint$unzip_map_$_iter__4194(cljs.core.chunk_rest(s__4195__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4197), null);
              }
            } else {
              var vec__4204 = cljs.core.first(s__4195__$2);
              var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4204, 0, null);
              var vec__4207 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4204, 1, null);
              var v1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4207, 0, null);
              var v2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4207, 1, null);
              return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__4194(cljs.core.rest(s__4195__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__(m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4523__auto__ = function cljs$pprint$tuple_map_$_iter__4212(s__4213) {
      return new cljs.core.LazySeq(null, function() {
        var s__4213__$1 = s__4213;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq(s__4213__$1);
          if (temp__5720__auto__) {
            var s__4213__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__4213__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first(s__4213__$2);
              var size__4522__auto__ = cljs.core.count(c__4521__auto__);
              var b__4215 = cljs.core.chunk_buffer(size__4522__auto__);
              if (function() {
                var i__4214 = 0;
                while (true) {
                  if (i__4214 < size__4522__auto__) {
                    var vec__4216 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__4214);
                    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4216, 0, null);
                    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4216, 1, null);
                    cljs.core.chunk_append(b__4215, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__4222 = i__4214 + 1;
                    i__4214 = G__4222;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4215), cljs$pprint$tuple_map_$_iter__4212(cljs.core.chunk_rest(s__4213__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__4215), null);
              }
            } else {
              var vec__4219 = cljs.core.first(s__4213__$2);
              var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4219, 0, null);
              var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4219, 1, null);
              return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__4212(cljs.core.rest(s__4213__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__(m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count(s);
  if (len > 0 && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, n), c)) {
          return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, n + 1);
        } else {
          var G__4223 = n - 1;
          n = G__4223;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count(s);
  if (len > 0 && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n, len) || !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, n), c)) {
        return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, n);
      } else {
        var G__4224 = n + 1;
        n = G__4224;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_(val) ? cljs.core.set(val) : cljs.core.PersistentHashSet.createAsIfByAssoc([val]);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pos, cljs.core.count(aseq)) || cljs.core.not(function() {
      var G__4226 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(aseq, pos);
      return test.cljs$core$IFn$_invoke$arity$1 ? test.cljs$core$IFn$_invoke$arity$1(G__4226) : test.call(null, G__4226);
    }())) {
      return pos;
    } else {
      var G__4227 = pos + 1;
      pos = G__4227;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__4433__auto__ = pp == null ? null : pp;
    var m__4434__auto__ = cljs.pprint._ppflush[goog.typeOf(x__4433__auto__)];
    if (!(m__4434__auto__ == null)) {
      return m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__4434__auto__.call(null, pp);
    } else {
      var m__4431__auto__ = cljs.pprint._ppflush["_"];
      if (!(m__4431__auto__ == null)) {
        return m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__4431__auto__.call(null, pp);
      } else {
        throw cljs.core.missing_protocol("IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  var G__4228 = cljs.core.deref(cljs.core.deref(this$));
  return sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(G__4228) : sym.call(null, G__4228);
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field(this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, "\n")) {
    cljs.pprint.set_field(this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field(this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field(this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write(cljs.pprint.get_field(this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var G__4231 = arguments.length;
  switch(G__4231) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4232 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4232 = function(writer, max_columns, fields, meta4233) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta4233 = meta4233;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4232.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_4234, meta4233__$1) {
        var self__ = this;
        var _4234__$1 = this;
        return new cljs.pprint.t_cljs$pprint4232(self__.writer, self__.max_columns, self__.fields, meta4233__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_4234) {
        var self__ = this;
        var _4234__$1 = this;
        return self__.meta4233;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush(self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__4235 = cljs.core._EQ_;
        var expr__4236 = cljs.core.type(x);
        if (cljs.core.truth_(pred__4235.cljs$core$IFn$_invoke$arity$2 ? pred__4235.cljs$core$IFn$_invoke$arity$2(String, expr__4236) : pred__4235.call(null, String, expr__4236))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field(this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field(this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count(s));
          } else {
            cljs.pprint.set_field(this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count(s) - nl - 1);
            cljs.pprint.set_field(this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field(this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(s, nl, pred__4235, expr__4236, this$__$1, fields) {
              return function(p1__4229_SHARP_) {
                return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__4229_SHARP_, "\n");
              };
            }(s, nl, pred__4235, expr__4236, this$__$1, fields), s)));
          }
          return cljs.core._write(cljs.pprint.get_field(this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__4235.cljs$core$IFn$_invoke$arity$2 ? pred__4235.cljs$core$IFn$_invoke$arity$2(Number, expr__4236) : pred__4235.call(null, Number, expr__4236))) {
            return cljs.pprint.c_write_char(this$__$1, x);
          } else {
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4236)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta4233", "meta4233", -1662392068, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint4232.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4232.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4232";
    cljs.pprint.t_cljs$pprint4232.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4232");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint4232 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint4232(writer__$1, max_columns__$1, fields__$1, meta4233) {
        return new cljs.pprint.t_cljs$pprint4232(writer__$1, max_columns__$1, fields__$1, meta4233);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint4232(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4240, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4244 = k4240;
  var G__4244__$1 = G__4244 instanceof cljs.core.Keyword ? G__4244.fqn : null;
  switch(G__4244__$1) {
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "indent":
      return self__.indent;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "suffix":
      return self__.suffix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4240, else__4388__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4245) {
      var vec__4246 = p__4245;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4246, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4246, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4239) {
  var self__ = this;
  var G__4239__$1 = this;
  return new cljs.core.RecordIter(0, G__4239__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 10 + cljs.core.count(self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4249 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return 1977012399 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4249(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4241, other4242) {
  var self__ = this;
  var this4241__$1 = this;
  return !(other4242 == null) && this4241__$1.constructor === other4242.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.parent, other4242.parent) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.section, other4242.section) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.start_col, other4242.start_col) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.indent, other4242.indent) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.done_nl, 
  other4242.done_nl) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.intra_block_nl, other4242.intra_block_nl) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.prefix, other4242.prefix) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.per_line_prefix, other4242.per_line_prefix) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.suffix, other4242.suffix) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.logical_block_callback, other4242.logical_block_callback) && 
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4241__$1.__extmap, other4242.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", "start-col", 
  668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4239) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4250 = cljs.core.keyword_identical_QMARK_;
  var expr__4251 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4253 = new cljs.core.Keyword(null, "parent", "parent", -878878779);
    var G__4254 = expr__4251;
    return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4253, G__4254) : pred__4250.call(null, G__4253, G__4254);
  }())) {
    return new cljs.pprint.logical_block(G__4239, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4255 = new cljs.core.Keyword(null, "section", "section", -300141526);
      var G__4256 = expr__4251;
      return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4255, G__4256) : pred__4250.call(null, G__4255, G__4256);
    }())) {
      return new cljs.pprint.logical_block(self__.parent, G__4239, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4257 = new cljs.core.Keyword(null, "start-col", "start-col", 668080143);
        var G__4258 = expr__4251;
        return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4257, G__4258) : pred__4250.call(null, G__4257, G__4258);
      }())) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__4239, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4259 = new cljs.core.Keyword(null, "indent", "indent", -148200125);
          var G__4260 = expr__4251;
          return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4259, G__4260) : pred__4250.call(null, G__4259, G__4260);
        }())) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__4239, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(function() {
            var G__4261 = new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340);
            var G__4262 = expr__4251;
            return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4261, G__4262) : pred__4250.call(null, G__4261, G__4262);
          }())) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__4239, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(function() {
              var G__4263 = new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875);
              var G__4264 = expr__4251;
              return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4263, G__4264) : pred__4250.call(null, G__4263, G__4264);
            }())) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__4239, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(function() {
                var G__4265 = new cljs.core.Keyword(null, "prefix", "prefix", -265908465);
                var G__4266 = expr__4251;
                return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4265, G__4266) : pred__4250.call(null, G__4265, G__4266);
              }())) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__4239, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(function() {
                  var G__4267 = new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813);
                  var G__4268 = expr__4251;
                  return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4267, G__4268) : pred__4250.call(null, G__4267, G__4268);
                }())) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__4239, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__4269 = new cljs.core.Keyword(null, "suffix", "suffix", 367373057);
                    var G__4270 = expr__4251;
                    return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4269, G__4270) : pred__4250.call(null, G__4269, G__4270);
                  }())) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__4239, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(function() {
                      var G__4271 = new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194);
                      var G__4272 = expr__4251;
                      return pred__4250.cljs$core$IFn$_invoke$arity$2 ? pred__4250.cljs$core$IFn$_invoke$arity$2(G__4271, G__4272) : pred__4250.call(null, G__4271, G__4272);
                    }())) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__4239, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4239), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), self__.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), self__.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), 
  self__.per_line_prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback, null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4239) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__4239, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__4243) {
  var extmap__4424__auto__ = function() {
    var G__4273 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4243, new cljs.core.Keyword(null, "parent", "parent", -878878779), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
    1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], 0));
    if (cljs.core.record_QMARK_(G__4243)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4273);
    } else {
      return G__4273;
    }
  }();
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__4243), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__4243), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__4275 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__4275;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq(l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last(l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4277, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4281 = k4277;
  var G__4281__$1 = G__4281 instanceof cljs.core.Keyword ? G__4281.fqn : null;
  switch(G__4281__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4277, else__4388__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4282) {
      var vec__4283 = p__4282;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4283, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4283, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4276) {
  var self__ = this;
  var G__4276__$1 = this;
  return new cljs.core.RecordIter(0, G__4276__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 5 + cljs.core.count(self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4286 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return 1809113693 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4286(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4278, other4279) {
  var self__ = this;
  var this4278__$1 = this;
  return !(other4279 == null) && this4278__$1.constructor === other4279.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.type_tag, other4279.type_tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.data, other4279.data) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.trailing_white_space, other4279.trailing_white_space) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.start_pos, other4279.start_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.end_pos, 
  other4279.end_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4278__$1.__extmap, other4279.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4276) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4287 = cljs.core.keyword_identical_QMARK_;
  var expr__4288 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4290 = new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267);
    var G__4291 = expr__4288;
    return pred__4287.cljs$core$IFn$_invoke$arity$2 ? pred__4287.cljs$core$IFn$_invoke$arity$2(G__4290, G__4291) : pred__4287.call(null, G__4290, G__4291);
  }())) {
    return new cljs.pprint.buffer_blob(G__4276, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4292 = new cljs.core.Keyword(null, "data", "data", -232669377);
      var G__4293 = expr__4288;
      return pred__4287.cljs$core$IFn$_invoke$arity$2 ? pred__4287.cljs$core$IFn$_invoke$arity$2(G__4292, G__4293) : pred__4287.call(null, G__4292, G__4293);
    }())) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__4276, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4294 = new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996);
        var G__4295 = expr__4288;
        return pred__4287.cljs$core$IFn$_invoke$arity$2 ? pred__4287.cljs$core$IFn$_invoke$arity$2(G__4294, G__4295) : pred__4287.call(null, G__4294, G__4295);
      }())) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__4276, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4296 = new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086);
          var G__4297 = expr__4288;
          return pred__4287.cljs$core$IFn$_invoke$arity$2 ? pred__4287.cljs$core$IFn$_invoke$arity$2(G__4296, G__4297) : pred__4287.call(null, G__4296, G__4297);
        }())) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__4276, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(function() {
            var G__4298 = new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926);
            var G__4299 = expr__4288;
            return pred__4287.cljs$core$IFn$_invoke$arity$2 ? pred__4287.cljs$core$IFn$_invoke$arity$2(G__4298, G__4299) : pred__4287.call(null, G__4298, G__4299);
          }())) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__4276, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4276), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), self__.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4276) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__4276, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__4280) {
  var extmap__4424__auto__ = function() {
    var G__4300 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4280, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], 0));
    if (cljs.core.record_QMARK_(G__4280)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4300);
    } else {
      return G__4300;
    }
  }();
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__4280), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__4280), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__4280), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__4280), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__4280), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__2694__auto__) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2694__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4303, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4307 = k4303;
  var G__4307__$1 = G__4307 instanceof cljs.core.Keyword ? G__4307.fqn : null;
  switch(G__4307__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4303, else__4388__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4308) {
      var vec__4309 = p__4308;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4309, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4309, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4302) {
  var self__ = this;
  var G__4302__$1 = this;
  return new cljs.core.RecordIter(0, G__4302__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 5 + cljs.core.count(self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4312 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return -1640656800 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4312(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4304, other4305) {
  var self__ = this;
  var this4304__$1 = this;
  return !(other4305 == null) && this4304__$1.constructor === other4305.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.type_tag, other4305.type_tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.type, other4305.type) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.logical_block, other4305.logical_block) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.start_pos, other4305.start_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.end_pos, 
  other4305.end_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4304__$1.__extmap, other4305.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4302) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4313 = cljs.core.keyword_identical_QMARK_;
  var expr__4314 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4316 = new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267);
    var G__4317 = expr__4314;
    return pred__4313.cljs$core$IFn$_invoke$arity$2 ? pred__4313.cljs$core$IFn$_invoke$arity$2(G__4316, G__4317) : pred__4313.call(null, G__4316, G__4317);
  }())) {
    return new cljs.pprint.nl_t(G__4302, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4318 = new cljs.core.Keyword(null, "type", "type", 1174270348);
      var G__4319 = expr__4314;
      return pred__4313.cljs$core$IFn$_invoke$arity$2 ? pred__4313.cljs$core$IFn$_invoke$arity$2(G__4318, G__4319) : pred__4313.call(null, G__4318, G__4319);
    }())) {
      return new cljs.pprint.nl_t(self__.type_tag, G__4302, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4320 = new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564);
        var G__4321 = expr__4314;
        return pred__4313.cljs$core$IFn$_invoke$arity$2 ? pred__4313.cljs$core$IFn$_invoke$arity$2(G__4320, G__4321) : pred__4313.call(null, G__4320, G__4321);
      }())) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__4302, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4322 = new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086);
          var G__4323 = expr__4314;
          return pred__4313.cljs$core$IFn$_invoke$arity$2 ? pred__4313.cljs$core$IFn$_invoke$arity$2(G__4322, G__4323) : pred__4313.call(null, G__4322, G__4323);
        }())) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__4302, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(function() {
            var G__4324 = new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926);
            var G__4325 = expr__4314;
            return pred__4313.cljs$core$IFn$_invoke$arity$2 ? pred__4313.cljs$core$IFn$_invoke$arity$2(G__4324, G__4325) : pred__4313.call(null, G__4324, G__4325);
          }())) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__4302, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4302), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4302) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__4302, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__4306) {
  var extmap__4424__auto__ = function() {
    var G__4326 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4306, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], 0));
    if (cljs.core.record_QMARK_(G__4306)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4326);
    } else {
      return G__4326;
    }
  }();
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__4306), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__4306), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__4306), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__4306), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(G__4306), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__2694__auto__) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2694__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4329, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4333 = k4329;
  var G__4333__$1 = G__4333 instanceof cljs.core.Keyword ? G__4333.fqn : null;
  switch(G__4333__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4329, else__4388__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4334) {
      var vec__4335 = p__4334;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4335, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4335, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4328) {
  var self__ = this;
  var G__4328__$1 = this;
  return new cljs.core.RecordIter(0, G__4328__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 4 + cljs.core.count(self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4338 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return -414877272 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4338(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4330, other4331) {
  var self__ = this;
  var this4330__$1 = this;
  return !(other4331 == null) && this4330__$1.constructor === other4331.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4330__$1.type_tag, other4331.type_tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4330__$1.logical_block, other4331.logical_block) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4330__$1.start_pos, other4331.start_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4330__$1.end_pos, other4331.end_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4330__$1.__extmap, 
  other4331.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4328) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4339 = cljs.core.keyword_identical_QMARK_;
  var expr__4340 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4342 = new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267);
    var G__4343 = expr__4340;
    return pred__4339.cljs$core$IFn$_invoke$arity$2 ? pred__4339.cljs$core$IFn$_invoke$arity$2(G__4342, G__4343) : pred__4339.call(null, G__4342, G__4343);
  }())) {
    return new cljs.pprint.start_block_t(G__4328, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4344 = new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564);
      var G__4345 = expr__4340;
      return pred__4339.cljs$core$IFn$_invoke$arity$2 ? pred__4339.cljs$core$IFn$_invoke$arity$2(G__4344, G__4345) : pred__4339.call(null, G__4344, G__4345);
    }())) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__4328, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4346 = new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086);
        var G__4347 = expr__4340;
        return pred__4339.cljs$core$IFn$_invoke$arity$2 ? pred__4339.cljs$core$IFn$_invoke$arity$2(G__4346, G__4347) : pred__4339.call(null, G__4346, G__4347);
      }())) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__4328, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4348 = new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926);
          var G__4349 = expr__4340;
          return pred__4339.cljs$core$IFn$_invoke$arity$2 ? pred__4339.cljs$core$IFn$_invoke$arity$2(G__4348, G__4349) : pred__4339.call(null, G__4348, G__4349);
        }())) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__4328, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4328), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4328) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__4328, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__4332) {
  var extmap__4424__auto__ = function() {
    var G__4350 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4332, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], 0));
    if (cljs.core.record_QMARK_(G__4332)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4350);
    } else {
      return G__4350;
    }
  }();
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__4332), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__4332), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__4332), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__4332), null, cljs.core.not_empty(extmap__4424__auto__), 
  null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__2694__auto__) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2694__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4353, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4357 = k4353;
  var G__4357__$1 = G__4357 instanceof cljs.core.Keyword ? G__4357.fqn : null;
  switch(G__4357__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4353, else__4388__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4358) {
      var vec__4359 = p__4358;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4359, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4359, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4352) {
  var self__ = this;
  var G__4352__$1 = this;
  return new cljs.core.RecordIter(0, G__4352__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 4 + cljs.core.count(self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4362 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return 1365867980 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4362(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4354, other4355) {
  var self__ = this;
  var this4354__$1 = this;
  return !(other4355 == null) && this4354__$1.constructor === other4355.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4354__$1.type_tag, other4355.type_tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4354__$1.logical_block, other4355.logical_block) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4354__$1.start_pos, other4355.start_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4354__$1.end_pos, other4355.end_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4354__$1.__extmap, 
  other4355.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4352) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4363 = cljs.core.keyword_identical_QMARK_;
  var expr__4364 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4366 = new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267);
    var G__4367 = expr__4364;
    return pred__4363.cljs$core$IFn$_invoke$arity$2 ? pred__4363.cljs$core$IFn$_invoke$arity$2(G__4366, G__4367) : pred__4363.call(null, G__4366, G__4367);
  }())) {
    return new cljs.pprint.end_block_t(G__4352, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4368 = new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564);
      var G__4369 = expr__4364;
      return pred__4363.cljs$core$IFn$_invoke$arity$2 ? pred__4363.cljs$core$IFn$_invoke$arity$2(G__4368, G__4369) : pred__4363.call(null, G__4368, G__4369);
    }())) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__4352, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4370 = new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086);
        var G__4371 = expr__4364;
        return pred__4363.cljs$core$IFn$_invoke$arity$2 ? pred__4363.cljs$core$IFn$_invoke$arity$2(G__4370, G__4371) : pred__4363.call(null, G__4370, G__4371);
      }())) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__4352, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4372 = new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926);
          var G__4373 = expr__4364;
          return pred__4363.cljs$core$IFn$_invoke$arity$2 ? pred__4363.cljs$core$IFn$_invoke$arity$2(G__4372, G__4373) : pred__4363.call(null, G__4372, G__4373);
        }())) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__4352, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4352), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4352) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__4352, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__4356) {
  var extmap__4424__auto__ = function() {
    var G__4374 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4356, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], 0));
    if (cljs.core.record_QMARK_(G__4356)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4374);
    } else {
      return G__4374;
    }
  }();
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__4356), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__4356), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__4356), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__4356), null, cljs.core.not_empty(extmap__4424__auto__), 
  null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__2694__auto__) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2694__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4377, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4381 = k4377;
  var G__4381__$1 = G__4381 instanceof cljs.core.Keyword ? G__4381.fqn : null;
  switch(G__4381__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4377, else__4388__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4382) {
      var vec__4383 = p__4382;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4383, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4383, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4376) {
  var self__ = this;
  var G__4376__$1 = this;
  return new cljs.core.RecordIter(0, G__4376__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 6 + cljs.core.count(self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4386 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return -1602780238 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4386(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4378, other4379) {
  var self__ = this;
  var this4378__$1 = this;
  return !(other4379 == null) && this4378__$1.constructor === other4379.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.type_tag, other4379.type_tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.logical_block, other4379.logical_block) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.relative_to, other4379.relative_to) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.offset, other4379.offset) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.start_pos, 
  other4379.start_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.end_pos, other4379.end_pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4378__$1.__extmap, other4379.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4376) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4387 = cljs.core.keyword_identical_QMARK_;
  var expr__4388 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4390 = new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267);
    var G__4391 = expr__4388;
    return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4390, G__4391) : pred__4387.call(null, G__4390, G__4391);
  }())) {
    return new cljs.pprint.indent_t(G__4376, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4392 = new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564);
      var G__4393 = expr__4388;
      return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4392, G__4393) : pred__4387.call(null, G__4392, G__4393);
    }())) {
      return new cljs.pprint.indent_t(self__.type_tag, G__4376, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4394 = new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051);
        var G__4395 = expr__4388;
        return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4394, G__4395) : pred__4387.call(null, G__4394, G__4395);
      }())) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__4376, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4396 = new cljs.core.Keyword(null, "offset", "offset", 296498311);
          var G__4397 = expr__4388;
          return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4396, G__4397) : pred__4387.call(null, G__4396, G__4397);
        }())) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__4376, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(function() {
            var G__4398 = new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086);
            var G__4399 = expr__4388;
            return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4398, G__4399) : pred__4387.call(null, G__4398, G__4399);
          }())) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__4376, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(function() {
              var G__4400 = new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926);
              var G__4401 = expr__4388;
              return pred__4387.cljs$core$IFn$_invoke$arity$2 ? pred__4387.cljs$core$IFn$_invoke$arity$2(G__4400, G__4401) : pred__4387.call(null, G__4400, G__4401);
            }())) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__4376, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4376), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to, 
  null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4376) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__4376, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__4380) {
  var extmap__4424__auto__ = function() {
    var G__4402 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4380, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", 
    "end-pos", -1643883926)], 0));
    if (cljs.core.record_QMARK_(G__4380)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4402);
    } else {
      return G__4402;
    }
  }();
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__4380), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__4380), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__4380), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__4380), (new cljs.core.Keyword(null, "start-pos", 
  "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__4380), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__4380), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__2694__auto__) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__2694__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), function() {
      var fexpr__4406 = cljs.core.get_global_hierarchy;
      return fexpr__4406.cljs$core$IFn$_invoke$arity$0 ? fexpr__4406.cljs$core$IFn$_invoke$arity$0() : fexpr__4406.call(null);
    }());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.pprint", "write-token"), function(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__) {
      return function(p1__4405_SHARP_, p2__4404_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__4404_SHARP_);
      };
    }(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__5720__auto___4408 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  if (cljs.core.truth_(temp__5720__auto___4408)) {
    var cb_4409 = temp__5720__auto___4408;
    var G__4407_4410 = new cljs.core.Keyword(null, "start", "start", -355208981);
    cb_4409.cljs$core$IFn$_invoke$arity$1 ? cb_4409.cljs$core$IFn$_invoke$arity$1(G__4407_4410) : cb_4409.call(null, G__4407_4410);
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__5720__auto___4411 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__5720__auto___4411)) {
    var prefix_4412 = temp__5720__auto___4411;
    cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), prefix_4412);
  } else {
  }
  var col = cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
  cljs.core.reset_BANG_((new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_((new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__5720__auto___4414 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  if (cljs.core.truth_(temp__5720__auto___4414)) {
    var cb_4415 = temp__5720__auto___4414;
    var G__4413_4416 = new cljs.core.Keyword(null, "end", "end", -268185958);
    cb_4415.cljs$core$IFn$_invoke$arity$1 ? cb_4415.cljs$core$IFn$_invoke$arity$1(G__4413_4416) : cb_4415.call(null, G__4413_4416);
  } else {
  }
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__5720__auto__)) {
    var suffix = temp__5720__auto__;
    return cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), suffix);
  } else {
    return null;
  }
});
cljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_((new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__4417 = cljs.core._EQ_;
    var expr__4418 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(function() {
      var G__4420 = new cljs.core.Keyword(null, "block", "block", 664686210);
      var G__4421 = expr__4418;
      return pred__4417.cljs$core$IFn$_invoke$arity$2 ? pred__4417.cljs$core$IFn$_invoke$arity$2(G__4420, G__4421) : pred__4417.call(null, G__4420, G__4421);
    }())) {
      return cljs.core.deref((new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(function() {
        var G__4422 = new cljs.core.Keyword(null, "current", "current", -1088038603);
        var G__4423 = expr__4418;
        return pred__4417.cljs$core$IFn$_invoke$arity$2 ? pred__4417.cljs$core$IFn$_invoke$arity$2(G__4422, G__4423) : pred__4417.call(null, G__4422, G__4423);
      }())) {
        return cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4418)].join(""));
      }
    }
  }());
});
cljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      var and__4120__auto__ = !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__4120__auto__) {
        return cljs.core.deref((new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__4120__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2(this$, token) : cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__5718__auto___4424 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    if (cljs.core.truth_(temp__5718__auto___4424)) {
      var tws_4425 = temp__5718__auto___4424;
      cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws_4425);
    } else {
    }
  }
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__4426 = cljs.core.seq(tokens);
  var chunk__4427 = null;
  var count__4428 = 0;
  var i__4429 = 0;
  while (true) {
    if (i__4429 < count__4428) {
      var token = chunk__4427.cljs$core$IIndexed$_nth$arity$2(null, i__4429);
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__5718__auto___4430 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
        if (cljs.core.truth_(temp__5718__auto___4430)) {
          var tws_4431 = temp__5718__auto___4430;
          cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws_4431);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$, token) : cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_4432 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4120__auto__)) {
          return tws_4432;
        } else {
          return and__4120__auto__;
        }
      }())) {
        cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws_4432);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__4433 = seq__4426;
      var G__4434 = chunk__4427;
      var G__4435 = count__4428;
      var G__4436 = i__4429 + 1;
      seq__4426 = G__4433;
      chunk__4427 = G__4434;
      count__4428 = G__4435;
      i__4429 = G__4436;
      continue;
    } else {
      var temp__5720__auto__ = cljs.core.seq(seq__4426);
      if (temp__5720__auto__) {
        var seq__4426__$1 = temp__5720__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__4426__$1)) {
          var c__4550__auto__ = cljs.core.chunk_first(seq__4426__$1);
          var G__4437 = cljs.core.chunk_rest(seq__4426__$1);
          var G__4438 = c__4550__auto__;
          var G__4439 = cljs.core.count(c__4550__auto__);
          var G__4440 = 0;
          seq__4426 = G__4437;
          chunk__4427 = G__4438;
          count__4428 = G__4439;
          i__4429 = G__4440;
          continue;
        } else {
          var token = cljs.core.first(seq__4426__$1);
          if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__5718__auto___4441 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
            if (cljs.core.truth_(temp__5718__auto___4441)) {
              var tws_4442 = temp__5718__auto___4441;
              cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws_4442);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$, token) : cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_4443 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
          if (cljs.core.truth_(function() {
            var and__4120__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4120__auto__)) {
              return tws_4443;
            } else {
              return and__4120__auto__;
            }
          }())) {
            cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws_4443);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__4444 = cljs.core.next(seq__4426__$1);
          var G__4445 = null;
          var G__4446 = 0;
          var G__4447 = 0;
          seq__4426 = G__4444;
          chunk__4427 = G__4445;
          count__4428 = G__4446;
          i__4429 = G__4447;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
  return maxcol == null || cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))) + cljs.pprint.buffer_length(tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4131__auto__ = cljs.core.deref((new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return !cljs.pprint.tokens_fit_QMARK_(this$, section);
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width(this$);
  var maxcol = cljs.pprint.get_max_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
  var and__4120__auto__ = miser_width;
  if (cljs.core.truth_(and__4120__auto__)) {
    var and__4120__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4120__auto____$1)) {
      var and__4120__auto____$2 = cljs.core.deref((new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__4120__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_(this$, lb, section);
      } else {
        return and__4120__auto____$2;
      }
    } else {
      return and__4120__auto____$1;
    }
  } else {
    return and__4120__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), function() {
      var fexpr__4448 = cljs.core.get_global_hierarchy;
      return fexpr__4448.cljs$core$IFn$_invoke$arity$0 ? fexpr__4448.cljs$core$IFn$_invoke$arity$0() : fexpr__4448.call(null);
    }());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.pprint", "emit-nl?"), function(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_(this$, lb, section);
});
cljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_(this$, lb, section);
});
cljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4131__auto__ = cljs.core.deref((new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = !cljs.pprint.tokens_fit_QMARK_(this$, subsection);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_(this$, lb, section);
    }
  }
});
cljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first(buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(nl, lb) {
    return function(p1__4449_SHARP_) {
      return !(cljs.pprint.nl_t_QMARK_(p1__4449_SHARP_) && cljs.pprint.ancestor_QMARK_((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__4449_SHARP_), lb));
    };
  }(nl, lb), cljs.core.next(buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first(buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(nl, lb) {
    return function(p1__4450_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__4450_SHARP_);
      return !(cljs.pprint.nl_t_QMARK_(p1__4450_SHARP_) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nl_lb, lb) || cljs.pprint.ancestor_QMARK_(nl_lb, lb)));
    };
  }(nl, lb), cljs.core.next(buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_((new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_((new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_((new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_((new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__4451 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__4451;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), cljs.pprint.pp_newline());
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), prefix);
  } else {
  }
  var istr_4452 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.deref((new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count(prefix), " "));
  cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), istr_4452);
  return cljs.pprint.update_nl_state(lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__4453_SHARP_) {
    return !cljs.pprint.nl_t_QMARK_(p1__4453_SHARP_);
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__4454 = cljs.pprint.split_at_newline(tokens);
  var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4454, 0, null);
  var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4454, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens(this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__4457 = cljs.pprint.get_section(b);
    var section = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4457, 0, null);
    var remainder = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4457, 1, null);
    var newl = cljs.core.first(b);
    var do_nl = function() {
      var G__4460 = newl;
      var G__4461 = this$;
      var G__4462 = section;
      var G__4463 = cljs.pprint.get_sub_section(b);
      return cljs.pprint.emit_nl_QMARK_.cljs$core$IFn$_invoke$arity$4 ? cljs.pprint.emit_nl_QMARK_.cljs$core$IFn$_invoke$arity$4(G__4460, G__4461, G__4462, G__4463) : cljs.pprint.emit_nl_QMARK_.call(null, G__4460, G__4461, G__4462, G__4463);
    }();
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl(this$, newl);
      return cljs.core.next(b);
    }() : b;
    var long_section = !cljs.pprint.tokens_fit_QMARK_(this$, result);
    var result__$1 = long_section ? function() {
      var rem2 = cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2(this$, section) : cljs.pprint.write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rem2, section)) {
        cljs.pprint.write_tokens(this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  while (true) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, buffer));
    if (!cljs.pprint.tokens_fit_QMARK_(this$, buffer)) {
      var new_buffer = cljs.pprint.write_token_string(this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__4464 = new_buffer;
        buffer = G__4464;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), token));
  if (!cljs.pprint.tokens_fit_QMARK_(this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))) {
    return cljs.pprint.write_line(this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line(this$);
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var buf = temp__5718__auto__;
    cljs.pprint.write_tokens(this$, buf, true);
    return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__5720__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  if (cljs.core.truth_(temp__5720__auto__)) {
    var tws = temp__5720__auto__;
    cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), tws);
    return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.cljs$core$IFn$_invoke$arity$3(s, "\n", -1);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))));
    var l = cljs.core.first(lines);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))) {
      var oldpos_4469 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
      var newpos_4470 = oldpos_4469 + cljs.core.count(l);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_4470);
      cljs.pprint.add_to_buffer(this$, cljs.pprint.make_buffer_blob(l, null, oldpos_4469, newpos_4470));
      cljs.pprint.write_buffered_output(this$);
    } else {
      cljs.pprint.write_white_space(this$);
      cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), l);
    }
    cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), "\n");
    var seq__4465_4471 = cljs.core.seq(cljs.core.next(cljs.core.butlast(lines)));
    var chunk__4466_4472 = null;
    var count__4467_4473 = 0;
    var i__4468_4474 = 0;
    while (true) {
      if (i__4468_4474 < count__4467_4473) {
        var l_4475__$1 = chunk__4466_4472.cljs$core$IIndexed$_nth$arity$2(null, i__4468_4474);
        cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), l_4475__$1);
        cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), cljs.pprint.pp_newline());
        if (cljs.core.truth_(prefix)) {
          cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), prefix);
        } else {
        }
        var G__4476 = seq__4465_4471;
        var G__4477 = chunk__4466_4472;
        var G__4478 = count__4467_4473;
        var G__4479 = i__4468_4474 + 1;
        seq__4465_4471 = G__4476;
        chunk__4466_4472 = G__4477;
        count__4467_4473 = G__4478;
        i__4468_4474 = G__4479;
        continue;
      } else {
        var temp__5720__auto___4480 = cljs.core.seq(seq__4465_4471);
        if (temp__5720__auto___4480) {
          var seq__4465_4481__$1 = temp__5720__auto___4480;
          if (cljs.core.chunked_seq_QMARK_(seq__4465_4481__$1)) {
            var c__4550__auto___4482 = cljs.core.chunk_first(seq__4465_4481__$1);
            var G__4483 = cljs.core.chunk_rest(seq__4465_4481__$1);
            var G__4484 = c__4550__auto___4482;
            var G__4485 = cljs.core.count(c__4550__auto___4482);
            var G__4486 = 0;
            seq__4465_4471 = G__4483;
            chunk__4466_4472 = G__4484;
            count__4467_4473 = G__4485;
            i__4468_4474 = G__4486;
            continue;
          } else {
            var l_4487__$1 = cljs.core.first(seq__4465_4481__$1);
            cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), l_4487__$1);
            cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), cljs.pprint.pp_newline());
            if (cljs.core.truth_(prefix)) {
              cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), prefix);
            } else {
            }
            var G__4488 = cljs.core.next(seq__4465_4481__$1);
            var G__4489 = null;
            var G__4490 = 0;
            var G__4491 = 0;
            seq__4465_4471 = G__4488;
            chunk__4466_4472 = G__4489;
            count__4467_4473 = G__4490;
            i__4468_4474 = G__4491;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last(lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space(this$);
    return cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), c);
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c, "\n")) {
      return cljs.pprint.write_initial_lines(this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer(this$, cljs.pprint.make_buffer_blob(cljs.core.char$(c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 
  654403691), new cljs.core.Keyword(null, "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer, 
  max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4492 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4492 = function(writer, max_columns, miser_width, lb, fields, meta4493) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta4493 = meta4493;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_4494, meta4493__$1) {
        var self__ = this;
        var _4494__$1 = this;
        return new cljs.pprint.t_cljs$pprint4492(self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta4493__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_4494) {
        var self__ = this;
        var _4494__$1 = this;
        return self__.meta4493;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__4495 = cljs.core._EQ_;
        var expr__4496 = cljs.core.type(x);
        if (cljs.core.truth_(pred__4495.cljs$core$IFn$_invoke$arity$2 ? pred__4495.cljs$core$IFn$_invoke$arity$2(String, expr__4496) : pred__4495.call(null, String, expr__4496))) {
          var s0 = cljs.pprint.write_initial_lines(this$__$1, x);
          var s = clojure.string.replace_first(s0, /\s+$/, "");
          var white_space = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s0, cljs.core.count(s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space(this$__$1);
            cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))), s);
            return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));
            var newpos = oldpos + cljs.core.count(s0);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer(this$__$1, cljs.pprint.make_buffer_blob(s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__4495.cljs$core$IFn$_invoke$arity$2 ? pred__4495.cljs$core$IFn$_invoke$arity$2(Number, expr__4496) : pred__4495.call(null, Number, expr__4496))) {
            return cljs.pprint.p_write_char(this$__$1, x);
          } else {
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4496)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        this$__$1.cljs$pprint$IPrettyFlush$_ppflush$arity$1(null);
        return cljs.core._flush((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.pprint.t_cljs$pprint4492.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens(this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))), true);
          return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space(this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta4493", "meta4493", -218048283, 
        null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint4492.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4492.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4492";
    cljs.pprint.t_cljs$pprint4492.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4492");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint4492 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint4492(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta4493) {
        return new cljs.pprint.t_cljs$pprint4492(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta4493);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint4492(writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), null, cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false), cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space(this$);
    var temp__5720__auto___4499 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    if (cljs.core.truth_(temp__5720__auto___4499)) {
      var cb_4500 = temp__5720__auto___4499;
      var G__4498_4501 = new cljs.core.Keyword(null, "start", "start", -355208981);
      cb_4500.cljs$core$IFn$_invoke$arity$1 ? cb_4500.cljs$core$IFn$_invoke$arity$1(G__4498_4501) : cb_4500.call(null, G__4498_4501);
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
    cljs.core.reset_BANG_((new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_((new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count(prefix) : 0);
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer(this$, cljs.pprint.make_start_block_t(lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space(this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), suffix);
    } else {
    }
    var temp__5720__auto___4503 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    if (cljs.core.truth_(temp__5720__auto___4503)) {
      var cb_4504 = temp__5720__auto___4503;
      var G__4502_4505 = new cljs.core.Keyword(null, "end", "end", -268185958);
      cb_4504.cljs$core$IFn$_invoke$arity$1 ? cb_4504.cljs$core$IFn$_invoke$arity$1(G__4502_4505) : cb_4504.call(null, G__4502_4505);
    } else {
    }
  } else {
    var oldpos_4506 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    var newpos_4507 = oldpos_4506 + (cljs.core.truth_(suffix) ? cljs.core.count(suffix) : 0);
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_4507);
    cljs.pprint.add_to_buffer(this$, cljs.pprint.make_end_block_t(lb, oldpos_4506, newpos_4507));
  }
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  return cljs.pprint.add_to_buffer(this$, cljs.pprint.make_nl_t(type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space(this$);
    return cljs.core.reset_BANG_((new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__4508 = cljs.core._EQ_;
      var expr__4509 = relative_to;
      if (cljs.core.truth_(function() {
        var G__4511 = new cljs.core.Keyword(null, "block", "block", 664686210);
        var G__4512 = expr__4509;
        return pred__4508.cljs$core$IFn$_invoke$arity$2 ? pred__4508.cljs$core$IFn$_invoke$arity$2(G__4511, G__4512) : pred__4508.call(null, G__4511, G__4512);
      }())) {
        return cljs.core.deref((new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(function() {
          var G__4513 = new cljs.core.Keyword(null, "current", "current", -1088038603);
          var G__4514 = expr__4509;
          return pred__4508.cljs$core$IFn$_invoke$arity$2 ? pred__4508.cljs$core$IFn$_invoke$arity$2(G__4513, G__4514) : pred__4508.call(null, G__4513, G__4514);
        }())) {
          return cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4509)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
    return cljs.pprint.add_to_buffer(this$, cljs.pprint.make_indent_t(lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(p1__4515_SHARP_) {
    var temp__5720__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(t, cljs.core.key(p1__4515_SHARP_));
    if (cljs.core.truth_(temp__5720__auto__)) {
      var v = temp__5720__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val(p1__4515_SHARP_)], null);
    } else {
      return null;
    }
  }, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0)));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__4120__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, x);
  if (and__4120__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(x)));
  } else {
    return and__4120__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer(base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4120__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4120__auto__)) {
      var and__4120__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }();
  if (!cljs.pprint._STAR_print_pretty_STAR_) {
    cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1(object) : cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$core$IFn$_invoke$arity$1(object) : cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4548 = arguments.length;
  var i__4731__auto___4549 = 0;
  while (true) {
    if (i__4731__auto___4549 < len__4730__auto___4548) {
      args__4736__auto__.push(arguments[i__4731__auto___4549]);
      var G__4550 = i__4731__auto___4549 + 1;
      i__4731__auto___4549 = G__4550;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 1 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4737__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, kw_args)], 0));
  var _STAR_print_base_STAR__orig_val__4520 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR__orig_val__4521 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR__orig_val__4522 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR__orig_val__4523 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR__orig_val__4524 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR__orig_val__4525 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR__orig_val__4526 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR__orig_val__4527 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR__orig_val__4528 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR__orig_val__4529 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR__orig_val__4530 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR__orig_val__4531 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  var _STAR_print_base_STAR__temp_val__4532 = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  var _STAR_print_circle_STAR__temp_val__4533 = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  var _STAR_print_length_STAR__temp_val__4534 = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  var _STAR_print_level_STAR__temp_val__4535 = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  var _STAR_print_lines_STAR__temp_val__4536 = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  var _STAR_print_miser_width_STAR__temp_val__4537 = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  var _STAR_print_pprint_dispatch_STAR__temp_val__4538 = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  var _STAR_print_pretty_STAR__temp_val__4539 = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  var _STAR_print_radix_STAR__temp_val__4540 = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  var _STAR_print_readably_STAR__temp_val__4541 = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  var _STAR_print_right_margin_STAR__temp_val__4542 = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  var _STAR_print_suppress_namespaces_STAR__temp_val__4543 = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__temp_val__4532;
  cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__temp_val__4533;
  cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__temp_val__4534;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__4535;
  cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__temp_val__4536;
  cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__temp_val__4537;
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__temp_val__4538;
  cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__4539;
  cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__temp_val__4540;
  cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__4541;
  cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__temp_val__4542;
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__temp_val__4543;
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_(options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.pprint._STAR_print_pretty_STAR_) {
        var base_writer__2677__auto___4551 = base_writer;
        var new_writer__2678__auto___4552 = cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__2677__auto___4551));
        var _STAR_out_STAR__orig_val__4544_4553 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__4545_4554 = new_writer__2678__auto___4552 ? cljs.pprint.make_pretty_writer(base_writer__2677__auto___4551, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__2677__auto___4551;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4545_4554;
        try {
          cljs.pprint.write_out(object);
          cljs.pprint._ppflush(cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4544_4553;
        }
      } else {
        var _STAR_out_STAR__orig_val__4546_4555 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__4547_4556 = base_writer;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4547_4556;
        try {
          cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1(object) : cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4546_4555;
        }
      }
      if (optval === true) {
        cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
      }
      if (optval == null) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__orig_val__4531;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__orig_val__4530;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__4529;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__orig_val__4528;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__4527;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__orig_val__4526;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__orig_val__4525;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__orig_val__4524;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__4523;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__orig_val__4522;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__orig_val__4521;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__orig_val__4520;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq4518) {
  var G__4519 = cljs.core.first(seq4518);
  var seq4518__$1 = cljs.core.next(seq4518);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4519, seq4518__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var G__4558 = arguments.length;
  switch(G__4558) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR__orig_val__4559 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__4560 = new cljs.core.StringBufferWriter(sb);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4560;
  try {
    cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(object, cljs.core._STAR_out_STAR_);
    return cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4559;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__2677__auto__ = writer;
  var new_writer__2678__auto__ = cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__2677__auto__));
  var _STAR_out_STAR__orig_val__4561 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__4562 = new_writer__2678__auto__ ? cljs.pprint.make_pretty_writer(base_writer__2677__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__2677__auto__;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4562;
  try {
    var _STAR_print_pretty_STAR__orig_val__4563_4566 = cljs.pprint._STAR_print_pretty_STAR_;
    var _STAR_print_pretty_STAR__temp_val__4564_4567 = true;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__4564_4567;
    try {
      cljs.pprint.write_out(object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__4563_4566;
    }
    if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, cljs.pprint.get_column(cljs.core._STAR_out_STAR_))) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush(cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4561;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not(choices.cljs$core$IFn$_invoke$arity$1 ? choices.cljs$core$IFn$_invoke$arity$1(arg) : choices.call(null, arg))) {
    throw new Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4120__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4120__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4120__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg(kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl(cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg(relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent(cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg(kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___4571 = arguments.length;
  var i__4731__auto___4572 = 0;
  while (true) {
    if (i__4731__auto___4572 < len__4730__auto___4571) {
      args__4736__auto__.push(arguments[i__4731__auto___4572]);
      var G__4573 = i__4731__auto___4572 + 1;
      i__4731__auto___4572 = G__4573;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format(format_in) : format_in;
  var navigator = cljs.pprint.init_navigator(args);
  return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq4568) {
  var G__4569 = cljs.core.first(seq4568);
  var seq4568__$1 = cljs.core.next(seq4568);
  var G__4570 = cljs.core.first(seq4568__$1);
  var seq4568__$2 = cljs.core.next(seq4568__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__4569, G__4570, seq4568__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message), "\n", cljs.pprint._STAR_format_str_STAR_, "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(offset, " "))), "^", "\n"].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4575, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4579 = k4575;
  var G__4579__$1 = G__4579 instanceof cljs.core.Keyword ? G__4579.fqn : null;
  switch(G__4579__$1) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4575, else__4388__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4580) {
      var vec__4581 = p__4580;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4581, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4581, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4574) {
  var self__ = this;
  var G__4574__$1 = this;
  return new cljs.core.RecordIter(0, G__4574__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 3 + cljs.core.count(self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4584 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return -402038447 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4584(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4576, other4577) {
  var self__ = this;
  var this4576__$1 = this;
  return !(other4577 == null) && this4576__$1.constructor === other4577.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4576__$1.seq, other4577.seq) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4576__$1.rest, other4577.rest) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4576__$1.pos, other4577.pos) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4576__$1.__extmap, other4577.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4574) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4585 = cljs.core.keyword_identical_QMARK_;
  var expr__4586 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4588 = new cljs.core.Keyword(null, "seq", "seq", -1817803783);
    var G__4589 = expr__4586;
    return pred__4585.cljs$core$IFn$_invoke$arity$2 ? pred__4585.cljs$core$IFn$_invoke$arity$2(G__4588, G__4589) : pred__4585.call(null, G__4588, G__4589);
  }())) {
    return new cljs.pprint.arg_navigator(G__4574, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4590 = new cljs.core.Keyword(null, "rest", "rest", -1241696419);
      var G__4591 = expr__4586;
      return pred__4585.cljs$core$IFn$_invoke$arity$2 ? pred__4585.cljs$core$IFn$_invoke$arity$2(G__4590, G__4591) : pred__4585.call(null, G__4590, G__4591);
    }())) {
      return new cljs.pprint.arg_navigator(self__.seq, G__4574, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4592 = new cljs.core.Keyword(null, "pos", "pos", -864607220);
        var G__4593 = expr__4586;
        return pred__4585.cljs$core$IFn$_invoke$arity$2 ? pred__4585.cljs$core$IFn$_invoke$arity$2(G__4592, G__4593) : pred__4585.call(null, G__4592, G__4593);
      }())) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__4574, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4574), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos, null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4574) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__4574, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__4578) {
  var extmap__4424__auto__ = function() {
    var G__4594 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4578, new cljs.core.Keyword(null, "seq", "seq", -1817803783), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], 0));
    if (cljs.core.record_QMARK_(G__4578)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4594);
    } else {
      return G__4594;
    }
  }();
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__4578), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__4578), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__4578), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq(s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next(rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next(rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__4596 = cljs.pprint.next_arg(navigator);
  var raw_format = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4596, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4596, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format(raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    var G__4599 = navigator;
    var G__4600 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position;
    return cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2(G__4599, G__4600) : cljs.pprint.relative_reposition.call(null, G__4599, G__4600);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition(navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4385__auto__, k__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  return this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4386__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4387__auto__, k4602, else__4388__auto__) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var G__4606 = k4602;
  var G__4606__$1 = G__4606 instanceof cljs.core.Keyword ? G__4606.fqn : null;
  switch(G__4606__$1) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k4602, else__4388__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4404__auto__, f__4405__auto__, init__4406__auto__) {
  var self__ = this;
  var this__4404__auto____$1 = this;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(this__4404__auto____$1) {
    return function(ret__4407__auto__, p__4607) {
      var vec__4608 = p__4607;
      var k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4608, 0, null);
      var v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4608, 1, null);
      return f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__, k__4408__auto__, v__4409__auto__) : f__4405__auto__.call(null, ret__4407__auto__, k__4408__auto__, v__4409__auto__);
    };
  }(this__4404__auto____$1), init__4406__auto__, this__4404__auto____$1);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4399__auto__, writer__4400__auto__, opts__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  var pr_pair__4402__auto__ = function(this__4399__auto____$1) {
    return function(keyval__4403__auto__) {
      return cljs.core.pr_sequential_writer(writer__4400__auto__, cljs.core.pr_writer, "", " ", "", opts__4401__auto__, keyval__4403__auto__);
    };
  }(this__4399__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4400__auto__, pr_pair__4402__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__4401__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__4601) {
  var self__ = this;
  var G__4601__$1 = this;
  return new cljs.core.RecordIter(0, G__4601__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator(self__.__extmap) : cljs.core.nil_iter());
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4383__auto__) {
  var self__ = this;
  var this__4383__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4380__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4389__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  return 4 + cljs.core.count(self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4381__auto__) {
  var self__ = this;
  var this__4381__auto____$1 = this;
  var h__4243__auto__ = self__.__hash;
  if (!(h__4243__auto__ == null)) {
    return h__4243__auto__;
  } else {
    var h__4243__auto____$1 = function() {
      var fexpr__4611 = function(h__4243__auto__, this__4381__auto____$1) {
        return function(coll__4382__auto__) {
          return -829256337 ^ cljs.core.hash_unordered_coll(coll__4382__auto__);
        };
      }(h__4243__auto__, this__4381__auto____$1);
      return fexpr__4611(this__4381__auto____$1);
    }();
    self__.__hash = h__4243__auto____$1;
    return h__4243__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this4603, other4604) {
  var self__ = this;
  var this4603__$1 = this;
  return !(other4604 == null) && this4603__$1.constructor === other4604.constructor && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4603__$1.func, other4604.func) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4603__$1.def, other4604.def) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4603__$1.params, other4604.params) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4603__$1.offset, other4604.offset) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this4603__$1.__extmap, other4604.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4394__auto__, k__4395__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__4395__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4394__auto____$1), self__.__meta), k__4395__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4395__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4392__auto__, k__4393__auto__, G__4601) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  var pred__4612 = cljs.core.keyword_identical_QMARK_;
  var expr__4613 = k__4393__auto__;
  if (cljs.core.truth_(function() {
    var G__4615 = new cljs.core.Keyword(null, "func", "func", -238706040);
    var G__4616 = expr__4613;
    return pred__4612.cljs$core$IFn$_invoke$arity$2 ? pred__4612.cljs$core$IFn$_invoke$arity$2(G__4615, G__4616) : pred__4612.call(null, G__4615, G__4616);
  }())) {
    return new cljs.pprint.compiled_directive(G__4601, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(function() {
      var G__4617 = new cljs.core.Keyword(null, "def", "def", -1043430536);
      var G__4618 = expr__4613;
      return pred__4612.cljs$core$IFn$_invoke$arity$2 ? pred__4612.cljs$core$IFn$_invoke$arity$2(G__4617, G__4618) : pred__4612.call(null, G__4617, G__4618);
    }())) {
      return new cljs.pprint.compiled_directive(self__.func, G__4601, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(function() {
        var G__4619 = new cljs.core.Keyword(null, "params", "params", 710516235);
        var G__4620 = expr__4613;
        return pred__4612.cljs$core$IFn$_invoke$arity$2 ? pred__4612.cljs$core$IFn$_invoke$arity$2(G__4619, G__4620) : pred__4612.call(null, G__4619, G__4620);
      }())) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__4601, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(function() {
          var G__4621 = new cljs.core.Keyword(null, "offset", "offset", 296498311);
          var G__4622 = expr__4613;
          return pred__4612.cljs$core$IFn$_invoke$arity$2 ? pred__4612.cljs$core$IFn$_invoke$arity$2(G__4621, G__4622) : pred__4612.call(null, G__4621, G__4622);
        }())) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__4601, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4393__auto__, G__4601), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4397__auto__) {
  var self__ = this;
  var this__4397__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), self__.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), self__.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "offset", "offset", 296498311), self__.offset, null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4384__auto__, G__4601) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__4601, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4390__auto__, entry__4391__auto__) {
  var self__ = this;
  var this__4390__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4391__auto__)) {
    return this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4390__auto____$1, entry__4391__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__4428__auto__) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__) {
  return cljs.core._write(writer__4429__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__4605) {
  var extmap__4424__auto__ = function() {
    var G__4623 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__4605, new cljs.core.Keyword(null, "func", "func", -238706040), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], 0));
    if (cljs.core.record_QMARK_(G__4605)) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, G__4623);
    } else {
      return G__4623;
    }
  }();
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__4605), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__4605), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__4605), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__4605), null, cljs.core.not_empty(extmap__4424__auto__), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__4625, navigator) {
  var vec__4626 = p__4625;
  var param = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4626, 0, null);
  var vec__4629 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4626, 1, null);
  var raw_val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4629, 0, null);
  var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4629, 1, null);
  var vec__4632 = cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg(navigator) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, 
  navigator], null);
  var real_param = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4632, 0, null);
  var new_navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4632, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__4635 = cljs.pprint.map_passing_context(cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4635, 0, null);
  var new_navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4635, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_(n)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null].join("");
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4131__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
        }
      }() : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str(cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__4638 = cljs.pprint.next_arg(arg_navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4638, 0, null);
  var arg_navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4638, 1, null);
  var base_output = function() {
    var or__4131__auto__ = cljs.pprint.format_simple_number(arg);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return print_func.cljs$core$IFn$_invoke$arity$1 ? print_func.cljs$core$IFn$_invoke$arity$1(arg) : print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot((new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars), cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join("")], 0));
  } else {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output), cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join("")], 0));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_(x)) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse(cljs.core.first(cljs.pprint.consume(function(p1__4641_SHARP_) {
    if (p1__4641_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem(p1__4641_SHARP_, base), cljs.core.quot(p1__4641_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xlated_val) {
      return function(p1__4642_SHARP_) {
        if (p1__4642_SHARP_ < 10) {
          return cljs.core.char$(cljs.pprint.char_code("0") + p1__4642_SHARP_);
        } else {
          return cljs.core.char$(cljs.pprint.char_code("a") + (p1__4642_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders(base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str(base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse(cljs.core.first(cljs.pprint.consume(function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq(cljs.core.reverse(cljs.core.take.cljs$core$IFn$_invoke$arity$2(unit, x))), cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(unit, x))], null);
  }, cljs.core.reverse(lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__4644 = cljs.pprint.next_arg(arg_navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4644, 0, null);
  var arg_navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4644, 1, null);
  if (cljs.pprint.integral_QMARK_(arg)) {
    var neg_4647 = arg < 0;
    var pos_arg_4648 = neg_4647 ? -arg : arg;
    var raw_str_4649 = cljs.pprint.opt_base_str(base, pos_arg_4648);
    var group_str_4650 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(neg_4647, pos_arg_4648, raw_str_4649, vec__4644, arg, arg_navigator__$1) {
        return function(p1__4643_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, p1__4643_SHARP_);
        };
      }(neg_4647, pos_arg_4648, raw_str_4649, vec__4644, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_((new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_4649));
      var commas = cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.next(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(commas, groups)));
    }() : raw_str_4649;
    var signed_str_4651 = neg_4647 ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_4650)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_4650)].join("") : group_str_4650;
    var padded_str_4652 = signed_str_4651.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_4651.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), 
    cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_4651)].join("") : signed_str_4651;
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([padded_str_4652], 0));
  } else {
    cljs.pprint.format_ascii(cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), 
    new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot(num, 100);
  var tens = cljs.core.rem(num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot(tens, 10);
    var unit_digit = cljs.core.rem(tens, 10);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count(parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first(parts);
  var remainder = cljs.core.next(parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(", ", acc))), !cljs.core.empty_QMARK_(this$) && !cljs.core.empty_QMARK_(acc) ? ", " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), !cljs.core.empty_QMARK_(this$) && pos + offset > 0 ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers, pos + 
      offset))].join("") : null].join("");
    } else {
      var G__4653 = cljs.core.empty_QMARK_(this$) ? acc : cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__4654 = pos - 1;
      var G__4655 = cljs.core.first(remainder);
      var G__4656 = cljs.core.next(remainder);
      acc = G__4653;
      pos = G__4654;
      this$ = G__4655;
      remainder = G__4656;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__4657 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4657, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4657, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, arg)) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["zero"], 0));
  } else {
    var abs_arg_4660 = arg < 0 ? -arg : arg;
    var parts_4661 = cljs.pprint.remainders(1000, abs_arg_4660);
    if (cljs.core.count(parts_4661) <= cljs.core.count(cljs.pprint.english_scale_numbers)) {
      var parts_strs_4662 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal, parts_4661);
      var full_str_4663 = cljs.pprint.add_english_scales(parts_strs_4662, 0);
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[arg < 0 ? "minus " : null, full_str_4663].join("")], 0));
    } else {
      cljs.pprint.format_integer(10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot(num, 100);
  var tens = cljs.core.rem(num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot(tens, 10);
    var unit_digit = cljs.core.rem(tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__4664 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4664, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4664, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, arg)) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["zeroth"], 0));
  } else {
    var abs_arg_4667 = arg < 0 ? -arg : arg;
    var parts_4668 = cljs.pprint.remainders(1000, abs_arg_4667);
    if (cljs.core.count(parts_4668) <= cljs.core.count(cljs.pprint.english_scale_numbers)) {
      var parts_strs_4669 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal, cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(parts_4668));
      var head_str_4670 = cljs.pprint.add_english_scales(parts_strs_4669, 1);
      var tail_str_4671 = cljs.pprint.format_simple_ordinal(cljs.core.last(parts_4668));
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[arg < 0 ? "minus " : null, !cljs.core.empty_QMARK_(head_str_4670) && !cljs.core.empty_QMARK_(tail_str_4671) ? [head_str_4670, ", ", tail_str_4671].join("") : !cljs.core.empty_QMARK_(head_str_4670) ? [head_str_4670, "th"].join("") : tail_str_4671].join("")], 0));
    } else {
      cljs.pprint.format_integer(10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_4672 = cljs.core.rem(arg, 100);
      var not_teens_4673 = 11 < low_two_digits_4672 || 19 > low_two_digits_4672;
      var low_digit_4674 = cljs.core.rem(low_two_digits_4672, 10);
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([low_digit_4674 === 1 && not_teens_4673 ? "st" : low_digit_4674 === 2 && not_teens_4673 ? "nd" : low_digit_4674 === 3 && not_teens_4673 ? "rd" : "th"], 0));
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__4675 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4675, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4675, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4000) {
    var digits_4678 = cljs.pprint.remainders(10, arg);
    var acc_4679 = cljs.core.PersistentVector.EMPTY;
    var pos_4680 = cljs.core.count(digits_4678) - 1;
    var digits_4681__$1 = digits_4678;
    while (true) {
      if (cljs.core.empty_QMARK_(digits_4681__$1)) {
        cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, acc_4679)], 0));
      } else {
        var digit_4682 = cljs.core.first(digits_4681__$1);
        var G__4683 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, digit_4682) ? acc_4679 : cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc_4679, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(table, pos_4680), digit_4682 - 1));
        var G__4684 = pos_4680 - 1;
        var G__4685 = cljs.core.next(digits_4681__$1);
        acc_4679 = G__4683;
        pos_4680 = G__4684;
        digits_4681__$1 = G__4685;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer(10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman(cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman(cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__4686 = cljs.pprint.next_arg(navigator);
  var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4686, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4686, 1, null);
  var as_int = cljs.pprint.char_code(c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Meta-"], 0));
  } else {
  }
  cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.truth_(special) ? special : base_char < 32 ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$(base_char + 64))].join("") : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(base_char, 127) ? "Control-?" : cljs.core.char$(base_char)], 0));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__4689 = cljs.pprint.next_arg(navigator);
  var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4689, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4689, 1, null);
  var pred__4692_4699 = cljs.core._EQ_;
  var expr__4693_4700 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(function() {
    var G__4695 = "o";
    var G__4696 = expr__4693_4700;
    return pred__4692_4699.cljs$core$IFn$_invoke$arity$2 ? pred__4692_4699.cljs$core$IFn$_invoke$arity$2(G__4695, G__4696) : pred__4692_4699.call(null, G__4695, G__4696);
  }())) {
    cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true, "\\o~3, '0o", cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));
  } else {
    if (cljs.core.truth_(function() {
      var G__4697 = "u";
      var G__4698 = expr__4693_4700;
      return pred__4692_4699.cljs$core$IFn$_invoke$arity$2 ? pred__4692_4699.cljs$core$IFn$_invoke$arity$2(G__4697, G__4698) : pred__4692_4699.call(null, G__4697, G__4698);
    }())) {
      cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true, "\\u~4, '0x", cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));
    } else {
      if (cljs.core.truth_(pred__4692_4699.cljs$core$IFn$_invoke$arity$2 ? pred__4692_4699.cljs$core$IFn$_invoke$arity$2(null, expr__4693_4700) : pred__4692_4699.call(null, null, expr__4693_4700))) {
        cljs.pprint.print_char(c);
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4693_4700)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__4701 = cljs.pprint.next_arg(navigator);
  var char$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4701, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4701, 1, null);
  cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([char$], 0));
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first(context);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second(cljs.pprint.map_passing_context(function(element, context) {
    if (cljs.pprint.abort_QMARK_(context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__4704 = cljs.pprint.realize_parameter_list((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4704, 0, null);
      var args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4704, 1, null);
      var vec__4707 = cljs.pprint.unzip_map(params);
      var params__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4707, 0, null);
      var offsets = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4707, 1, null);
      var params__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case(cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(s) - 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, dotloc)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, dotloc + 1))].join(""), cljs.core.str.cljs$core$IFn$_invoke$arity$1(dotloc - 1)], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, exploc), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 2, exploc))].join(""), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__4710 = cljs.pprint.float_parts_base(f);
  var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4710, 0, null);
  var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4710, 1, null);
  var m1 = cljs.pprint.rtrim(m, "0");
  var m2 = cljs.pprint.ltrim(m1, "0");
  var delta = cljs.core.count(m1) - cljs.core.count(m2);
  var e__$1 = cljs.core.count(e) > 0 && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e, 0), "+") ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2(e, 1) : e;
  if (cljs.core.empty_QMARK_(m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count(s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str, "1", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("9", s.charAt(i))) {
        var G__4713 = i - 1;
        i = G__4713;
        continue;
      } else {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.str, cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, i), cljs.core.char$(cljs.pprint.char_code(s.charAt(i)) + 1), cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = d;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count(m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4219__auto__ = 2;
      var y__4220__auto__ = w;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4219__auto__ = e + 1;
      var y__4220__auto__ = w__$1 - 1;
      return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
    }() : w__$1 + e;
    var vec__4714 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4714, 0, null);
    var e1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4714, 1, null);
    var round_pos__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4714, 2, null);
    var len__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4714, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(m1, round_pos__$1);
          var result = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m1, 0, round_pos__$1);
          if (cljs.pprint.char_code(round_char) >= cljs.pprint.char_code("5")) {
            var round_up_result = cljs.pprint.inc_s(result);
            var expanded = cljs.core.count(round_up_result) > cljs.core.count(result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.cljs$core$IFn$_invoke$arity$3(round_up_result, 0, cljs.core.count(round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__4717 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(-e - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4717, 0, null);
  var e1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4717, 1, null);
  var len = cljs.core.count(m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m, 0, loc)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal(cljs.pprint.expand_fixed(m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m, 0, k)), ".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__4720 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4720, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4720, 1, null);
  var vec__4723 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4723, 0, null);
  var abs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4723, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio(abs);
  var vec__4726 = cljs.pprint.float_parts(abs__$1);
  var mantissa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4726, 0, null);
  var exp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4726, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not(d) && cljs.core.count(mantissa) - 1 <= scaled_exp;
  var vec__4729 = cljs.pprint.round_str(mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4729, 0, null);
  var scaled_exp__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4729, 1, null);
  var expanded = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4729, 2, null);
  var fixed_repr = cljs.pprint.get_fixed(rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4120__auto__ = w;
    if (cljs.core.truth_(and__4120__auto__)) {
      var and__4120__auto____$1 = d;
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt(0), "0") && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt(1), ".") && cljs.core.count(fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }()) ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2(fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_4732 = cljs.core.count(fixed_repr__$1);
    var signed_len_4733 = cljs.core.truth_(add_sign) ? len_4732 + 1 : len_4732;
    var prepend_zero_4734__$1 = prepend_zero && !(signed_len_4733 >= w);
    var append_zero_4735__$1 = append_zero && !(signed_len_4733 >= w);
    var full_len_4736 = prepend_zero_4734__$1 || append_zero_4735__$1 ? signed_len_4733 + 1 : signed_len_4733;
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = full_len_4736 > w;
      if (and__4120__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4120__auto__;
      }
    }())) {
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params)))], 0));
    } else {
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w - full_len_4736, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero_4734__$1 ? "0" : 
      null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(fixed_repr__$1), append_zero_4735__$1 ? "0" : null].join("")], 0));
    }
  } else {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero ? "0" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(fixed_repr__$1), append_zero ? "0" : null].join("")], 0));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__4737 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4737, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4737, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio(arg);
  var G__4743_4753 = cljs.pprint.float_parts(arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__4744_4754 = G__4743_4753;
  var mantissa_4755 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4744_4754, 0, null);
  var exp_4756 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4744_4754, 1, null);
  var G__4743_4757__$1 = G__4743_4753;
  while (true) {
    var vec__4747_4758 = G__4743_4757__$1;
    var mantissa_4759__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4747_4758, 0, null);
    var exp_4760__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4747_4758, 1, null);
    var w_4761 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_4762 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_4763 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_4764 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_4765 = function() {
      var or__4131__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_4766 = function() {
      var or__4131__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_4767 = k_4764 <= 0;
    var scaled_exp_4768 = exp_4760__$1 - (k_4764 - 1);
    var scaled_exp_str_4769 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_4768));
    var scaled_exp_str_4770__$1 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_4765), scaled_exp_4768 < 0 ? "-" : "+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(e_4763) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(e_4763 - cljs.core.count(scaled_exp_str_4769), "0")) : null), scaled_exp_str_4769].join("");
    var exp_width_4771 = cljs.core.count(scaled_exp_str_4770__$1);
    var base_mantissa_width_4772 = cljs.core.count(mantissa_4759__$1);
    var scaled_mantissa_4773 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(-k_4764, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_4759__$1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d_4762) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(d_4762 - (base_mantissa_width_4772 - 1) - (k_4764 < 0 ? -k_4764 : 
    0), "0")) : null)].join("");
    var w_mantissa_4774 = cljs.core.truth_(w_4761) ? w_4761 - exp_width_4771 : null;
    var vec__4750_4775 = cljs.pprint.round_str(scaled_mantissa_4773, 0, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_4764, 0) ? d_4762 - 1 : k_4764 > 0 ? d_4762 : k_4764 < 0 ? d_4762 - 1 : null, cljs.core.truth_(w_mantissa_4774) ? w_mantissa_4774 - (cljs.core.truth_(add_sign_4766) ? 1 : 0) : null);
    var rounded_mantissa_4776 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4750_4775, 0, null);
    var __4777 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4750_4775, 1, null);
    var incr_exp_4778 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4750_4775, 2, null);
    var full_mantissa_4779 = cljs.pprint.insert_scaled_decimal(rounded_mantissa_4776, k_4764);
    var append_zero_4780 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_4764, cljs.core.count(rounded_mantissa_4776)) && d_4762 == null;
    if (cljs.core.not(incr_exp_4778)) {
      if (cljs.core.truth_(w_4761)) {
        var len_4781 = cljs.core.count(full_mantissa_4779) + exp_width_4771;
        var signed_len_4782 = cljs.core.truth_(add_sign_4766) ? len_4781 + 1 : len_4781;
        var prepend_zero_4783__$1 = prepend_zero_4767 && !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(signed_len_4782, w_4761);
        var full_len_4784 = prepend_zero_4783__$1 ? signed_len_4782 + 1 : signed_len_4782;
        var append_zero_4785__$1 = append_zero_4780 && full_len_4784 < w_4761;
        if (cljs.core.truth_(function() {
          var and__4120__auto__ = function() {
            var or__4131__auto__ = full_len_4784 > w_4761;
            if (or__4131__auto__) {
              return or__4131__auto__;
            } else {
              var and__4120__auto__ = e_4763;
              if (cljs.core.truth_(and__4120__auto__)) {
                return exp_width_4771 - 2 > e_4763;
              } else {
                return and__4120__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4120__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4120__auto__;
          }
        }())) {
          cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w_4761, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params)))], 0));
        } else {
          cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w_4761 - full_len_4784 - (append_zero_4785__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(add_sign_4766) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_4783__$1 ? 
          "0" : null, full_mantissa_4779, append_zero_4785__$1 ? "0" : null, scaled_exp_str_4770__$1].join("")], 0));
        }
      } else {
        cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.truth_(add_sign_4766) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_4767 ? "0" : null, full_mantissa_4779, append_zero_4780 ? "0" : null, scaled_exp_str_4770__$1].join("")], 0));
      }
    } else {
      var G__4786 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_4776, exp_4760__$1 + 1], null);
      G__4743_4757__$1 = G__4786;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__4787 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 0, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4787, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio(arg);
  var vec__4790 = cljs.pprint.float_parts(arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4790, 0, null);
  var exp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4790, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg__$1, 0.0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4219__auto__ = cljs.core.count(mantissa);
    var y__4220__auto__ = function() {
      var x__4222__auto__ = n;
      var y__4223__auto__ = 7;
      return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
    }();
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
    (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(ee, " "))], 0));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float(params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__4793 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4793, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4793, 1, null);
  var vec__4796 = cljs.pprint.float_parts(Math.abs(arg));
  var mantissa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4796, 0, null);
  var exp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4796, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__4799 = cljs.pprint.round_str(mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4799, 0, null);
  var scaled_exp = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4799, 1, null);
  var expanded = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4799, 2, null);
  var fixed_repr = cljs.pprint.get_fixed(rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n - fixed_repr.indexOf("."), "0"))), fixed_repr].join("");
  var full_len = cljs.core.count(full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.truth_(function() {
    var and__4120__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4120__auto__)) {
      return add_sign;
    } else {
      return and__4120__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__4120__auto__) {
      return add_sign;
    } else {
      return and__4120__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null, full_repr].join("")], 0));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__4802 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg(arg_navigator);
  var arg__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4802, 0, null);
  var navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4802, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count(clauses) ? cljs.core.first((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format(clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__4805 = cljs.pprint.next_arg(arg_navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4805, 0, null);
  var navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4805, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second(clauses) : cljs.core.first(clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format(clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__4808 = cljs.pprint.next_arg(arg_navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4808, 0, null);
  var navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4808, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first(clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format(clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__4811 = cljs.core.empty_QMARK_(param_clause) ? cljs.pprint.get_format_arg(navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4811, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4811, 1, null);
  var vec__4814 = cljs.pprint.next_arg(navigator__$1);
  var arg_list = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4814, 0, null);
  var navigator__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4814, 1, null);
  var args = cljs.pprint.init_navigator(arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not(max_count) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.empty_QMARK_((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var and__4120__auto__ = max_count;
        if (cljs.core.truth_(and__4120__auto__)) {
          return count >= max_count;
        } else {
          return and__4120__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format(clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first(iter_result))) {
        return navigator__$2;
      } else {
        var G__4817 = count + 1;
        var G__4818 = iter_result;
        var G__4819 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__4817;
        args__$1 = G__4818;
        last_pos = G__4819;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__4820 = cljs.core.empty_QMARK_(param_clause) ? cljs.pprint.get_format_arg(navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4820, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4820, 1, null);
  var vec__4823 = cljs.pprint.next_arg(navigator__$1);
  var arg_list = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4823, 0, null);
  var navigator__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4823, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.empty_QMARK_(arg_list__$1) && (cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var and__4120__auto__ = max_count;
        if (cljs.core.truth_(and__4120__auto__)) {
          return count >= max_count;
        } else {
          return and__4120__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format(clause, cljs.pprint.init_navigator(cljs.core.first(arg_list__$1)), cljs.pprint.init_navigator(cljs.core.next(arg_list__$1)));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first(iter_result))) {
        return navigator__$2;
      } else {
        var G__4826 = count + 1;
        var G__4827 = cljs.core.next(arg_list__$1);
        count = G__4826;
        arg_list__$1 = G__4827;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__4828 = cljs.core.empty_QMARK_(param_clause) ? cljs.pprint.get_format_arg(navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4828, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4828, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not(max_count) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.empty_QMARK_((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var and__4120__auto__ = max_count;
        if (cljs.core.truth_(and__4120__auto__)) {
          return count >= max_count;
        } else {
          return and__4120__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format(clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first(iter_result))) {
        return cljs.core.second(iter_result);
      } else {
        var G__4831 = count + 1;
        var G__4832 = iter_result;
        var G__4833 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__4831;
        navigator__$2 = G__4832;
        last_pos = G__4833;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__4834 = cljs.core.empty_QMARK_(param_clause) ? cljs.pprint.get_format_arg(navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4834, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4834, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4131__auto__ = cljs.core.empty_QMARK_((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4131__auto__) {
        return or__4131__auto__;
      } else {
        var and__4120__auto__ = max_count;
        if (cljs.core.truth_(and__4120__auto__)) {
          return count >= max_count;
        } else {
          return and__4120__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__4840 = cljs.pprint.next_arg_or_nil(navigator__$2);
      var sublist = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4840, 0, null);
      var navigator__$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4840, 1, null);
      var iter_result = cljs.pprint.execute_sub_format(clause, cljs.pprint.init_navigator(sublist), navigator__$3);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first(iter_result))) {
        return navigator__$3;
      } else {
        var G__4843 = count + 1;
        var G__4844 = navigator__$3;
        count = G__4843;
        navigator__$2 = G__4844;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block(params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses(params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_(clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first(clauses__$1);
      var vec__4850 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR__orig_val__4853 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__4854 = new cljs.core.StringBufferWriter(sb);
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4854;
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format(clause, navigator__$1, base_navigator), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4853;
        }
      }();
      var iter_result = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4850, 0, null);
      var result_str = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4850, 1, null);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first(iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second(iter_result)], null);
      } else {
        var G__4855 = cljs.core.next(clauses__$1);
        var G__4856 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, result_str);
        var G__4857 = iter_result;
        clauses__$1 = G__4855;
        acc = G__4856;
        navigator__$1 = G__4857;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__4858 = function() {
    var temp__5720__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var else$ = temp__5720__auto__;
      return cljs.pprint.render_clauses(else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__4861 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4858, 0, null);
  var eol_str = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4861, 0, null);
  var new_navigator = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4858, 1, null);
  var navigator__$1 = function() {
    var or__4131__auto__ = new_navigator;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__4864 = function() {
    var temp__5720__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var p = temp__5720__auto__;
      return cljs.pprint.realize_parameter_list(p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4864, 0, null);
  var new_navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4864, 1, null);
  var navigator__$2 = function() {
    var or__4131__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4131__auto__ = cljs.core.first((new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4131__auto__ = cljs.core.first((new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.pprint.get_max_column(cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__4867 = cljs.pprint.render_clauses(clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4867, 0, null);
  var navigator__$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4867, 1, null);
  var slots = function() {
    var x__4219__auto__ = 1;
    var y__4220__auto__ = cljs.core.count(strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }();
  var chars = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot(minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4219__auto__ = minpad;
    var y__4220__auto__ = cljs.core.quot(total_pad, slots);
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = eol_str;
    if (cljs.core.truth_(and__4120__auto__)) {
      return cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4120__auto__;
    }
  }())) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eol_str], 0));
  } else {
  }
  var slots_4870__$1 = slots;
  var extra_pad_4871__$1 = extra_pad;
  var strs_4872__$1 = strs;
  var pad_only_4873 = function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(strs_4872__$1), 1) && cljs.core.not((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq(strs_4872__$1)) {
      cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not(pad_only_4873) ? cljs.core.first(strs_4872__$1) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var or__4131__auto__ = pad_only_4873;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          var or__4131__auto____$1 = cljs.core.next(strs_4872__$1);
          if (or__4131__auto____$1) {
            return or__4131__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(extra_pad_4871__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join("")], 0));
      var G__4874 = slots_4870__$1 - 1;
      var G__4875 = extra_pad_4871__$1 - 1;
      var G__4876 = cljs.core.truth_(pad_only_4873) ? strs_4872__$1 : cljs.core.next(strs_4872__$1);
      var G__4877 = false;
      slots_4870__$1 = G__4874;
      extra_pad_4871__$1 = G__4875;
      strs_4872__$1 = G__4876;
      pad_only_4873 = G__4877;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4878 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4878 = function(writer, meta4879) {
      this.writer = writer;
      this.meta4879 = meta4879;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4878.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4880, meta4879__$1) {
      var self__ = this;
      var _4880__$1 = this;
      return new cljs.pprint.t_cljs$pprint4878(self__.writer, meta4879__$1);
    };
    cljs.pprint.t_cljs$pprint4878.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4880) {
      var self__ = this;
      var _4880__$1 = this;
      return self__.meta4879;
    };
    cljs.pprint.t_cljs$pprint4878.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush(self__.writer);
    };
    cljs.pprint.t_cljs$pprint4878.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__4881 = cljs.core._EQ_;
      var expr__4882 = cljs.core.type(x);
      if (cljs.core.truth_(pred__4881.cljs$core$IFn$_invoke$arity$2 ? pred__4881.cljs$core$IFn$_invoke$arity$2(String, expr__4882) : pred__4881.call(null, String, expr__4882))) {
        var s = x;
        return cljs.core._write(self__.writer, clojure.string.lower_case(s));
      } else {
        if (cljs.core.truth_(pred__4881.cljs$core$IFn$_invoke$arity$2 ? pred__4881.cljs$core$IFn$_invoke$arity$2(Number, expr__4882) : pred__4881.call(null, Number, expr__4882))) {
          var c = x;
          return cljs.core._write(self__.writer, clojure.string.lower_case(cljs.core.char$(c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4882)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint4878.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta4879", "meta4879", 363185935, null)], null);
    };
    cljs.pprint.t_cljs$pprint4878.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4878.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4878";
    cljs.pprint.t_cljs$pprint4878.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4878");
    };
    cljs.pprint.__GT_t_cljs$pprint4878 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint4878(writer__$1, meta4879) {
      return new cljs.pprint.t_cljs$pprint4878(writer__$1, meta4879);
    };
  }
  return new cljs.pprint.t_cljs$pprint4878(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4884 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4884 = function(writer, meta4885) {
      this.writer = writer;
      this.meta4885 = meta4885;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_4886, meta4885__$1) {
      var self__ = this;
      var _4886__$1 = this;
      return new cljs.pprint.t_cljs$pprint4884(self__.writer, meta4885__$1);
    };
    cljs.pprint.t_cljs$pprint4884.prototype.cljs$core$IMeta$_meta$arity$1 = function(_4886) {
      var self__ = this;
      var _4886__$1 = this;
      return self__.meta4885;
    };
    cljs.pprint.t_cljs$pprint4884.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush(self__.writer);
    };
    cljs.pprint.t_cljs$pprint4884.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__4887 = cljs.core._EQ_;
      var expr__4888 = cljs.core.type(x);
      if (cljs.core.truth_(pred__4887.cljs$core$IFn$_invoke$arity$2 ? pred__4887.cljs$core$IFn$_invoke$arity$2(String, expr__4888) : pred__4887.call(null, String, expr__4888))) {
        var s = x;
        return cljs.core._write(self__.writer, clojure.string.upper_case(s));
      } else {
        if (cljs.core.truth_(pred__4887.cljs$core$IFn$_invoke$arity$2 ? pred__4887.cljs$core$IFn$_invoke$arity$2(Number, expr__4888) : pred__4887.call(null, Number, expr__4888))) {
          var c = x;
          return cljs.core._write(self__.writer, clojure.string.upper_case(cljs.core.char$(c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4888)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint4884.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta4885", "meta4885", -1969400722, null)], null);
    };
    cljs.pprint.t_cljs$pprint4884.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4884.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4884";
    cljs.pprint.t_cljs$pprint4884.cljs$lang$ctorPrWriter = function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
      return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4884");
    };
    cljs.pprint.__GT_t_cljs$pprint4884 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint4884(writer__$1, meta4885) {
      return new cljs.pprint.t_cljs$pprint4884(writer__$1, meta4885);
    };
  }
  return new cljs.pprint.t_cljs$pprint4884(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first(s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4120__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4120__auto__)) {
      var and__4120__auto____$1 = f;
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }()) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case(f)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1))].join("") : s;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.first(cljs.pprint.consume(function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_(s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__4120__auto__ = m;
          if (cljs.core.truth_(and__4120__auto__)) {
            return m.index + 1;
          } else {
            return and__4120__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s__$2, 0, offset)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s__$2, offset)))].join(""), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4890 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4890 = function(writer, last_was_whitespace_QMARK_, meta4891) {
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta4891 = meta4891;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4890.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_4892, meta4891__$1) {
        var self__ = this;
        var _4892__$1 = this;
        return new cljs.pprint.t_cljs$pprint4890(self__.writer, self__.last_was_whitespace_QMARK_, meta4891__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint4890.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_4892) {
        var self__ = this;
        var _4892__$1 = this;
        return self__.meta4891;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint4890.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush(self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint4890.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__4893 = cljs.core._EQ_;
        var expr__4894 = cljs.core.type(x);
        if (cljs.core.truth_(pred__4893.cljs$core$IFn$_invoke$arity$2 ? pred__4893.cljs$core$IFn$_invoke$arity$2(String, expr__4894) : pred__4893.call(null, String, expr__4894))) {
          var s = x;
          cljs.core._write(self__.writer, cljs.pprint.capitalize_string(s.toLowerCase(), cljs.core.deref(self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_, function() {
              var G__4896 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(s) - 1);
              return goog.string.isEmptyOrWhitespace(G__4896);
            }());
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__4893.cljs$core$IFn$_invoke$arity$2 ? pred__4893.cljs$core$IFn$_invoke$arity$2(Number, expr__4894) : pred__4893.call(null, Number, expr__4894))) {
            var c = cljs.core.char$(x);
            var mod_c = cljs.core.truth_(cljs.core.deref(self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case(c) : c;
            cljs.core._write(self__.writer, mod_c);
            return cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4894)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint4890.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta4891", "meta4891", 350955433, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint4890.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4890.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4890";
    cljs.pprint.t_cljs$pprint4890.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4890");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint4890 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint4890(writer__$1, last_was_whitespace_QMARK___$1, meta4891) {
        return new cljs.pprint.t_cljs$pprint4890(writer__$1, last_was_whitespace_QMARK___$1, meta4891);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint4890(writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint4897 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint4897 = function(writer, capped, meta4898) {
      this.writer = writer;
      this.capped = capped;
      this.meta4898 = meta4898;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint4897.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_4899, meta4898__$1) {
        var self__ = this;
        var _4899__$1 = this;
        return new cljs.pprint.t_cljs$pprint4897(self__.writer, self__.capped, meta4898__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint4897.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_4899) {
        var self__ = this;
        var _4899__$1 = this;
        return self__.meta4898;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint4897.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush(self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint4897.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__4900 = cljs.core._EQ_;
        var expr__4901 = cljs.core.type(x);
        if (cljs.core.truth_(pred__4900.cljs$core$IFn$_invoke$arity$2 ? pred__4900.cljs$core$IFn$_invoke$arity$2(String, expr__4901) : pred__4900.call(null, String, expr__4901))) {
          var s = clojure.string.lower_case(x);
          if (cljs.core.not(cljs.core.deref(self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__4120__auto__ = m;
              if (cljs.core.truth_(and__4120__auto__)) {
                return m.index;
              } else {
                return and__4120__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write(self__.writer, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, offset)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s, offset))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_(self__.capped, true);
            } else {
              return cljs.core._write(self__.writer, s);
            }
          } else {
            return cljs.core._write(self__.writer, clojure.string.lower_case(s));
          }
        } else {
          if (cljs.core.truth_(pred__4900.cljs$core$IFn$_invoke$arity$2 ? pred__4900.cljs$core$IFn$_invoke$arity$2(Number, expr__4901) : pred__4900.call(null, Number, expr__4901))) {
            var c = cljs.core.char$(x);
            if (cljs.core.truth_(function() {
              var and__4120__auto__ = cljs.core.not(cljs.core.deref(self__.capped));
              if (and__4120__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__4120__auto__;
              }
            }())) {
              cljs.core.reset_BANG_(self__.capped, true);
              return cljs.core._write(self__.writer, clojure.string.upper_case(c));
            } else {
              return cljs.core._write(self__.writer, clojure.string.lower_case(c));
            }
          } else {
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__4901)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint4897.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta4898", "meta4898", 830045622, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint4897.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint4897.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint4897";
    cljs.pprint.t_cljs$pprint4897.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__4374__auto__, writer__4375__auto__, opt__4376__auto__) {
        return cljs.core._write(writer__4375__auto__, "cljs.pprint/t_cljs$pprint4897");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint4897 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint4897(writer__$1, capped__$1, meta4898) {
        return new cljs.pprint.t_cljs$pprint4897(writer__$1, capped__$1, meta4898);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint4897(writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR__orig_val__4903 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__4904 = make_writer.cljs$core$IFn$_invoke$arity$1 ? make_writer.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_out_STAR_) : make_writer.call(null, cljs.core._STAR_out_STAR_);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__4904;
  try {
    return cljs.pprint.execute_sub_format(clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__4903;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_(writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer(writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn();
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn();
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_4906 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_4907 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_4908 = cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_))));
  var space_count_4909 = current_4908 < colnum_4906 ? colnum_4906 - current_4908 : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(colinc_4907, 0) ? 0 : colinc_4907 - cljs.core.rem(current_4908 - colnum_4906, colinc_4907);
  cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_4909, " "))], 0));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_4910 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_4911 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_4912 = colrel_4910 + cljs.pprint.get_column((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_))));
  var offset_4913 = colinc_4911 > 0 ? cljs.core.rem(start_col_4912, colinc_4911) : 0;
  var space_count_4914 = colrel_4910 + (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, offset_4913) ? 0 : colinc_4911 - offset_4913);
  cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_4914, " "))], 0));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count(clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.first(clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__4915 = cljs.pprint.next_arg(navigator);
  var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4915, 0, null);
  var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4915, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__4918_4922 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__4919_4923 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__4920_4924 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__4921_4925 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__4920_4924;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__4921_4925;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format(body, cljs.pprint.init_navigator(arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__4919_4923;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__4918_4922;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent(relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline(kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4926_SHARP_, p2__4927_SHARP_, p3__4928_SHARP_) {
    return cljs.pprint.format_ascii(cljs.core.print_str, p1__4926_SHARP_, p2__4927_SHARP_, p3__4928_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4929_SHARP_, p2__4930_SHARP_, p3__4931_SHARP_) {
    return cljs.pprint.format_ascii(cljs.core.pr_str, p1__4929_SHARP_, p2__4930_SHARP_, p3__4931_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4932_SHARP_, p2__4933_SHARP_, p3__4934_SHARP_) {
    return cljs.pprint.format_integer(10, p1__4932_SHARP_, p2__4933_SHARP_, p3__4934_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4935_SHARP_, p2__4936_SHARP_, p3__4937_SHARP_) {
    return cljs.pprint.format_integer(2, p1__4935_SHARP_, p2__4936_SHARP_, p3__4937_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4938_SHARP_, p2__4939_SHARP_, p3__4940_SHARP_) {
    return cljs.pprint.format_integer(8, p1__4938_SHARP_, p2__4939_SHARP_, p3__4940_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__4941_SHARP_, p2__4942_SHARP_, p3__4943_SHARP_) {
    return cljs.pprint.format_integer(16, p1__4941_SHARP_, p2__4942_SHARP_, p3__4943_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__4944_SHARP_, p2__4945_SHARP_, p3__4946_SHARP_) {
      return cljs.pprint.format_integer((new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__4944_SHARP_), p1__4944_SHARP_, p2__4945_SHARP_, p3__4946_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4120__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4120__auto__;
      }
    }())) {
      return function(p1__4947_SHARP_, p2__4948_SHARP_, p3__4949_SHARP_) {
        return cljs.pprint.format_old_roman(p1__4947_SHARP_, p2__4948_SHARP_, p3__4949_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__4950_SHARP_, p2__4951_SHARP_, p3__4952_SHARP_) {
          return cljs.pprint.format_new_roman(p1__4950_SHARP_, p2__4951_SHARP_, p3__4952_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__4953_SHARP_, p2__4954_SHARP_, p3__4955_SHARP_) {
            return cljs.pprint.format_ordinal_english(p1__4953_SHARP_, p2__4954_SHARP_, p3__4955_SHARP_);
          };
        } else {
          return function(p1__4956_SHARP_, p2__4957_SHARP_, p3__4958_SHARP_) {
            return cljs.pprint.format_cardinal_english(p1__4956_SHARP_, p2__4957_SHARP_, p3__4958_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition(navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__4968 = cljs.pprint.next_arg(navigator__$1);
    var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4968, 0, null);
    var navigator__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4968, 1, null);
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg, 1) ? cljs.core.first(strs) : cljs.core.second(strs)], 0));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4607__auto___4986 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_4987 = 0;
    while (true) {
      if (i_4987 < n__4607__auto___4986) {
        cljs.pprint.prn();
        var G__4988 = i_4987 + 1;
        i_4987 = G__4988;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_4989 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_4989 > 0) {
      cljs.pprint.fresh_line();
    } else {
    }
    var n__4607__auto___4990 = cnt_4989 - 1;
    var i_4991 = 0;
    while (true) {
      if (i_4991 < n__4607__auto___4990) {
        cljs.pprint.prn();
        var G__4992 = i_4991 + 1;
        i_4991 = G__4992;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4607__auto___4993 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_4994 = 0;
    while (true) {
      if (i_4994 < n__4607__auto___4993) {
        cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["\f"], 0));
        var G__4995 = i_4994 + 1;
        i_4994 = G__4995;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n, "~"))], 0));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn();
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__4959_SHARP_, p2__4960_SHARP_, p3__4961_SHARP_) {
      return cljs.pprint.relative_tabulation(p1__4959_SHARP_, p2__4960_SHARP_, p3__4961_SHARP_);
    };
  } else {
    return function(p1__4962_SHARP_, p2__4963_SHARP_, p3__4964_SHARP_) {
      return cljs.pprint.absolute_tabulation(p1__4962_SHARP_, p2__4963_SHARP_, p3__4964_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition(navigator, n);
    } else {
      return cljs.pprint.relative_reposition(navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__4971 = cljs.pprint.get_format_arg(navigator);
      var subformat = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4971, 0, null);
      var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4971, 1, null);
      return cljs.pprint.execute_sub_format(subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__4974 = cljs.pprint.get_format_arg(navigator);
      var subformat = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4974, 0, null);
      var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4974, 1, null);
      var vec__4977 = cljs.pprint.next_arg(navigator__$1);
      var subargs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4977, 0, null);
      var navigator__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4977, 1, null);
      var sub_navigator = cljs.pprint.init_navigator(subargs);
      cljs.pprint.execute_sub_format(subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4120__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4120__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4120__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__4965_SHARP_, p2__4966_SHARP_, p3__4967_SHARP_) {
      return cljs.pprint.modify_case(mod_case_writer, p1__4965_SHARP_, p2__4966_SHARP_, p3__4967_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4120__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4120__auto__ = arg1;
      if (cljs.core.truth_(and__4120__auto__)) {
        var and__4120__auto____$1 = arg2;
        if (cljs.core.truth_(and__4120__auto____$1)) {
          return arg3;
        } else {
          return and__4120__auto____$1;
        }
      } else {
        return and__4120__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4120__auto__ = arg1;
        if (cljs.core.truth_(and__4120__auto__)) {
          return arg2;
        } else {
          return and__4120__auto__;
        }
      }())) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_((new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__4980 = cljs.pprint.next_arg(navigator);
        var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4980, 0, null);
        var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4980, 1, null);
        if (cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__4983 = cljs.pprint.next_arg(navigator);
      var arg = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4983, 0, null);
      var navigator__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4983, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out(arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__4996) {
  var vec__4997 = p__4996;
  var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4997, 0, null);
  var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4997, 1, null);
  var saw_comma = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4997, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first(param);
    var remainder = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(",", cljs.core.nth.cljs$core$IFn$_invoke$arity$2(remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error("Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume(cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__5000) {
  var vec__5001 = p__5000;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5001, 0, null);
  var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5001, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length, 0) ? null : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length, 1) && cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : 
  cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length, 1) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("#", cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length, 2) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("'", cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p, 0)) ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume(function(p__5004) {
    var vec__5005 = p__5004;
    var s__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5005, 0, null);
    var offset__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5005, 1, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5005, 2, null);
    if (cljs.core.empty_QMARK_(s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.flag_defs, cljs.core.first(s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_(flags, flag)) {
          return cljs.pprint.format_error(['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s__$1)), '" appears more than once in a directive'].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$1, 1), offset__$1 + 1, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4120__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4120__auto__;
    }
  }())) {
    cljs.pprint.format_error(['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4120__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4120__auto__;
    }
  }())) {
    cljs.pprint.format_error(['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = cljs.core.not((new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4120__auto__) {
      var and__4120__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__4120__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__4120__auto____$1;
      }
    } else {
      return and__4120__auto__;
    }
  }())) {
    return cljs.pprint.format_error(['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), function() {
      var x__4222__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4223__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4222__auto__ < y__4223__auto__ ? x__4222__auto__ : y__4223__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags(def, flags);
  if (cljs.core.count(params) > cljs.core.count((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error(cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count(params), cljs.core.count((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))], 
    0)), cljs.core.second(cljs.core.first(params)));
  } else {
  }
  cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(p1__5008_SHARP_, p2__5009_SHARP_) {
    var val = cljs.core.first(p1__5008_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_(cljs.pprint.special_params, val) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(cljs.core.second(p2__5009_SHARP_)), cljs.core.type(val)))) {
      return cljs.pprint.format_error(["Parameter ", cljs.core.name(cljs.core.first(p2__5009_SHARP_)), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(val))].join(""), cljs.core.second(p1__5008_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse(function() {
    var iter__4523__auto__ = function cljs$pprint$map_params_$_iter__5013(s__5014) {
      return new cljs.core.LazySeq(null, function() {
        var s__5014__$1 = s__5014;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq(s__5014__$1);
          if (temp__5720__auto__) {
            var s__5014__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__5014__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first(s__5014__$2);
              var size__4522__auto__ = cljs.core.count(c__4521__auto__);
              var b__5016 = cljs.core.chunk_buffer(size__4522__auto__);
              if (function() {
                var i__5015 = 0;
                while (true) {
                  if (i__5015 < size__4522__auto__) {
                    var vec__5017 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__5015);
                    var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5017, 0, null);
                    var vec__5020 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5017, 1, null);
                    var default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5020, 0, null);
                    cljs.core.chunk_append(b__5016, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__5029 = i__5015 + 1;
                    i__5015 = G__5029;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5016), cljs$pprint$map_params_$_iter__5013(cljs.core.chunk_rest(s__5014__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5016), null);
              }
            } else {
              var vec__5023 = cljs.core.first(s__5014__$2);
              var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5023, 0, null);
              var vec__5026 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5023, 1, null);
              var default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5026, 0, null);
              return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__5013(cljs.core.rest(s__5014__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__5010_SHARP_, p2__5011_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc, p1__5010_SHARP_, p2__5011_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__5012_SHARP_) {
    return cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__5012_SHARP_, 1));
  }, cljs.core.zipmap(cljs.core.keys((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags], 0));
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__5030 = cljs.pprint.extract_params(s, offset);
  var raw_params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5030, 0, null);
  var vec__5033 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5030, 1, null);
  var rest = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5033, 0, null);
  var offset__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5033, 1, null);
  var vec__5036 = cljs.pprint.extract_flags(rest, offset__$1);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5036, 0, null);
  var vec__5039 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5036, 1, null);
  var rest__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5039, 0, null);
  var offset__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5039, 1, null);
  var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5039, 2, null);
  var directive = cljs.core.first(rest__$1);
  var def = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.directive_table, clojure.string.upper_case(directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params(def, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not(directive)) {
    cljs.pprint.format_error("Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not(def)) {
    cljs.pprint.format_error(['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive), '" is undefined'].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive(function() {
    var fexpr__5042 = (new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def);
    return fexpr__5042.cljs$core$IFn$_invoke$arity$2 ? fexpr__5042.cljs$core$IFn$_invoke$arity$2(params, offset__$2) : fexpr__5042.call(null, params, offset__$2);
  }(), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count(remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s], 0));
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4120__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4120__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4120__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__5043 = cljs.pprint.collect_clauses((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5043, 0, null);
  var remainder__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5043, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), 
  cljs.pprint.tuple_map(subex, (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))], 0)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume(function(remainder__$1) {
    if (cljs.core.empty_QMARK_(remainder__$1)) {
      return cljs.pprint.format_error("No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first(remainder__$1);
      var remainder__$2 = cljs.core.next(remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket(this$))) {
        return cljs.pprint.process_bracket(this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_(this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_(this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second(cljs.pprint.consume(function(p__5046) {
    var vec__5047 = p__5046;
    var clause_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5047, 0, null);
    var saw_else = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5047, 1, null);
    var remainder__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5047, 2, null);
    var vec__5050 = cljs.pprint.process_clause(bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5050, 0, null);
    var vec__5053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5050, 1, null);
    var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5053, 0, null);
    var right_params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5053, 1, null);
    var else_params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5053, 2, null);
    var remainder__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5053, 3, null);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 
      1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params])], 0)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error('Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error('An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error('The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", -832171646), else_params], null)], 0)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                [clause], null)], null)], 0)), true, remainder__$2], null)], null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error('A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not((new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error('A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
              [clause], null)], null)], 0)), false, remainder__$2], null)], null);
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first(cljs.pprint.consume(function(remainder) {
    var this$ = cljs.core.first(remainder);
    var remainder__$1 = cljs.core.next(remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket(this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR__orig_val__5056 = cljs.pprint._STAR_format_str_STAR_;
  var _STAR_format_str_STAR__temp_val__5057 = format_str;
  cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__temp_val__5057;
  try {
    return cljs.pprint.process_nesting(cljs.core.first(cljs.pprint.consume(function(_STAR_format_str_STAR__orig_val__5056, _STAR_format_str_STAR__temp_val__5057) {
      return function(p__5058) {
        var vec__5059 = p__5058;
        var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5059, 0, null);
        var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5059, 1, null);
        if (cljs.core.empty_QMARK_(s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR__orig_val__5056, _STAR_format_str_STAR__temp_val__5057), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__orig_val__5056;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_(format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4131__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1))));
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          var or__4131__auto____$1 = cljs.core.some(cljs.pprint.needs_pretty, cljs.core.first((new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));
          if (cljs.core.truth_(or__4131__auto____$1)) {
            return or__4131__auto____$1;
          } else {
            return cljs.core.some(cljs.pprint.needs_pretty, cljs.core.first((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__5062 = cljs.core.next(format__$1);
        format__$1 = G__5062;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var G__5064 = arguments.length;
  switch(G__5064) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not(stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.pprint.needs_pretty(format) && cljs.core.not(cljs.pprint.pretty_writer_QMARK_(real_stream)) ? cljs.pprint.get_pretty_writer(real_stream) : real_stream;
  var _STAR_out_STAR__orig_val__5065 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__5066 = wrapped_stream;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__5066;
  try {
    try {
      cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush(wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not(stream)) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
    } else {
      if (stream === true) {
        return cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__5065;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context(function(element, context) {
    if (cljs.pprint.abort_QMARK_(context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__5067 = cljs.pprint.realize_parameter_list((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5067, 0, null);
      var args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5067, 1, null);
      var vec__5070 = cljs.pprint.unzip_map(params);
      var params__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5070, 0, null);
      var offsets = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5070, 1, null);
      var params__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize(cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method(multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = function() {
    var G__5074 = cljs.core.first(alis);
    return cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1(G__5074) : cljs.pprint.reader_macros.call(null, G__5074);
  }();
  if (cljs.core.truth_(function() {
    var and__4120__auto__ = macro_char;
    if (cljs.core.truth_(and__4120__auto__)) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, cljs.core.count(alis));
    } else {
      return and__4120__auto__;
    }
  }())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out(cljs.core.second(alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5075_5080 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5076_5081 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5077_5082 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5078_5083 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5077_5082;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5078_5083;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count5079_5084 = 0;
      var alis_5085__$1 = cljs.core.seq(alis);
      while (true) {
        if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5079_5084 < cljs.core._STAR_print_length_STAR_) {
          if (alis_5085__$1) {
            cljs.pprint.write_out(cljs.core.first(alis_5085__$1));
            if (cljs.core.next(alis_5085__$1)) {
              cljs.core._write(cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__5086 = length_count5079_5084 + 1;
              var G__5087 = cljs.core.next(alis_5085__$1);
              length_count5079_5084 = G__5086;
              alis_5085__$1 = G__5087;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write(cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5076_5081;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5075_5080;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not(cljs.pprint.pprint_reader_macro(alis))) {
    return cljs.pprint.pprint_simple_list(alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5088_5093 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5089_5094 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5090_5095 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5091_5096 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5090_5095;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5091_5096;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count5092_5097 = 0;
      var aseq_5098 = cljs.core.seq(avec);
      while (true) {
        if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5092_5097 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_5098) {
            cljs.pprint.write_out(cljs.core.first(aseq_5098));
            if (cljs.core.next(aseq_5098)) {
              cljs.core._write(cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__5099 = length_count5092_5097 + 1;
              var G__5100 = cljs.core.next(aseq_5098);
              length_count5092_5097 = G__5099;
              aseq_5098 = G__5100;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write(cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5089_5094;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5088_5093;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__2742__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
  return function(format_in__2742__auto__, cf__2743__auto__) {
    return function() {
      var G__5101__delegate = function(args__2744__auto__) {
        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
      };
      var G__5101 = function(var_args) {
        var args__2744__auto__ = null;
        if (arguments.length > 0) {
          var G__5102__i = 0, G__5102__a = new Array(arguments.length - 0);
          while (G__5102__i < G__5102__a.length) {
            G__5102__a[G__5102__i] = arguments[G__5102__i + 0];
            ++G__5102__i;
          }
          args__2744__auto__ = new cljs.core.IndexedSeq(G__5102__a, 0, null);
        }
        return G__5101__delegate.call(this, args__2744__auto__);
      };
      G__5101.cljs$lang$maxFixedArity = 0;
      G__5101.cljs$lang$applyTo = function(arglist__5103) {
        var args__2744__auto__ = cljs.core.seq(arglist__5103);
        return G__5101__delegate(args__2744__auto__);
      };
      G__5101.cljs$core$IFn$_invoke$arity$variadic = G__5101__delegate;
      return G__5101;
    }();
  }(format_in__2742__auto__, cf__2743__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  var vec__5104 = !cljs.core.record_QMARK_(amap) ? function() {
    var fexpr__5107 = new cljs.core.Var(function() {
      return cljs.core.lift_ns;
    }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
    "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10284, 10284, cljs.core.list(new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]));
    return fexpr__5107.cljs$core$IFn$_invoke$arity$1 ? fexpr__5107.cljs$core$IFn$_invoke$arity$1(amap) : fexpr__5107.call(null, amap);
  }() : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5104, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5104, 1, null);
  var amap__$1 = function() {
    var or__4131__auto__ = lift_map;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return amap;
    }
  }();
  var prefix = cljs.core.truth_(ns) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5108_5117 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5109_5118 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5110_5119 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5111_5120 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5110_5119;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5111_5120;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, prefix, null, "}");
      var length_count5112_5121 = 0;
      var aseq_5122 = cljs.core.seq(amap__$1);
      while (true) {
        if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5112_5121 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_5122) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
              cljs.core._write(cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__5113_5123 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__5114_5124 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__5115_5125 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__5116_5126 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5115_5125;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5116_5126;
              try {
                cljs.pprint.start_block(cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out(cljs.core.ffirst(aseq_5122));
                cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out(cljs.core.fnext(cljs.core.first(aseq_5122)));
                cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5114_5124;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5113_5123;
              }
            }
            if (cljs.core.next(aseq_5122)) {
              cljs.core._write(cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__5127 = length_count5112_5121 + 1;
              var G__5128 = cljs.core.next(aseq_5122);
              length_count5112_5121 = G__5127;
              aseq_5122 = G__5128;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write(cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5109_5118;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5108_5117;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write(cljs.core._STAR_out_STAR_, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));
};
cljs.pprint.pprint_set = function() {
  var format_in__2742__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
  return function(format_in__2742__auto__, cf__2743__auto__) {
    return function() {
      var G__5129__delegate = function(args__2744__auto__) {
        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
      };
      var G__5129 = function(var_args) {
        var args__2744__auto__ = null;
        if (arguments.length > 0) {
          var G__5130__i = 0, G__5130__a = new Array(arguments.length - 0);
          while (G__5130__i < G__5130__a.length) {
            G__5130__a[G__5130__i] = arguments[G__5130__i + 0];
            ++G__5130__i;
          }
          args__2744__auto__ = new cljs.core.IndexedSeq(G__5130__a, 0, null);
        }
        return G__5129__delegate.call(this, args__2744__auto__);
      };
      G__5129.cljs$lang$maxFixedArity = 0;
      G__5129.cljs$lang$applyTo = function(arglist__5131) {
        var args__2744__auto__ = cljs.core.seq(arglist__5131);
        return G__5129__delegate(args__2744__auto__);
      };
      G__5129.cljs$core$IFn$_invoke$arity$variadic = G__5129__delegate;
      return G__5129;
    }();
  }(format_in__2742__auto__, cf__2743__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4131__auto__ = function() {
    var temp__5720__auto__ = cljs.core.re_find(/^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__5720__auto__)) {
      var match = temp__5720__auto__;
      return cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1(match) : cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type(cljs.core.type(o).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5132_5138 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5133_5139 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5134_5140 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5135_5141 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5134_5140;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5135_5141;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent(new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count(prefix) - 2));
      cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out(function() {
        var and__4120__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPending, o);
        if (and__4120__auto__) {
          return !cljs.core._realized_QMARK_(o);
        } else {
          return and__4120__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref(o));
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5133_5139;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5132_5138;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__2742__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
  return function(format_in__2742__auto__, cf__2743__auto__) {
    return function() {
      var G__5142__delegate = function(args__2744__auto__) {
        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
      };
      var G__5142 = function(var_args) {
        var args__2744__auto__ = null;
        if (arguments.length > 0) {
          var G__5143__i = 0, G__5143__a = new Array(arguments.length - 0);
          while (G__5143__i < G__5143__a.length) {
            G__5143__a[G__5143__i] = arguments[G__5143__i + 0];
            ++G__5143__i;
          }
          args__2744__auto__ = new cljs.core.IndexedSeq(G__5143__a, 0, null);
        }
        return G__5142__delegate.call(this, args__2744__auto__);
      };
      G__5142.cljs$lang$maxFixedArity = 0;
      G__5142.cljs$lang$applyTo = function(arglist__5144) {
        var args__2744__auto__ = cljs.core.seq(arglist__5144);
        return G__5142__delegate(args__2744__auto__);
      };
      G__5142.cljs$core$IFn$_invoke$arity$variadic = G__5142__delegate;
      return G__5142;
    }();
  }(format_in__2742__auto__, cf__2743__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_(obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_(obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_(obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_(obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), function() {
      var fexpr__5146 = cljs.core.get_global_hierarchy;
      return fexpr__5146.cljs$core$IFn$_invoke$arity$0 ? fexpr__5146.cljs$core$IFn$_invoke$arity$0() : fexpr__5146.call(null);
    }());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.pprint.use_method(cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method(cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method(cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method(cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method(cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write(cljs.core._STAR_out_STAR_, cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null], 0)));
});
cljs.pprint.use_method(cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_(form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_(reference)) {
    var vec__5147 = cljs.pprint.brackets(reference);
    var start = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5147, 0, null);
    var end = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5147, 1, null);
    var vec__5150 = reference;
    var seq__5151 = cljs.core.seq(vec__5150);
    var first__5152 = cljs.core.first(seq__5151);
    var seq__5151__$1 = cljs.core.next(seq__5151);
    var keyw = first__5152;
    var args = seq__5151__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__5153_5173 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__5154_5174 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__5155_5175 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__5156_5176 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5155_5175;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5156_5176;
      try {
        cljs.pprint.start_block(cljs.core._STAR_out_STAR_, start, null, end);
        var fexpr__5157_5177 = function() {
          var format_in__2742__auto__ = "~w~:i";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
            return function() {
              var G__5178__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5178 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5179__i = 0, G__5179__a = new Array(arguments.length - 0);
                  while (G__5179__i < G__5179__a.length) {
                    G__5179__a[G__5179__i] = arguments[G__5179__i + 0];
                    ++G__5179__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5179__a, 0, null);
                }
                return G__5178__delegate.call(this, args__2744__auto__);
              };
              G__5178.cljs$lang$maxFixedArity = 0;
              G__5178.cljs$lang$applyTo = function(arglist__5180) {
                var args__2744__auto__ = cljs.core.seq(arglist__5180);
                return G__5178__delegate(args__2744__auto__);
              };
              G__5178.cljs$core$IFn$_invoke$arity$variadic = G__5178__delegate;
              return G__5178;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
        }();
        fexpr__5157_5177.cljs$core$IFn$_invoke$arity$1 ? fexpr__5157_5177.cljs$core$IFn$_invoke$arity$1(keyw) : fexpr__5157_5177.call(null, keyw);
        var args_5181__$1 = args;
        while (true) {
          if (cljs.core.seq(args_5181__$1)) {
            var fexpr__5158_5182 = function() {
              var format_in__2742__auto__ = " ";
              var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
              return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                return function() {
                  var G__5183__delegate = function(args__2744__auto__) {
                    var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                    return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                  };
                  var G__5183 = function(var_args) {
                    var args__2744__auto__ = null;
                    if (arguments.length > 0) {
                      var G__5184__i = 0, G__5184__a = new Array(arguments.length - 0);
                      while (G__5184__i < G__5184__a.length) {
                        G__5184__a[G__5184__i] = arguments[G__5184__i + 0];
                        ++G__5184__i;
                      }
                      args__2744__auto__ = new cljs.core.IndexedSeq(G__5184__a, 0, null);
                    }
                    return G__5183__delegate.call(this, args__2744__auto__);
                  };
                  G__5183.cljs$lang$maxFixedArity = 0;
                  G__5183.cljs$lang$applyTo = function(arglist__5185) {
                    var args__2744__auto__ = cljs.core.seq(arglist__5185);
                    return G__5183__delegate(args__2744__auto__);
                  };
                  G__5183.cljs$core$IFn$_invoke$arity$variadic = G__5183__delegate;
                  return G__5183;
                }();
              }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
            }();
            fexpr__5158_5182.cljs$core$IFn$_invoke$arity$0 ? fexpr__5158_5182.cljs$core$IFn$_invoke$arity$0() : fexpr__5158_5182.call(null);
            var arg_5186 = cljs.core.first(args_5181__$1);
            if (cljs.core.sequential_QMARK_(arg_5186)) {
              var vec__5159_5187 = cljs.pprint.brackets(arg_5186);
              var start_5188__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5159_5187, 0, null);
              var end_5189__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5159_5187, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
                cljs.core._write(cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__5162_5190 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__5163_5191 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__5164_5192 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__5165_5193 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5164_5192;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5165_5193;
                try {
                  cljs.pprint.start_block(cljs.core._STAR_out_STAR_, start_5188__$1, null, end_5189__$1);
                  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(arg_5186), 3) && cljs.core.second(arg_5186) instanceof cljs.core.Keyword) {
                    var vec__5166_5194 = arg_5186;
                    var ns_5195 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5166_5194, 0, null);
                    var kw_5196 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5166_5194, 1, null);
                    var lis_5197 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5166_5194, 2, null);
                    var fexpr__5169_5198 = function() {
                      var format_in__2742__auto__ = "~w ~w ";
                      var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
                      return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5166_5194, ns_5195, kw_5196, lis_5197, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, 
                      _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                        return function() {
                          var G__5199__delegate = function(args__2744__auto__) {
                            var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                            return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                          };
                          var G__5199 = function(var_args) {
                            var args__2744__auto__ = null;
                            if (arguments.length > 0) {
                              var G__5200__i = 0, G__5200__a = new Array(arguments.length - 0);
                              while (G__5200__i < G__5200__a.length) {
                                G__5200__a[G__5200__i] = arguments[G__5200__i + 0];
                                ++G__5200__i;
                              }
                              args__2744__auto__ = new cljs.core.IndexedSeq(G__5200__a, 0, null);
                            }
                            return G__5199__delegate.call(this, args__2744__auto__);
                          };
                          G__5199.cljs$lang$maxFixedArity = 0;
                          G__5199.cljs$lang$applyTo = function(arglist__5201) {
                            var args__2744__auto__ = cljs.core.seq(arglist__5201);
                            return G__5199__delegate(args__2744__auto__);
                          };
                          G__5199.cljs$core$IFn$_invoke$arity$variadic = G__5199__delegate;
                          return G__5199;
                        }();
                      }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5166_5194, ns_5195, kw_5196, lis_5197, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, 
                      _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
                    }();
                    fexpr__5169_5198.cljs$core$IFn$_invoke$arity$2 ? fexpr__5169_5198.cljs$core$IFn$_invoke$arity$2(ns_5195, kw_5196) : fexpr__5169_5198.call(null, ns_5195, kw_5196);
                    if (cljs.core.sequential_QMARK_(lis_5197)) {
                      var fexpr__5170_5202 = function() {
                        var format_in__2742__auto__ = cljs.core.vector_QMARK_(lis_5197) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
                        return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5166_5194, ns_5195, kw_5196, lis_5197, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, 
                        _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                          return function() {
                            var G__5203__delegate = function(args__2744__auto__) {
                              var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                              return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                            };
                            var G__5203 = function(var_args) {
                              var args__2744__auto__ = null;
                              if (arguments.length > 0) {
                                var G__5204__i = 0, G__5204__a = new Array(arguments.length - 0);
                                while (G__5204__i < G__5204__a.length) {
                                  G__5204__a[G__5204__i] = arguments[G__5204__i + 0];
                                  ++G__5204__i;
                                }
                                args__2744__auto__ = new cljs.core.IndexedSeq(G__5204__a, 0, null);
                              }
                              return G__5203__delegate.call(this, args__2744__auto__);
                            };
                            G__5203.cljs$lang$maxFixedArity = 0;
                            G__5203.cljs$lang$applyTo = function(arglist__5205) {
                              var args__2744__auto__ = cljs.core.seq(arglist__5205);
                              return G__5203__delegate(args__2744__auto__);
                            };
                            G__5203.cljs$core$IFn$_invoke$arity$variadic = G__5203__delegate;
                            return G__5203;
                          }();
                        }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5166_5194, ns_5195, kw_5196, lis_5197, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, 
                        _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
                      }();
                      fexpr__5170_5202.cljs$core$IFn$_invoke$arity$1 ? fexpr__5170_5202.cljs$core$IFn$_invoke$arity$1(lis_5197) : fexpr__5170_5202.call(null, lis_5197);
                    } else {
                      cljs.pprint.write_out(lis_5197);
                    }
                  } else {
                    cljs.core.apply.cljs$core$IFn$_invoke$arity$2(function() {
                      var format_in__2742__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
                      return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, 
                      vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                        return function() {
                          var G__5206__delegate = function(args__2744__auto__) {
                            var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                            return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                          };
                          var G__5206 = function(var_args) {
                            var args__2744__auto__ = null;
                            if (arguments.length > 0) {
                              var G__5207__i = 0, G__5207__a = new Array(arguments.length - 0);
                              while (G__5207__i < G__5207__a.length) {
                                G__5207__a[G__5207__i] = arguments[G__5207__i + 0];
                                ++G__5207__i;
                              }
                              args__2744__auto__ = new cljs.core.IndexedSeq(G__5207__a, 0, null);
                            }
                            return G__5206__delegate.call(this, args__2744__auto__);
                          };
                          G__5206.cljs$lang$maxFixedArity = 0;
                          G__5206.cljs$lang$applyTo = function(arglist__5208) {
                            var args__2744__auto__ = cljs.core.seq(arglist__5208);
                            return G__5206__delegate(args__2744__auto__);
                          };
                          G__5206.cljs$core$IFn$_invoke$arity$variadic = G__5206__delegate;
                          return G__5206;
                        }();
                      }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5162_5190, _STAR_current_length_STAR__orig_val__5163_5191, _STAR_current_level_STAR__temp_val__5164_5192, _STAR_current_length_STAR__temp_val__5165_5193, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, 
                      vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
                    }(), arg_5186);
                  }
                  cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5163_5191;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5162_5190;
                }
              }
              if (cljs.core.next(args_5181__$1)) {
                var fexpr__5171_5209 = function() {
                  var format_in__2742__auto__ = "~_";
                  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
                  return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                    return function() {
                      var G__5210__delegate = function(args__2744__auto__) {
                        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                      };
                      var G__5210 = function(var_args) {
                        var args__2744__auto__ = null;
                        if (arguments.length > 0) {
                          var G__5211__i = 0, G__5211__a = new Array(arguments.length - 0);
                          while (G__5211__i < G__5211__a.length) {
                            G__5211__a[G__5211__i] = arguments[G__5211__i + 0];
                            ++G__5211__i;
                          }
                          args__2744__auto__ = new cljs.core.IndexedSeq(G__5211__a, 0, null);
                        }
                        return G__5210__delegate.call(this, args__2744__auto__);
                      };
                      G__5210.cljs$lang$maxFixedArity = 0;
                      G__5210.cljs$lang$applyTo = function(arglist__5212) {
                        var args__2744__auto__ = cljs.core.seq(arglist__5212);
                        return G__5210__delegate(args__2744__auto__);
                      };
                      G__5210.cljs$core$IFn$_invoke$arity$variadic = G__5210__delegate;
                      return G__5210;
                    }();
                  }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, vec__5159_5187, start_5188__$1, end_5189__$1, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
                }();
                fexpr__5171_5209.cljs$core$IFn$_invoke$arity$0 ? fexpr__5171_5209.cljs$core$IFn$_invoke$arity$0() : fexpr__5171_5209.call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out(arg_5186);
              if (cljs.core.next(args_5181__$1)) {
                var fexpr__5172_5213 = function() {
                  var format_in__2742__auto__ = "~:_";
                  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
                  return function(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args) {
                    return function() {
                      var G__5214__delegate = function(args__2744__auto__) {
                        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                      };
                      var G__5214 = function(var_args) {
                        var args__2744__auto__ = null;
                        if (arguments.length > 0) {
                          var G__5215__i = 0, G__5215__a = new Array(arguments.length - 0);
                          while (G__5215__i < G__5215__a.length) {
                            G__5215__a[G__5215__i] = arguments[G__5215__i + 0];
                            ++G__5215__i;
                          }
                          args__2744__auto__ = new cljs.core.IndexedSeq(G__5215__a, 0, null);
                        }
                        return G__5214__delegate.call(this, args__2744__auto__);
                      };
                      G__5214.cljs$lang$maxFixedArity = 0;
                      G__5214.cljs$lang$applyTo = function(arglist__5216) {
                        var args__2744__auto__ = cljs.core.seq(arglist__5216);
                        return G__5214__delegate(args__2744__auto__);
                      };
                      G__5214.cljs$core$IFn$_invoke$arity$variadic = G__5214__delegate;
                      return G__5214;
                    }();
                  }(args_5181__$1, format_in__2742__auto__, cf__2743__auto__, arg_5186, _STAR_current_level_STAR__orig_val__5153_5173, _STAR_current_length_STAR__orig_val__5154_5174, _STAR_current_level_STAR__temp_val__5155_5175, _STAR_current_length_STAR__temp_val__5156_5176, vec__5147, start, end, vec__5150, seq__5151, first__5152, seq__5151__$1, keyw, args);
                }();
                fexpr__5172_5213.cljs$core$IFn$_invoke$arity$0 ? fexpr__5172_5213.cljs$core$IFn$_invoke$arity$0() : fexpr__5172_5213.call(null);
              } else {
              }
            }
            var G__5217 = cljs.core.next(args_5181__$1);
            args_5181__$1 = G__5217;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5154_5174;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5153_5173;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out(reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next(alis)) {
    var vec__5218 = alis;
    var seq__5219 = cljs.core.seq(vec__5218);
    var first__5220 = cljs.core.first(seq__5219);
    var seq__5219__$1 = cljs.core.next(seq__5219);
    var ns_sym = first__5220;
    var first__5220__$1 = cljs.core.first(seq__5219__$1);
    var seq__5219__$2 = cljs.core.next(seq__5219__$1);
    var ns_name = first__5220__$1;
    var stuff = seq__5219__$2;
    var vec__5221 = typeof cljs.core.first(stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff), cljs.core.next(stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5221, 0, null);
    var stuff__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5221, 1, null);
    var vec__5224 = cljs.core.map_QMARK_(cljs.core.first(stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1), cljs.core.next(stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5224, 0, null);
    var references = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5224, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__5227_5236 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__5228_5237 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__5229_5238 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__5230_5239 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5229_5238;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5230_5239;
      try {
        cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
        var fexpr__5231_5240 = function() {
          var format_in__2742__auto__ = "~w ~1I~@_~w";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references) {
            return function() {
              var G__5241__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5241 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5242__i = 0, G__5242__a = new Array(arguments.length - 0);
                  while (G__5242__i < G__5242__a.length) {
                    G__5242__a[G__5242__i] = arguments[G__5242__i + 0];
                    ++G__5242__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5242__a, 0, null);
                }
                return G__5241__delegate.call(this, args__2744__auto__);
              };
              G__5241.cljs$lang$maxFixedArity = 0;
              G__5241.cljs$lang$applyTo = function(arglist__5243) {
                var args__2744__auto__ = cljs.core.seq(arglist__5243);
                return G__5241__delegate(args__2744__auto__);
              };
              G__5241.cljs$core$IFn$_invoke$arity$variadic = G__5241__delegate;
              return G__5241;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references);
        }();
        fexpr__5231_5240.cljs$core$IFn$_invoke$arity$2 ? fexpr__5231_5240.cljs$core$IFn$_invoke$arity$2(ns_sym, ns_name) : fexpr__5231_5240.call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4131__auto__ = doc_str;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            var or__4131__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4131__auto____$1)) {
              return or__4131__auto____$1;
            } else {
              return cljs.core.seq(references);
            }
          }
        }())) {
          var fexpr__5232_5244 = function() {
            var format_in__2742__auto__ = "~@:_";
            var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
            return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references) {
              return function() {
                var G__5245__delegate = function(args__2744__auto__) {
                  var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                  return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                };
                var G__5245 = function(var_args) {
                  var args__2744__auto__ = null;
                  if (arguments.length > 0) {
                    var G__5246__i = 0, G__5246__a = new Array(arguments.length - 0);
                    while (G__5246__i < G__5246__a.length) {
                      G__5246__a[G__5246__i] = arguments[G__5246__i + 0];
                      ++G__5246__i;
                    }
                    args__2744__auto__ = new cljs.core.IndexedSeq(G__5246__a, 0, null);
                  }
                  return G__5245__delegate.call(this, args__2744__auto__);
                };
                G__5245.cljs$lang$maxFixedArity = 0;
                G__5245.cljs$lang$applyTo = function(arglist__5247) {
                  var args__2744__auto__ = cljs.core.seq(arglist__5247);
                  return G__5245__delegate(args__2744__auto__);
                };
                G__5245.cljs$core$IFn$_invoke$arity$variadic = G__5245__delegate;
                return G__5245;
              }();
            }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references);
          }();
          fexpr__5232_5244.cljs$core$IFn$_invoke$arity$0 ? fexpr__5232_5244.cljs$core$IFn$_invoke$arity$0() : fexpr__5232_5244.call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true, '"~a"~:[~;~:@_~]', cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([doc_str, function() {
            var or__4131__auto__ = attr_map;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return cljs.core.seq(references);
            }
          }()], 0));
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          var G__5234_5248 = attr_map;
          var G__5235_5249 = cljs.core.seq(references);
          var fexpr__5233_5250 = function() {
            var format_in__2742__auto__ = "~w~:[~;~:@_~]";
            var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
            return function(format_in__2742__auto__, cf__2743__auto__, G__5234_5248, G__5235_5249, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references) {
              return function() {
                var G__5251__delegate = function(args__2744__auto__) {
                  var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                  return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                };
                var G__5251 = function(var_args) {
                  var args__2744__auto__ = null;
                  if (arguments.length > 0) {
                    var G__5252__i = 0, G__5252__a = new Array(arguments.length - 0);
                    while (G__5252__i < G__5252__a.length) {
                      G__5252__a[G__5252__i] = arguments[G__5252__i + 0];
                      ++G__5252__i;
                    }
                    args__2744__auto__ = new cljs.core.IndexedSeq(G__5252__a, 0, null);
                  }
                  return G__5251__delegate.call(this, args__2744__auto__);
                };
                G__5251.cljs$lang$maxFixedArity = 0;
                G__5251.cljs$lang$applyTo = function(arglist__5253) {
                  var args__2744__auto__ = cljs.core.seq(arglist__5253);
                  return G__5251__delegate(args__2744__auto__);
                };
                G__5251.cljs$core$IFn$_invoke$arity$variadic = G__5251__delegate;
                return G__5251;
              }();
            }(format_in__2742__auto__, cf__2743__auto__, G__5234_5248, G__5235_5249, _STAR_current_level_STAR__orig_val__5227_5236, _STAR_current_length_STAR__orig_val__5228_5237, _STAR_current_level_STAR__temp_val__5229_5238, _STAR_current_length_STAR__temp_val__5230_5239, vec__5218, seq__5219, first__5220, seq__5219__$1, ns_sym, first__5220__$1, seq__5219__$2, ns_name, stuff, vec__5221, doc_str, stuff__$1, vec__5224, attr_map, references);
          }();
          fexpr__5233_5250.cljs$core$IFn$_invoke$arity$2 ? fexpr__5233_5250.cljs$core$IFn$_invoke$arity$2(G__5234_5248, G__5235_5249) : fexpr__5233_5250.call(null, G__5234_5248, G__5235_5249);
        } else {
        }
        var references_5254__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference(cljs.core.first(references_5254__$1));
          var temp__5720__auto___5255 = cljs.core.next(references_5254__$1);
          if (temp__5720__auto___5255) {
            var references_5256__$2 = temp__5720__auto___5255;
            cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__5257 = references_5256__$2;
            references_5254__$1 = G__5257;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5228_5237;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5227_5236;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out(alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__2742__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
  return function(format_in__2742__auto__, cf__2743__auto__) {
    return function() {
      var G__5258__delegate = function(args__2744__auto__) {
        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
      };
      var G__5258 = function(var_args) {
        var args__2744__auto__ = null;
        if (arguments.length > 0) {
          var G__5259__i = 0, G__5259__a = new Array(arguments.length - 0);
          while (G__5259__i < G__5259__a.length) {
            G__5259__a[G__5259__i] = arguments[G__5259__i + 0];
            ++G__5259__i;
          }
          args__2744__auto__ = new cljs.core.IndexedSeq(G__5259__a, 0, null);
        }
        return G__5258__delegate.call(this, args__2744__auto__);
      };
      G__5258.cljs$lang$maxFixedArity = 0;
      G__5258.cljs$lang$applyTo = function(arglist__5260) {
        var args__2744__auto__ = cljs.core.seq(arglist__5260);
        return G__5258__delegate(args__2744__auto__);
      };
      G__5258.cljs$core$IFn$_invoke$arity$variadic = G__5258__delegate;
      return G__5258;
    }();
  }(format_in__2742__auto__, cf__2743__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq(alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      var fexpr__5261_5264 = function() {
        var format_in__2742__auto__ = " ~_";
        var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
        return function(format_in__2742__auto__, cf__2743__auto__) {
          return function() {
            var G__5265__delegate = function(args__2744__auto__) {
              var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
              return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
            };
            var G__5265 = function(var_args) {
              var args__2744__auto__ = null;
              if (arguments.length > 0) {
                var G__5266__i = 0, G__5266__a = new Array(arguments.length - 0);
                while (G__5266__i < G__5266__a.length) {
                  G__5266__a[G__5266__i] = arguments[G__5266__i + 0];
                  ++G__5266__i;
                }
                args__2744__auto__ = new cljs.core.IndexedSeq(G__5266__a, 0, null);
              }
              return G__5265__delegate.call(this, args__2744__auto__);
            };
            G__5265.cljs$lang$maxFixedArity = 0;
            G__5265.cljs$lang$applyTo = function(arglist__5267) {
              var args__2744__auto__ = cljs.core.seq(arglist__5267);
              return G__5265__delegate(args__2744__auto__);
            };
            G__5265.cljs$core$IFn$_invoke$arity$variadic = G__5265__delegate;
            return G__5265;
          }();
        }(format_in__2742__auto__, cf__2743__auto__);
      }();
      fexpr__5261_5264.cljs$core$IFn$_invoke$arity$0 ? fexpr__5261_5264.cljs$core$IFn$_invoke$arity$0() : fexpr__5261_5264.call(null);
    } else {
      var fexpr__5262_5268 = function() {
        var format_in__2742__auto__ = " ~@_";
        var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
        return function(format_in__2742__auto__, cf__2743__auto__) {
          return function() {
            var G__5269__delegate = function(args__2744__auto__) {
              var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
              return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
            };
            var G__5269 = function(var_args) {
              var args__2744__auto__ = null;
              if (arguments.length > 0) {
                var G__5270__i = 0, G__5270__a = new Array(arguments.length - 0);
                while (G__5270__i < G__5270__a.length) {
                  G__5270__a[G__5270__i] = arguments[G__5270__i + 0];
                  ++G__5270__i;
                }
                args__2744__auto__ = new cljs.core.IndexedSeq(G__5270__a, 0, null);
              }
              return G__5269__delegate.call(this, args__2744__auto__);
            };
            G__5269.cljs$lang$maxFixedArity = 0;
            G__5269.cljs$lang$applyTo = function(arglist__5271) {
              var args__2744__auto__ = cljs.core.seq(arglist__5271);
              return G__5269__delegate(args__2744__auto__);
            };
            G__5269.cljs$core$IFn$_invoke$arity$variadic = G__5269__delegate;
            return G__5269;
          }();
        }(format_in__2742__auto__, cf__2743__auto__);
      }();
      fexpr__5262_5268.cljs$core$IFn$_invoke$arity$0 ? fexpr__5262_5268.cljs$core$IFn$_invoke$arity$0() : fexpr__5262_5268.call(null);
    }
    var fexpr__5263 = function() {
      var format_in__2742__auto__ = "~{~w~^ ~_~}";
      var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
      return function(format_in__2742__auto__, cf__2743__auto__) {
        return function() {
          var G__5272__delegate = function(args__2744__auto__) {
            var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
            return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
          };
          var G__5272 = function(var_args) {
            var args__2744__auto__ = null;
            if (arguments.length > 0) {
              var G__5273__i = 0, G__5273__a = new Array(arguments.length - 0);
              while (G__5273__i < G__5273__a.length) {
                G__5273__a[G__5273__i] = arguments[G__5273__i + 0];
                ++G__5273__i;
              }
              args__2744__auto__ = new cljs.core.IndexedSeq(G__5273__a, 0, null);
            }
            return G__5272__delegate.call(this, args__2744__auto__);
          };
          G__5272.cljs$lang$maxFixedArity = 0;
          G__5272.cljs$lang$applyTo = function(arglist__5274) {
            var args__2744__auto__ = cljs.core.seq(arglist__5274);
            return G__5272__delegate(args__2744__auto__);
          };
          G__5272.cljs$core$IFn$_invoke$arity$variadic = G__5272__delegate;
          return G__5272;
        }();
      }(format_in__2742__auto__, cf__2743__auto__);
    }();
    return fexpr__5263.cljs$core$IFn$_invoke$arity$1 ? fexpr__5263.cljs$core$IFn$_invoke$arity$1(alis) : fexpr__5263.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq(alis)) {
    var fexpr__5275 = function() {
      var format_in__2742__auto__ = " ~_~{~w~^ ~_~}";
      var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
      return function(format_in__2742__auto__, cf__2743__auto__) {
        return function() {
          var G__5276__delegate = function(args__2744__auto__) {
            var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
            return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
          };
          var G__5276 = function(var_args) {
            var args__2744__auto__ = null;
            if (arguments.length > 0) {
              var G__5277__i = 0, G__5277__a = new Array(arguments.length - 0);
              while (G__5277__i < G__5277__a.length) {
                G__5277__a[G__5277__i] = arguments[G__5277__i + 0];
                ++G__5277__i;
              }
              args__2744__auto__ = new cljs.core.IndexedSeq(G__5277__a, 0, null);
            }
            return G__5276__delegate.call(this, args__2744__auto__);
          };
          G__5276.cljs$lang$maxFixedArity = 0;
          G__5276.cljs$lang$applyTo = function(arglist__5278) {
            var args__2744__auto__ = cljs.core.seq(arglist__5278);
            return G__5276__delegate(args__2744__auto__);
          };
          G__5276.cljs$core$IFn$_invoke$arity$variadic = G__5276__delegate;
          return G__5276;
        }();
      }(format_in__2742__auto__, cf__2743__auto__);
    }();
    return fexpr__5275.cljs$core$IFn$_invoke$arity$1 ? fexpr__5275.cljs$core$IFn$_invoke$arity$1(alis) : fexpr__5275.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next(alis)) {
    var vec__5279 = alis;
    var seq__5280 = cljs.core.seq(vec__5279);
    var first__5281 = cljs.core.first(seq__5280);
    var seq__5280__$1 = cljs.core.next(seq__5280);
    var defn_sym = first__5281;
    var first__5281__$1 = cljs.core.first(seq__5280__$1);
    var seq__5280__$2 = cljs.core.next(seq__5280__$1);
    var defn_name = first__5281__$1;
    var stuff = seq__5280__$2;
    var vec__5282 = typeof cljs.core.first(stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff), cljs.core.next(stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5282, 0, null);
    var stuff__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5282, 1, null);
    var vec__5285 = cljs.core.map_QMARK_(cljs.core.first(stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1), cljs.core.next(stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5285, 0, null);
    var stuff__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5285, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__5288_5295 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__5289_5296 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__5290_5297 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__5291_5298 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5290_5297;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5291_5298;
      try {
        cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
        var fexpr__5292_5299 = function() {
          var format_in__2742__auto__ = "~w ~1I~@_~w";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2) {
            return function() {
              var G__5300__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5300 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5301__i = 0, G__5301__a = new Array(arguments.length - 0);
                  while (G__5301__i < G__5301__a.length) {
                    G__5301__a[G__5301__i] = arguments[G__5301__i + 0];
                    ++G__5301__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5301__a, 0, null);
                }
                return G__5300__delegate.call(this, args__2744__auto__);
              };
              G__5300.cljs$lang$maxFixedArity = 0;
              G__5300.cljs$lang$applyTo = function(arglist__5302) {
                var args__2744__auto__ = cljs.core.seq(arglist__5302);
                return G__5300__delegate(args__2744__auto__);
              };
              G__5300.cljs$core$IFn$_invoke$arity$variadic = G__5300__delegate;
              return G__5300;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2);
        }();
        fexpr__5292_5299.cljs$core$IFn$_invoke$arity$2 ? fexpr__5292_5299.cljs$core$IFn$_invoke$arity$2(defn_sym, defn_name) : fexpr__5292_5299.call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          var fexpr__5293_5303 = function() {
            var format_in__2742__auto__ = " ~_~w";
            var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
            return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2) {
              return function() {
                var G__5304__delegate = function(args__2744__auto__) {
                  var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                  return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                };
                var G__5304 = function(var_args) {
                  var args__2744__auto__ = null;
                  if (arguments.length > 0) {
                    var G__5305__i = 0, G__5305__a = new Array(arguments.length - 0);
                    while (G__5305__i < G__5305__a.length) {
                      G__5305__a[G__5305__i] = arguments[G__5305__i + 0];
                      ++G__5305__i;
                    }
                    args__2744__auto__ = new cljs.core.IndexedSeq(G__5305__a, 0, null);
                  }
                  return G__5304__delegate.call(this, args__2744__auto__);
                };
                G__5304.cljs$lang$maxFixedArity = 0;
                G__5304.cljs$lang$applyTo = function(arglist__5306) {
                  var args__2744__auto__ = cljs.core.seq(arglist__5306);
                  return G__5304__delegate(args__2744__auto__);
                };
                G__5304.cljs$core$IFn$_invoke$arity$variadic = G__5304__delegate;
                return G__5304;
              }();
            }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2);
          }();
          fexpr__5293_5303.cljs$core$IFn$_invoke$arity$1 ? fexpr__5293_5303.cljs$core$IFn$_invoke$arity$1(doc_str) : fexpr__5293_5303.call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          var fexpr__5294_5307 = function() {
            var format_in__2742__auto__ = " ~_~w";
            var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
            return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2) {
              return function() {
                var G__5308__delegate = function(args__2744__auto__) {
                  var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                  return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
                };
                var G__5308 = function(var_args) {
                  var args__2744__auto__ = null;
                  if (arguments.length > 0) {
                    var G__5309__i = 0, G__5309__a = new Array(arguments.length - 0);
                    while (G__5309__i < G__5309__a.length) {
                      G__5309__a[G__5309__i] = arguments[G__5309__i + 0];
                      ++G__5309__i;
                    }
                    args__2744__auto__ = new cljs.core.IndexedSeq(G__5309__a, 0, null);
                  }
                  return G__5308__delegate.call(this, args__2744__auto__);
                };
                G__5308.cljs$lang$maxFixedArity = 0;
                G__5308.cljs$lang$applyTo = function(arglist__5310) {
                  var args__2744__auto__ = cljs.core.seq(arglist__5310);
                  return G__5308__delegate(args__2744__auto__);
                };
                G__5308.cljs$core$IFn$_invoke$arity$variadic = G__5308__delegate;
                return G__5308;
              }();
            }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5288_5295, _STAR_current_length_STAR__orig_val__5289_5296, _STAR_current_level_STAR__temp_val__5290_5297, _STAR_current_length_STAR__temp_val__5291_5298, vec__5279, seq__5280, first__5281, seq__5280__$1, defn_sym, first__5281__$1, seq__5280__$2, defn_name, stuff, vec__5282, doc_str, stuff__$1, vec__5285, attr_map, stuff__$2);
          }();
          fexpr__5294_5307.cljs$core$IFn$_invoke$arity$1 ? fexpr__5294_5307.cljs$core$IFn$_invoke$arity$1(attr_map) : fexpr__5294_5307.call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_(cljs.core.first(stuff__$2))) {
          cljs.pprint.single_defn(stuff__$2, function() {
            var or__4131__auto__ = doc_str;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn(stuff__$2, function() {
            var or__4131__auto__ = doc_str;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5289_5296;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5288_5295;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list(alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5311_5320 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5312_5321 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5313_5322 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5314_5323 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5313_5322;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5314_5323;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count5315_5324 = 0;
      var binding_5325 = binding_vec;
      while (true) {
        if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5315_5324 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq(binding_5325)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
              cljs.core._write(cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__5316_5326 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__5317_5327 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__5318_5328 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__5319_5329 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5318_5328;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5319_5329;
              try {
                cljs.pprint.start_block(cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out(cljs.core.first(binding_5325));
                if (cljs.core.next(binding_5325)) {
                  cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out(cljs.core.second(binding_5325));
                } else {
                }
                cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5317_5327;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5316_5326;
              }
            }
            if (cljs.core.next(cljs.core.rest(binding_5325))) {
              cljs.core._write(cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__5330 = length_count5315_5324 + 1;
              var G__5331 = cljs.core.next(cljs.core.rest(binding_5325));
              length_count5315_5324 = G__5330;
              binding_5325 = G__5331;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write(cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5312_5321;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5311_5320;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first(alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5332_5339 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5333_5340 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5334_5341 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5335_5342 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5334_5341;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5335_5342;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next(alis) && cljs.core.vector_QMARK_(cljs.core.second(alis))) {
        var fexpr__5336_5343 = function() {
          var format_in__2742__auto__ = "~w ~1I~@_";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5332_5339, _STAR_current_length_STAR__orig_val__5333_5340, _STAR_current_level_STAR__temp_val__5334_5341, _STAR_current_length_STAR__temp_val__5335_5342, base_sym) {
            return function() {
              var G__5344__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5344 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5345__i = 0, G__5345__a = new Array(arguments.length - 0);
                  while (G__5345__i < G__5345__a.length) {
                    G__5345__a[G__5345__i] = arguments[G__5345__i + 0];
                    ++G__5345__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5345__a, 0, null);
                }
                return G__5344__delegate.call(this, args__2744__auto__);
              };
              G__5344.cljs$lang$maxFixedArity = 0;
              G__5344.cljs$lang$applyTo = function(arglist__5346) {
                var args__2744__auto__ = cljs.core.seq(arglist__5346);
                return G__5344__delegate(args__2744__auto__);
              };
              G__5344.cljs$core$IFn$_invoke$arity$variadic = G__5344__delegate;
              return G__5344;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5332_5339, _STAR_current_length_STAR__orig_val__5333_5340, _STAR_current_level_STAR__temp_val__5334_5341, _STAR_current_length_STAR__temp_val__5335_5342, base_sym);
        }();
        fexpr__5336_5343.cljs$core$IFn$_invoke$arity$1 ? fexpr__5336_5343.cljs$core$IFn$_invoke$arity$1(base_sym) : fexpr__5336_5343.call(null, base_sym);
        cljs.pprint.pprint_binding_form(cljs.core.second(alis));
        var G__5338_5347 = cljs.core.next(cljs.core.rest(alis));
        var fexpr__5337_5348 = function() {
          var format_in__2742__auto__ = " ~_~{~w~^ ~_~}";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, G__5338_5347, _STAR_current_level_STAR__orig_val__5332_5339, _STAR_current_length_STAR__orig_val__5333_5340, _STAR_current_level_STAR__temp_val__5334_5341, _STAR_current_length_STAR__temp_val__5335_5342, base_sym) {
            return function() {
              var G__5349__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5349 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5350__i = 0, G__5350__a = new Array(arguments.length - 0);
                  while (G__5350__i < G__5350__a.length) {
                    G__5350__a[G__5350__i] = arguments[G__5350__i + 0];
                    ++G__5350__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5350__a, 0, null);
                }
                return G__5349__delegate.call(this, args__2744__auto__);
              };
              G__5349.cljs$lang$maxFixedArity = 0;
              G__5349.cljs$lang$applyTo = function(arglist__5351) {
                var args__2744__auto__ = cljs.core.seq(arglist__5351);
                return G__5349__delegate(args__2744__auto__);
              };
              G__5349.cljs$core$IFn$_invoke$arity$variadic = G__5349__delegate;
              return G__5349;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, G__5338_5347, _STAR_current_level_STAR__orig_val__5332_5339, _STAR_current_length_STAR__orig_val__5333_5340, _STAR_current_level_STAR__temp_val__5334_5341, _STAR_current_length_STAR__temp_val__5335_5342, base_sym);
        }();
        fexpr__5337_5348.cljs$core$IFn$_invoke$arity$1 ? fexpr__5337_5348.cljs$core$IFn$_invoke$arity$1(G__5338_5347) : fexpr__5337_5348.call(null, G__5338_5347);
      } else {
        cljs.pprint.pprint_simple_code_list(alis);
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5333_5340;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5332_5339;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__2742__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
  return function(format_in__2742__auto__, cf__2743__auto__) {
    return function() {
      var G__5352__delegate = function(args__2744__auto__) {
        var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
        return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
      };
      var G__5352 = function(var_args) {
        var args__2744__auto__ = null;
        if (arguments.length > 0) {
          var G__5353__i = 0, G__5353__a = new Array(arguments.length - 0);
          while (G__5353__i < G__5353__a.length) {
            G__5353__a[G__5353__i] = arguments[G__5353__i + 0];
            ++G__5353__i;
          }
          args__2744__auto__ = new cljs.core.IndexedSeq(G__5353__a, 0, null);
        }
        return G__5352__delegate.call(this, args__2744__auto__);
      };
      G__5352.cljs$lang$maxFixedArity = 0;
      G__5352.cljs$lang$applyTo = function(arglist__5354) {
        var args__2744__auto__ = cljs.core.seq(arglist__5354);
        return G__5352__delegate(args__2744__auto__);
      };
      G__5352.cljs$core$IFn$_invoke$arity$variadic = G__5352__delegate;
      return G__5352;
    }();
  }(format_in__2742__auto__, cf__2743__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5355_5364 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5356_5365 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5357_5366 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5358_5367 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5357_5366;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5358_5367;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent(new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out(cljs.core.first(alis));
      if (cljs.core.next(alis)) {
        cljs.core._write(cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count5359_5368 = 0;
        var alis_5369__$1 = cljs.core.next(alis);
        while (true) {
          if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5359_5368 < cljs.core._STAR_print_length_STAR_) {
            if (alis_5369__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
                cljs.core._write(cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__5360_5370 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__5361_5371 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__5362_5372 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__5363_5373 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5362_5372;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5363_5373;
                try {
                  cljs.pprint.start_block(cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out(cljs.core.first(alis_5369__$1));
                  if (cljs.core.next(alis_5369__$1)) {
                    cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out(cljs.core.second(alis_5369__$1));
                  } else {
                  }
                  cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5361_5371;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5360_5370;
                }
              }
              if (cljs.core.next(cljs.core.rest(alis_5369__$1))) {
                cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__5374 = length_count5359_5368 + 1;
                var G__5375 = cljs.core.next(cljs.core.rest(alis_5369__$1));
                length_count5359_5368 = G__5374;
                alis_5369__$1 = G__5375;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write(cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5356_5365;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5355_5364;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count(alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
      cljs.core._write(cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__5376_5385 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__5377_5386 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__5378_5387 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__5379_5388 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5378_5387;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5379_5388;
      try {
        cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent(new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.cljs$core$IFn$_invoke$arity$2(function() {
          var format_in__2742__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
          return function(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5376_5385, _STAR_current_length_STAR__orig_val__5377_5386, _STAR_current_level_STAR__temp_val__5378_5387, _STAR_current_length_STAR__temp_val__5379_5388) {
            return function() {
              var G__5389__delegate = function(args__2744__auto__) {
                var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
                return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
              };
              var G__5389 = function(var_args) {
                var args__2744__auto__ = null;
                if (arguments.length > 0) {
                  var G__5390__i = 0, G__5390__a = new Array(arguments.length - 0);
                  while (G__5390__i < G__5390__a.length) {
                    G__5390__a[G__5390__i] = arguments[G__5390__i + 0];
                    ++G__5390__i;
                  }
                  args__2744__auto__ = new cljs.core.IndexedSeq(G__5390__a, 0, null);
                }
                return G__5389__delegate.call(this, args__2744__auto__);
              };
              G__5389.cljs$lang$maxFixedArity = 0;
              G__5389.cljs$lang$applyTo = function(arglist__5391) {
                var args__2744__auto__ = cljs.core.seq(arglist__5391);
                return G__5389__delegate(args__2744__auto__);
              };
              G__5389.cljs$core$IFn$_invoke$arity$variadic = G__5389__delegate;
              return G__5389;
            }();
          }(format_in__2742__auto__, cf__2743__auto__, _STAR_current_level_STAR__orig_val__5376_5385, _STAR_current_length_STAR__orig_val__5377_5386, _STAR_current_level_STAR__temp_val__5378_5387, _STAR_current_length_STAR__temp_val__5379_5388);
        }(), alis);
        var length_count5380_5392 = 0;
        var alis_5393__$1 = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(3, alis));
        while (true) {
          if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5380_5392 < cljs.core._STAR_print_length_STAR_) {
            if (alis_5393__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
                cljs.core._write(cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__5381_5394 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__5382_5395 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__5383_5396 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__5384_5397 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5383_5396;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5384_5397;
                try {
                  cljs.pprint.start_block(cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out(cljs.core.first(alis_5393__$1));
                  if (cljs.core.next(alis_5393__$1)) {
                    cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out(cljs.core.second(alis_5393__$1));
                  } else {
                  }
                  cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5382_5395;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5381_5394;
                }
              }
              if (cljs.core.next(cljs.core.rest(alis_5393__$1))) {
                cljs.core._write(cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__5398 = length_count5380_5392 + 1;
                var G__5399 = cljs.core.next(cljs.core.rest(alis_5393__$1));
                length_count5380_5392 = G__5398;
                alis_5393__$1 = G__5399;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write(cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5377_5386;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5376_5385;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list(alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second(alis);
  var nlis = cljs.core.first(cljs.core.rest(cljs.core.rest(alis)));
  if (cljs.core.vector_QMARK_(args)) {
    var _STAR_symbol_map_STAR__orig_val__5402 = cljs.pprint._STAR_symbol_map_STAR_;
    var _STAR_symbol_map_STAR__temp_val__5403 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(args)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(args), "%"]) : cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(_STAR_symbol_map_STAR__orig_val__5402, args, nlis) {
      return function(p1__5400_SHARP_, p2__5401_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__5400_SHARP_, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__5401_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR__orig_val__5402, args, nlis), args, cljs.core.range.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(args) + 1)));
    cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__temp_val__5403;
    try {
      var fexpr__5404 = function() {
        var format_in__2742__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__2743__auto__ = typeof format_in__2742__auto__ === "string" ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.cached_compile.cljs$core$IFn$_invoke$arity$1(format_in__2742__auto__) : cljs.pprint.cached_compile.call(null, format_in__2742__auto__) : format_in__2742__auto__;
        return function(format_in__2742__auto__, cf__2743__auto__, _STAR_symbol_map_STAR__orig_val__5402, _STAR_symbol_map_STAR__temp_val__5403, args, nlis) {
          return function() {
            var G__5405__delegate = function(args__2744__auto__) {
              var navigator__2745__auto__ = cljs.pprint.init_navigator(args__2744__auto__);
              return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__2743__auto__, navigator__2745__auto__);
            };
            var G__5405 = function(var_args) {
              var args__2744__auto__ = null;
              if (arguments.length > 0) {
                var G__5406__i = 0, G__5406__a = new Array(arguments.length - 0);
                while (G__5406__i < G__5406__a.length) {
                  G__5406__a[G__5406__i] = arguments[G__5406__i + 0];
                  ++G__5406__i;
                }
                args__2744__auto__ = new cljs.core.IndexedSeq(G__5406__a, 0, null);
              }
              return G__5405__delegate.call(this, args__2744__auto__);
            };
            G__5405.cljs$lang$maxFixedArity = 0;
            G__5405.cljs$lang$applyTo = function(arglist__5407) {
              var args__2744__auto__ = cljs.core.seq(arglist__5407);
              return G__5405__delegate(args__2744__auto__);
            };
            G__5405.cljs$core$IFn$_invoke$arity$variadic = G__5405__delegate;
            return G__5405;
          }();
        }(format_in__2742__auto__, cf__2743__auto__, _STAR_symbol_map_STAR__orig_val__5402, _STAR_symbol_map_STAR__temp_val__5403, args, nlis);
      }();
      return fexpr__5404.cljs$core$IFn$_invoke$arity$1 ? fexpr__5404.cljs$core$IFn$_invoke$arity$1(nlis) : fexpr__5404.call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__orig_val__5402;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list(alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded())) {
    cljs.core._write(cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__5408_5413 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__5409_5414 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__5410_5415 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__5411_5416 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__5410_5415;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__5411_5416;
    try {
      cljs.pprint.start_block(cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent(new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count5412_5417 = 0;
      var alis_5418__$1 = cljs.core.seq(alis);
      while (true) {
        if (cljs.core.not(cljs.core._STAR_print_length_STAR_) || length_count5412_5417 < cljs.core._STAR_print_length_STAR_) {
          if (alis_5418__$1) {
            cljs.pprint.write_out(cljs.core.first(alis_5418__$1));
            if (cljs.core.next(alis_5418__$1)) {
              cljs.core._write(cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline(new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__5419 = length_count5412_5417 + 1;
              var G__5420 = cljs.core.next(alis_5418__$1);
              length_count5412_5417 = G__5419;
              alis_5418__$1 = G__5420;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write(cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block(cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__5409_5414;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__5408_5413;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.identity, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([function() {
    var iter__4523__auto__ = function cljs$pprint$two_forms_$_iter__5421(s__5422) {
      return new cljs.core.LazySeq(null, function() {
        var s__5422__$1 = s__5422;
        while (true) {
          var temp__5720__auto__ = cljs.core.seq(s__5422__$1);
          if (temp__5720__auto__) {
            var s__5422__$2 = temp__5720__auto__;
            if (cljs.core.chunked_seq_QMARK_(s__5422__$2)) {
              var c__4521__auto__ = cljs.core.chunk_first(s__5422__$2);
              var size__4522__auto__ = cljs.core.count(c__4521__auto__);
              var b__5424 = cljs.core.chunk_buffer(size__4522__auto__);
              if (function() {
                var i__5423 = 0;
                while (true) {
                  if (i__5423 < size__4522__auto__) {
                    var x = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__5423);
                    cljs.core.chunk_append(b__5424, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))), cljs.core.second(x)], null)], null));
                    var G__5425 = i__5423 + 1;
                    i__5423 = G__5425;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5424), cljs$pprint$two_forms_$_iter__5421(cljs.core.chunk_rest(s__5422__$2)));
              } else {
                return cljs.core.chunk_cons(cljs.core.chunk(b__5424), null);
              }
            } else {
              var x = cljs.core.first(s__5422__$2);
              return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))), cljs.core.second(x)], null)], null), cljs$pprint$two_forms_$_iter__5421(cljs.core.rest(s__5422__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4523__auto__(amap);
  }()], 0)));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(core) {
    return function(p1__5426_SHARP_) {
      var vec__5427 = p1__5426_SHARP_;
      var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5427, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5427, 1, null);
      if (cljs.core.not(function() {
        var or__4131__auto__ = cljs.core.namespace(s);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_(s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(core, cljs.core.name(s)), f], null);
      } else {
        return p1__5426_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms(cljs.pprint.add_core_ns(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, null), new cljs.core.Symbol(null, 
"defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, 
"when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, "cond", "cond", 1606708055, 
null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, "struct-map", "struct-map", 
-1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, 
cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not(cljs.pprint.pprint_reader_macro(alis))) {
    var temp__5718__auto__ = function() {
      var G__5430 = cljs.core.first(alis);
      return cljs.pprint._STAR_code_table_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint._STAR_code_table_STAR_.cljs$core$IFn$_invoke$arity$1(G__5430) : cljs.pprint._STAR_code_table_STAR_.call(null, G__5430);
    }();
    if (cljs.core.truth_(temp__5718__auto__)) {
      var special_form = temp__5718__auto__;
      return special_form.cljs$core$IFn$_invoke$arity$1 ? special_form.cljs$core$IFn$_invoke$arity$1(alis) : special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list(alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__5718__auto__ = sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_symbol_map_STAR_) : sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__5718__auto__)) {
    var arg_num = temp__5718__auto__;
    return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arg_num], 0));
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(sym)], 0));
    } else {
      return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.pr.cljs$core$IFn$_invoke$arity$1(sym) : cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), function() {
      var fexpr__5431 = cljs.core.get_global_hierarchy;
      return fexpr__5431.cljs$core$IFn$_invoke$arity$0 ? fexpr__5431.cljs$core$IFn$_invoke$arity$0() : fexpr__5431.call(null);
    }());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method(cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method(cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4219__auto__ = 0;
    var y__4220__auto__ = width - cljs.core.count(s);
    return x__4219__auto__ > y__4220__auto__ ? x__4219__auto__ : y__4220__auto__;
  }();
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str, clojure.string.join.cljs$core$IFn$_invoke$arity$1(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var G__5436 = arguments.length;
  switch(G__5436) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  if (cljs.core.seq(rows)) {
    var widths = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max, cljs.core.count(cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__5432_SHARP_) {
        return cljs.core.count(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(p1__5432_SHARP_, k)));
      }, rows));
    }, ks);
    var spacers = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(widths) {
      return function(p1__5433_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(p1__5433_SHARP_, "-"));
      };
    }(widths), widths);
    var fmt_row = function(widths, spacers) {
      return function(leader, divider, trailer, row) {
        return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(divider, function() {
          var iter__4523__auto__ = function(widths, spacers) {
            return function cljs$pprint$iter__5447(s__5448) {
              return new cljs.core.LazySeq(null, function(widths, spacers) {
                return function() {
                  var s__5448__$1 = s__5448;
                  while (true) {
                    var temp__5720__auto__ = cljs.core.seq(s__5448__$1);
                    if (temp__5720__auto__) {
                      var s__5448__$2 = temp__5720__auto__;
                      if (cljs.core.chunked_seq_QMARK_(s__5448__$2)) {
                        var c__4521__auto__ = cljs.core.chunk_first(s__5448__$2);
                        var size__4522__auto__ = cljs.core.count(c__4521__auto__);
                        var b__5450 = cljs.core.chunk_buffer(size__4522__auto__);
                        if (function() {
                          var i__5449 = 0;
                          while (true) {
                            if (i__5449 < size__4522__auto__) {
                              var vec__5451 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__, i__5449);
                              var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5451, 0, null);
                              var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5451, 1, null);
                              cljs.core.chunk_append(b__5450, cljs.pprint.add_padding(width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));
                              var G__5462 = i__5449 + 1;
                              i__5449 = G__5462;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons(cljs.core.chunk(b__5450), cljs$pprint$iter__5447(cljs.core.chunk_rest(s__5448__$2)));
                        } else {
                          return cljs.core.chunk_cons(cljs.core.chunk(b__5450), null);
                        }
                      } else {
                        var vec__5454 = cljs.core.first(s__5448__$2);
                        var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5454, 0, null);
                        var width = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5454, 1, null);
                        return cljs.core.cons(cljs.pprint.add_padding(width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)), cljs$pprint$iter__5447(cljs.core.rest(s__5448__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(widths, spacers), null, null);
            };
          }(widths, spacers);
          return iter__4523__auto__(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(iter__4523__auto__, widths, spacers) {
            return function(p1__5434_SHARP_) {
              return cljs.core.get.cljs$core$IFn$_invoke$arity$2(row, p1__5434_SHARP_);
            };
          }(iter__4523__auto__, widths, spacers), ks), widths));
        }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join("");
      };
    }(widths, spacers);
    cljs.core.println();
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row("| ", " | ", " |", cljs.core.zipmap(ks, ks))], 0));
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row("|-", "-+-", "-|", cljs.core.zipmap(ks, spacers))], 0));
    var seq__5457 = cljs.core.seq(rows);
    var chunk__5458 = null;
    var count__5459 = 0;
    var i__5460 = 0;
    while (true) {
      if (i__5460 < count__5459) {
        var row = chunk__5458.cljs$core$IIndexed$_nth$arity$2(null, i__5460);
        cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row("| ", " | ", " |", row)], 0));
        var G__5463 = seq__5457;
        var G__5464 = chunk__5458;
        var G__5465 = count__5459;
        var G__5466 = i__5460 + 1;
        seq__5457 = G__5463;
        chunk__5458 = G__5464;
        count__5459 = G__5465;
        i__5460 = G__5466;
        continue;
      } else {
        var temp__5720__auto__ = cljs.core.seq(seq__5457);
        if (temp__5720__auto__) {
          var seq__5457__$1 = temp__5720__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__5457__$1)) {
            var c__4550__auto__ = cljs.core.chunk_first(seq__5457__$1);
            var G__5467 = cljs.core.chunk_rest(seq__5457__$1);
            var G__5468 = c__4550__auto__;
            var G__5469 = cljs.core.count(c__4550__auto__);
            var G__5470 = 0;
            seq__5457 = G__5467;
            chunk__5458 = G__5468;
            count__5459 = G__5469;
            i__5460 = G__5470;
            continue;
          } else {
            var row = cljs.core.first(seq__5457__$1);
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row("| ", " | ", " |", row)], 0));
            var G__5471 = cljs.core.next(seq__5457__$1);
            var G__5472 = null;
            var G__5473 = 0;
            var G__5474 = 0;
            seq__5457 = G__5471;
            chunk__5458 = G__5472;
            count__5459 = G__5473;
            i__5460 = G__5474;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(cljs.core.first(rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var G__5751 = arguments.length;
  switch(G__5751) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__5752 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__5752, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint], 0));
  } else {
    return G__5752;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4131__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__4736__auto__ = [];
  var len__4730__auto___5757 = arguments.length;
  var i__4731__auto___5758 = 0;
  while (true) {
    if (i__4731__auto___5758 < len__4730__auto___5757) {
      args__4736__auto__.push(arguments[i__4731__auto___5758]);
      var G__5759 = i__4731__auto___5758 + 1;
      i__4731__auto___5758 = G__5759;
      continue;
    } else {
    }
    break;
  }
  var argseq__4737__auto__ = 2 < args__4736__auto__.length ? new cljs.core.IndexedSeq(args__4736__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4737__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in, cljs.test.get_current_env(), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq5754) {
  var G__5755 = cljs.core.first(seq5754);
  var seq5754__$1 = cljs.core.next(seq5754);
  var G__5756 = cljs.core.first(seq5754__$1);
  var seq5754__$2 = cljs.core.next(seq5754__$1);
  var self__4717__auto__ = this;
  return self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__5755, G__5756, seq5754__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env();
  cljs.test.clear_env_BANG_();
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__5761 = m;
  var map__5761__$1 = (!(map__5761 == null) ? map__5761.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__5761.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__5761) : map__5761;
  var file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__5761__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__5761__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__5761__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reverse(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__5761, map__5761__$1, file, line, column) {
    return function(p1__5760_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__5760_SHARP_));
    };
  }(map__5761, map__5761__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env())))), " (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ")"].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.reverse((new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env()))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env()))) {
    return cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.test !== "undefined" && typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__4613__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4614__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4615__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4616__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), function() {
      var fexpr__5763 = cljs.core.get_global_hierarchy;
      return fexpr__5763.cljs$core$IFn$_invoke$arity$0 ? fexpr__5763.cljs$core$IFn$_invoke$arity$0() : fexpr__5763.call(null);
    }());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.test", "report"), function(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env()), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__, hierarchy__4617__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4617__auto__, method_table__4613__auto__, prefer_table__4614__auto__, method_cache__4615__auto__, cached_hierarchy__4616__auto__);
  }();
}
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_(new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4131__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env());
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["expected:", function() {
    var G__5764 = (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m);
    return formatter_fn.cljs$core$IFn$_invoke$arity$1 ? formatter_fn.cljs$core$IFn$_invoke$arity$1(G__5764) : formatter_fn.call(null, G__5764);
  }()], 0));
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["  actual:", function() {
    var G__5765 = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    return formatter_fn.cljs$core$IFn$_invoke$arity$1 ? formatter_fn.cljs$core$IFn$_invoke$arity$1(G__5765) : formatter_fn.call(null, G__5765);
  }()], 0));
};
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_(new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["\nFAIL in", cljs.test.testing_vars_str(m)], 0));
  if (cljs.core.seq((new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env()))) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.test.testing_contexts_str()], 0));
  } else {
  }
  var temp__5720__auto___5766 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5720__auto___5766)) {
    var message_5767 = temp__5720__auto___5766;
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([message_5767], 0));
  } else {
  }
  return cljs.test.print_comparison(m);
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_(new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["\nERROR in", cljs.test.testing_vars_str(m)], 0));
  if (cljs.core.seq((new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env()))) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.test.testing_contexts_str()], 0));
  } else {
  }
  var temp__5720__auto___5768 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5720__auto___5768)) {
    var message_5769 = temp__5720__auto___5768;
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([message_5769], 0));
  } else {
  }
  return cljs.test.print_comparison(m);
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), 
  "assertions."], 0));
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors."], 0));
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["\nTesting", cljs.core.name((new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m))], 0));
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.test.report.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count(parts);
  if (cnt > 1) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(parts, cnt - 2), 10), parseInt(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(parts, cnt - 1), 10)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [NaN, NaN], null);
  }
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  var output_dir = "target/cljsbuild-compiler-0";
  var output_dir__$1 = function() {
    var G__5770 = output_dir;
    if (!clojure.string.ends_with_QMARK_(output_dir, "/")) {
      return [G__5770, "/"].join("");
    } else {
      return G__5770;
    }
  }();
  return cljs.core.first(cljs.core.last(stack_element.split(output_dir__$1)).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env());
  if (cljs.core.truth_(temp__5718__auto__)) {
    var source_map = temp__5718__auto__;
    var temp__5718__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__5718__auto____$1)) {
      var columns = temp__5718__auto____$1;
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first(function() {
        var temp__5718__auto____$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(columns, column - 1);
        if (cljs.core.truth_(temp__5718__auto____$2)) {
          var mapping = temp__5718__auto____$2;
          return mapping;
        } else {
          return cljs.core.second(cljs.core.first(columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__5718__auto__ = function() {
    var and__4120__auto__ = typeof exception.stack === "string";
    if (and__4120__auto__) {
      var G__5772 = exception.stack;
      var G__5772__$1 = G__5772 == null ? null : clojure.string.split_lines(G__5772);
      var G__5772__$2 = G__5772__$1 == null ? null : cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__5772__$1, depth);
      if (G__5772__$2 == null) {
        return null;
      } else {
        return clojure.string.trim(G__5772__$2);
      }
    } else {
      return and__4120__auto__;
    }
  }();
  if (cljs.core.truth_(temp__5718__auto__)) {
    var stack_element = temp__5718__auto__;
    var fname = cljs.test.js_filename(stack_element);
    var vec__5773 = cljs.test.js_line_and_column(stack_element);
    var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5773, 0, null);
    var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5773, 1, null);
    var vec__5776 = cljs.test.mapped_line_and_column(fname, line, column);
    var fname__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5776, 0, null);
    var line__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5776, 1, null);
    var column__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5776, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__5779 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    var G__5779__$1 = G__5779 instanceof cljs.core.Keyword ? G__5779.fqn : null;
    switch(G__5779__$1) {
      case "fail":
        return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.test.file_and_line(new Error, 4), m], 0));
        break;
      case "error":
        return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.test.file_and_line((new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m], 0));
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(m__$1) : cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__5720__auto__ = cljs.core.seq(fns);
    if (temp__5720__auto__) {
      var xs__6277__auto__ = temp__5720__auto__;
      var f = cljs.core.first(xs__6277__auto__);
      var obj = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      if (cljs.test.async_QMARK_(obj)) {
        var G__5782 = function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__6277__auto__, temp__5720__auto__) {
            return function() {
              var G__5783 = cljs.core.rest(fns);
              return cljs.test.run_block.cljs$core$IFn$_invoke$arity$1 ? cljs.test.run_block.cljs$core$IFn$_invoke$arity$1(G__5783) : cljs.test.run_block.call(null, G__5783);
            };
          }(fns, obj, f, xs__6277__auto__, temp__5720__auto__), null);
          return function(fns, d, obj, f, xs__6277__auto__, temp__5720__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_(d)) {
                return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["WARNING: Async test called done more than one time."], 0));
              } else {
                return cljs.core.deref(d);
              }
            };
          }(fns, d, obj, f, xs__6277__auto__, temp__5720__auto__);
        }();
        return obj.cljs$core$IFn$_invoke$arity$1 ? obj.cljs$core$IFn$_invoke$arity$1(G__5782) : obj.call(null, G__5782);
      } else {
        var G__5785 = function() {
          var G__5784 = cljs.core.rest(fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(obj)))) {
            return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(obj, G__5784);
          } else {
            return G__5784;
          }
        }();
        fns = G__5785;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__5786 = fns;
  if (G__5786 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(G__5786, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0));
    cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.cljs$core$IFn$_invoke$arity$0 ? t.cljs$core$IFn$_invoke$arity$0() : t.call(null);
    } catch (e5787) {
      var e = e5787;
      var G__5788 = e;
      var G__5788__$1 = G__5788 instanceof cljs.core.Keyword ? G__5788.fqn : null;
      switch(G__5788__$1) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";
          break;
        default:
          return cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__5718__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));
  if (cljs.core.truth_(temp__5718__auto__)) {
    var t = temp__5718__auto__;
    return cljs.test.test_var_block_STAR_(v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block(cljs.test.test_var_block(v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    var G__5790 = function() {
      return f2.cljs$core$IFn$_invoke$arity$1 ? f2.cljs$core$IFn$_invoke$arity$1(g) : f2.call(null, g);
    };
    return f1.cljs$core$IFn$_invoke$arity$1 ? f1.cljs$core$IFn$_invoke$arity$1(G__5790) : f1.call(null, G__5790);
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.reverse(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures))], 0));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_(coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_(cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_(cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__5791 = fixtures_types();
  var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5791, 0, null);
  var types = vec__5791;
  if (cljs.core.not_any_QMARK_(cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error(["Assert failed: ", "Fixtures may not be of mixed types", "\n", "(not-any? nil? types)"].join(""));
  }
  if (2 > cljs.core.count(types)) {
  } else {
    throw new Error(["Assert failed: ", "fixtures specified in :once and :each must be of the same type", "\n", "(\x3e 2 (count types))"].join(""));
  }
  var G__5795 = type;
  var G__5796 = new cljs.core.Keyword(null, "async", "async", 1050769601);
  var fexpr__5794 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946), new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162), true], null);
  return fexpr__5794.cljs$core$IFn$_invoke$arity$2 ? fexpr__5794.cljs$core$IFn$_invoke$arity$2(G__5795, G__5796) : fexpr__5794.call(null, G__5795, G__5796);
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.test.async_QMARK_(obj)) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__5797) {
    var vec__5798 = p__5797;
    var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5798, 0, null);
    var vars__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5798, 1, null);
    return function(vec__5798, ns, vars__$1) {
      return function() {
        return cljs.test.block(function() {
          var env = cljs.test.get_current_env();
          var once_fixtures = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__5801 = cljs.test.execution_strategy(once_fixtures, each_fixtures);
          var G__5801__$1 = G__5801 instanceof cljs.core.Keyword ? G__5801.fqn : null;
          switch(G__5801__$1) {
            case "async":
              return cljs.test.wrap_map_fixtures(once_fixtures, cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)], 
              0)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures(each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1) {
                return function() {
                  var G__5803 = function(each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1) {
                    return function() {
                      var seq__5804 = cljs.core.seq(vars__$1);
                      var chunk__5805 = null;
                      var count__5806 = 0;
                      var i__5807 = 0;
                      while (true) {
                        if (i__5807 < count__5806) {
                          var v = chunk__5805.cljs$core$IIndexed$_nth$arity$2(null, i__5807);
                          var temp__5720__auto___5813 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));
                          if (cljs.core.truth_(temp__5720__auto___5813)) {
                            var t_5814 = temp__5720__auto___5813;
                            var G__5810_5815 = function(seq__5804, chunk__5805, count__5806, i__5807, t_5814, temp__5720__auto___5813, v, each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block(cljs.test.test_var_block_STAR_(v, cljs.test.disable_async(t_5814)));
                              };
                            }(seq__5804, chunk__5805, count__5806, i__5807, t_5814, temp__5720__auto___5813, v, each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1);
                            each_fixture_fn.cljs$core$IFn$_invoke$arity$1 ? each_fixture_fn.cljs$core$IFn$_invoke$arity$1(G__5810_5815) : each_fixture_fn.call(null, G__5810_5815);
                          } else {
                          }
                          var G__5816 = seq__5804;
                          var G__5817 = chunk__5805;
                          var G__5818 = count__5806;
                          var G__5819 = i__5807 + 1;
                          seq__5804 = G__5816;
                          chunk__5805 = G__5817;
                          count__5806 = G__5818;
                          i__5807 = G__5819;
                          continue;
                        } else {
                          var temp__5720__auto__ = cljs.core.seq(seq__5804);
                          if (temp__5720__auto__) {
                            var seq__5804__$1 = temp__5720__auto__;
                            if (cljs.core.chunked_seq_QMARK_(seq__5804__$1)) {
                              var c__4550__auto__ = cljs.core.chunk_first(seq__5804__$1);
                              var G__5820 = cljs.core.chunk_rest(seq__5804__$1);
                              var G__5821 = c__4550__auto__;
                              var G__5822 = cljs.core.count(c__4550__auto__);
                              var G__5823 = 0;
                              seq__5804 = G__5820;
                              chunk__5805 = G__5821;
                              count__5806 = G__5822;
                              i__5807 = G__5823;
                              continue;
                            } else {
                              var v = cljs.core.first(seq__5804__$1);
                              var temp__5720__auto___5824__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));
                              if (cljs.core.truth_(temp__5720__auto___5824__$1)) {
                                var t_5825 = temp__5720__auto___5824__$1;
                                var G__5811_5826 = function(seq__5804, chunk__5805, count__5806, i__5807, t_5825, temp__5720__auto___5824__$1, v, seq__5804__$1, temp__5720__auto__, each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block(cljs.test.test_var_block_STAR_(v, cljs.test.disable_async(t_5825)));
                                  };
                                }(seq__5804, chunk__5805, count__5806, i__5807, t_5825, temp__5720__auto___5824__$1, v, seq__5804__$1, temp__5720__auto__, each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1);
                                each_fixture_fn.cljs$core$IFn$_invoke$arity$1 ? each_fixture_fn.cljs$core$IFn$_invoke$arity$1(G__5811_5826) : each_fixture_fn.call(null, G__5811_5826);
                              } else {
                              }
                              var G__5827 = cljs.core.next(seq__5804__$1);
                              var G__5828 = null;
                              var G__5829 = 0;
                              var G__5830 = 0;
                              seq__5804 = G__5827;
                              chunk__5805 = G__5828;
                              count__5806 = G__5829;
                              i__5807 = G__5830;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1);
                  var fexpr__5802 = cljs.test.join_fixtures(once_fixtures);
                  return fexpr__5802.cljs$core$IFn$_invoke$arity$1 ? fexpr__5802.cljs$core$IFn$_invoke$arity$1(G__5803) : fexpr__5802.call(null, G__5803);
                };
              }(each_fixture_fn, G__5801, G__5801__$1, env, once_fixtures, each_fixtures, vec__5798, ns, vars__$1)], null);
              break;
            default:
              throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__5801__$1)].join(""));
          }
        }());
      };
    }(vec__5798, ns, vars__$1);
  }, cljs.core.group_by(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.test.test_vars_block(vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var G__5831 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null);
    return cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__5831) : cljs.test.report.call(null, G__5831);
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("io.axrs.shadow_destructure_issue_test");
goog.require("cljs.core");
goog.require("cljs.test");
io.axrs.shadow_destructure_issue_test.destructure_test = function io$axrs$shadow_destructure_issue_test$destructure_test() {
  return cljs.test.test_var(io.axrs.shadow_destructure_issue_test.destructure_test.cljs$lang$var);
};
io.axrs.shadow_destructure_issue_test.destructure_test.cljs$lang$test = function() {
  var f_5841 = function() {
    var G__5842__delegate = function(p__5834) {
      var vec__5835 = p__5834;
      var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5835, 0, null);
      var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5835, 1, null);
      cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([a, b], 0));
      return a;
    };
    var G__5842 = function(var_args) {
      var p__5834 = null;
      if (arguments.length > 0) {
        var G__5843__i = 0, G__5843__a = new Array(arguments.length - 0);
        while (G__5843__i < G__5843__a.length) {
          G__5843__a[G__5843__i] = arguments[G__5843__i + 0];
          ++G__5843__i;
        }
        p__5834 = new cljs.core.IndexedSeq(G__5843__a, 0, null);
      }
      return G__5842__delegate.call(this, p__5834);
    };
    G__5842.cljs$lang$maxFixedArity = 0;
    G__5842.cljs$lang$applyTo = function(arglist__5844) {
      var p__5834 = cljs.core.seq(arglist__5844);
      return G__5842__delegate(p__5834);
    };
    G__5842.cljs$core$IFn$_invoke$arity$variadic = G__5842__delegate;
    return G__5842;
  }();
  try {
    var values__5487__auto___5845 = new cljs.core.List(null, f_5841(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null], 0)), null, 1, null);
    var result__5488__auto___5846 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_, values__5487__auto___5845);
    if (cljs.core.truth_(result__5488__auto___5846)) {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons(cljs.core.nil_QMARK_, values__5487__auto___5845), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__5487__auto___5845), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e5838) {
    var t__5532__auto___5847 = e5838;
    cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__5532__auto___5847, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__5487__auto___5848 = new cljs.core.List(null, 1, new cljs.core.List(null, f_5841(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([1], 0)), null, 1, null), 2, null);
    var result__5488__auto___5849 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_, values__5487__auto___5848);
    if (cljs.core.truth_(result__5488__auto___5849)) {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons(cljs.core._EQ_, values__5487__auto___5848), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__5487__auto___5848), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e5839) {
    var t__5532__auto___5850 = e5839;
    cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__5532__auto___5850, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__5487__auto___5851 = new cljs.core.List(null, 1, new cljs.core.List(null, f_5841(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([1, 2], 0)), null, 1, null), 2, null);
    var result__5488__auto___5852 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_, values__5487__auto___5851);
    if (cljs.core.truth_(result__5488__auto___5852)) {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons(cljs.core._EQ_, values__5487__auto___5851), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__5487__auto___5851), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e5840) {
    var t__5532__auto___5853 = e5840;
    cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "f", "f", 43394975, null), 1, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__5532__auto___5853, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  return null;
};
io.axrs.shadow_destructure_issue_test.destructure_test.cljs$lang$var = new cljs.core.Var(function() {
  return io.axrs.shadow_destructure_issue_test.destructure_test;
}, new cljs.core.Symbol("io.axrs.shadow-destructure-issue-test", "destructure-test", "io.axrs.shadow-destructure-issue-test/destructure-test", 450058482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "io.axrs.shadow-destructure-issue-test", "io.axrs.shadow-destructure-issue-test", 1635475742, null), new cljs.core.Symbol(null, "destructure-test", "destructure-test", -1371321614, null), "test/io/axrs/shadow_destructure_issue_test.cljs", 
26, 1, 5, 5, cljs.core.List.EMPTY, null, cljs.core.truth_(io.axrs.shadow_destructure_issue_test.destructure_test) ? io.axrs.shadow_destructure_issue_test.destructure_test.cljs$lang$test : null]));
cljs.test.run_block(function() {
  var env5854 = cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
  var summary5855 = cljs.core.volatile_BANG_(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env5854, summary5855) {
    return function() {
      cljs.test.set_env_BANG_(env5854);
      cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "io.axrs.shadow-destructure-issue-test", "io.axrs.shadow-destructure-issue-test", 1635475742, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block(function() {
        var env__5600__auto__ = cljs.test.get_current_env();
        return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__5600__auto__, env5854, summary5855) {
          return function() {
            if (env__5600__auto__ == null) {
              cljs.test.set_env_BANG_(cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0());
            } else {
            }
            return null;
          };
        }(env__5600__auto__, env5854, summary5855)], null), cljs.test.test_vars_block(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return io.axrs.shadow_destructure_issue_test.destructure_test;
        }, new cljs.core.Symbol("io.axrs.shadow-destructure-issue-test", "destructure-test", "io.axrs.shadow-destructure-issue-test/destructure-test", 450058482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "io.axrs.shadow-destructure-issue-test", "io.axrs.shadow-destructure-issue-test", 1635475742, null), new cljs.core.Symbol(null, "destructure-test", "destructure-test", 
        -1371321614, null), "test/io/axrs/shadow_destructure_issue_test.cljs", 26, 1, 5, 5, cljs.core.List.EMPTY, null, cljs.core.truth_(io.axrs.shadow_destructure_issue_test.destructure_test) ? io.axrs.shadow_destructure_issue_test.destructure_test.cljs$lang$test : null]))], null)), cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__5600__auto__, env5854, summary5855) {
          return function() {
            if (env__5600__auto__ == null) {
              return cljs.test.clear_env_BANG_();
            } else {
              return null;
            }
          };
        }(env__5600__auto__, env5854, summary5855)], null)], 0));
      }());
    };
  }(env5854, summary5855), function(env5854, summary5855) {
    return function() {
      return cljs.test.do_report(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "io.axrs.shadow-destructure-issue-test", "io.axrs.shadow-destructure-issue-test", 1635475742, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env5854, summary5855)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env5854, summary5855) {
    return function() {
      return summary5855.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, function() {
        var G__5857 = summary5855.cljs$core$IDeref$_deref$arity$1(null);
        var G__5858 = (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_());
        var fexpr__5856 = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.merge_with, cljs.core._PLUS_);
        return fexpr__5856.cljs$core$IFn$_invoke$arity$2 ? fexpr__5856.cljs$core$IFn$_invoke$arity$2(G__5857, G__5858) : fexpr__5856.call(null, G__5857, G__5858);
      }());
    };
  }(env5854, summary5855)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env5854, summary5855) {
    return function() {
      cljs.test.set_env_BANG_(env5854);
      cljs.test.do_report(cljs.core.deref(summary5855));
      var G__5859_5860 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(summary5855), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563));
      cljs.test.report.cljs$core$IFn$_invoke$arity$1 ? cljs.test.report.cljs$core$IFn$_invoke$arity$1(G__5859_5860) : cljs.test.report.call(null, G__5859_5860);
      return cljs.test.clear_env_BANG_();
    };
  }(env5854, summary5855)], null));
}());
